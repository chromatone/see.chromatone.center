{"version":3,"file":"curved-arrows.esm.js","sources":["../src/utils.ts","../src/getBoxToBoxArrow.ts","../src/getArrow.ts"],"sourcesContent":["export type RectSide = 'top' | 'right' | 'bottom' | 'left'\nexport type Vec2 = { x: number; y: number }\nexport type Box = {\n  x: number\n  y: number\n  w: number\n  h: number\n}\n\n/** Calculate the distance of two points. */\nexport function distanceOf(p1: Vec2, p2: Vec2): number {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2))\n}\n\n/**\n * @param box\n * @param size Add `size` to all edges.\n */\nexport function growBox(box: Box, size: number): Box {\n  return {\n    x: box.x - size,\n    y: box.y - size,\n    w: box.w + 2 * size,\n    h: box.h + 2 * size,\n  }\n}\n\nexport function isPointInBox(point: Vec2, box: Box): boolean {\n  return (\n    point.x > box.x &&\n    point.x < box.x + box.w &&\n    point.y > box.y &&\n    point.y < box.y + box.h\n  )\n}\n\n/** Calculate the control point. */\nexport function controlPointOf(\n  target: Vec2,\n  another: Vec2,\n  sideOfTarget: RectSide\n) {\n  const margin = 30\n  switch (sideOfTarget) {\n    case 'top': {\n      return {\n        x: target.x,\n        y: Math.min(target.y - (target.y - another.y) / 2, target.y - margin),\n      }\n    }\n    case 'bottom': {\n      return {\n        x: target.x,\n        y: Math.max(target.y - (target.y - another.y) / 2, target.y + margin),\n      }\n    }\n    case 'left': {\n      return {\n        x: Math.min(target.x - (target.x - another.x) / 2, target.x - margin),\n        y: target.y,\n      }\n    }\n    case 'right': {\n      return {\n        x: Math.max(target.x - (target.x - another.x) / 2, target.x + margin),\n        y: target.y,\n      }\n    }\n  }\n}\n\n/** Return the entering angle of a rectangle side. */\nexport function angleOf(enteringSide: RectSide): number {\n  switch (enteringSide) {\n    case 'left':\n      return 0\n    case 'top':\n      return 90\n    case 'right':\n      return 180\n    case 'bottom':\n      return 270\n  }\n}\n","import {\n  angleOf,\n  controlPointOf,\n  distanceOf,\n  growBox,\n  isPointInBox,\n  RectSide,\n} from './utils'\n\n/** Parameters that describe an arrow. */\nexport type ArrowDescriptor = [\n  /** start point */\n  /* sx: */ number,\n  /* sy: */ number,\n  /** control point for start point */\n  /* c1x: */ number,\n  /* c1y: */ number,\n  /** control point for end point */\n  /* c2x: */ number,\n  /* c2y: */ number,\n  /** end point */\n  /* ex: */ number,\n  /* ey: */ number,\n  /** angle of end point */\n  /* ae: */ number,\n  /** angle of start point */\n  /* as: */ number\n]\n\nexport type ArrowOptions = Partial<{\n  padStart: number\n  padEnd: number\n}>\n\n/**\n * Get parameters to draw an S-curved line between two boxes.\n * \n * @returns [sx, sy, c1x, c1y, c2x, c2y, ex, ey, ae, as]\n * @example\n * const arrowHeadSize = 9\n * const [\n *  startX, startY,\n *  controlStartX, controlStartY,\n *  controlEndX, controlEndY,\n *  endX, endY, \n *  endAngle,\n *  startAngle\n * ] = getBoxToBoxArrow(0, 0, 100, 100, 200, 200, 200, 100, {\n *   padStart: 0,\n *   padEnd: arrowHeadSize, // make room for drawing arrow head\n * })\n */\nexport default function getBoxToBoxArrow(\n  /** start box */\n  x0: number,\n  y0: number,\n  w0: number,\n  h0: number,\n  /** end box */\n  x1: number,\n  y1: number,\n  w1: number,\n  h1: number,\n  userOptions?: ArrowOptions\n): ArrowDescriptor {\n  const options = { padStart: 0, padEnd: 0, ...userOptions }\n\n  /** Points of start box. */\n  const startBox = { x: x0, y: y0, w: w0, h: h0 }\n  // const centerOfStartBox = centerPointOf(startBox)\n  const startAtTop = {\n    x: x0 + w0 / 2,\n    y: y0 - 2 * options.padStart,\n  }\n  const startAtBottom = {\n    x: x0 + w0 / 2,\n    y: y0 + h0 + 2 * options.padStart,\n  }\n  const startAtLeft = {\n    x: x0 - 2 * options.padStart,\n    y: y0 + h0 / 2,\n  }\n  const startAtRight = {\n    x: x0 + w0 + 2 * options.padStart,\n    y: y0 + h0 / 2,\n  }\n\n  /** Points of end box. */\n  const endBox = { x: x1, y: y1, w: w1, h: h1 }\n  // const centerOfEndBox = centerPointOf(endBox)\n  const endAtTop = { x: x1 + w1 / 2, y: y1 - 2 * options.padEnd }\n  const endAtBottom = {\n    x: x1 + w1 / 2,\n    y: y1 + h1 + 2 * options.padEnd,\n  }\n  const endAtLeft = { x: x1 - 2 * options.padEnd, y: y1 + h1 / 2 }\n  const endAtRight = {\n    x: x1 + w1 + 2 * options.padEnd,\n    y: y1 + h1 / 2,\n  }\n\n  const sides: RectSide[] = ['top', 'right', 'bottom', 'left']\n  const startPoints = [startAtTop, startAtRight, startAtBottom, startAtLeft]\n  const endPoints = [endAtTop, endAtRight, endAtBottom, endAtLeft]\n\n  let shortestDistance = 1 / 0\n  let bestStartPoint = startAtTop\n  let bestEndPoint = endAtTop\n  let bestStartSide: RectSide = 'top'\n  let bestEndSide: RectSide = 'top'\n\n  const keepOutZone = 15\n  for (let startSideId = 0; startSideId < sides.length; startSideId++) {\n    const startPoint = startPoints[startSideId]\n    if (isPointInBox(startPoint, growBox(endBox, keepOutZone))) continue\n\n    for (let endSideId = 0; endSideId < sides.length; endSideId++) {\n      const endPoint = endPoints[endSideId]\n\n      /**\n       * If the start point is in the rectangle of end, or the end point\n       * is in the rectangle of start, this combination is abandoned.\n       */\n      if (isPointInBox(endPoint, growBox(startBox, keepOutZone))) continue\n\n      const d = distanceOf(startPoint, endPoint)\n      if (d < shortestDistance) {\n        shortestDistance = d\n        bestStartPoint = startPoint\n        bestEndPoint = endPoint\n        bestStartSide = sides[startSideId]\n        bestEndSide = sides[endSideId]\n      }\n    }\n  }\n\n  const controlPointForStartPoint = controlPointOf(\n    bestStartPoint,\n    bestEndPoint,\n    bestStartSide\n  )\n  const controlPointForEndPoint = controlPointOf(\n    bestEndPoint,\n    bestStartPoint,\n    bestEndSide\n  )\n\n  return [\n    bestStartPoint.x,\n    bestStartPoint.y,\n    controlPointForStartPoint.x,\n    controlPointForStartPoint.y,\n    controlPointForEndPoint.x,\n    controlPointForEndPoint.y,\n    bestEndPoint.x,\n    bestEndPoint.y,\n    angleOf(bestEndSide),\n    angleOf(bestStartSide),\n  ]\n}\n","import getBoxToBoxArrow, {\n  ArrowDescriptor,\n  ArrowOptions,\n} from './getBoxToBoxArrow'\n\n/**\n * Get parameters to draw an S-curved line between two points.\n * \n * @param x0 \n * @param y0 \n * @param x1 \n * @param y1 \n * @param userOptions \n * @returns [sx, sy, c1x, c1y, c2x, c2y, ex, ey, ae, as]\n * @example\n * const arrowHeadSize = 9\n * const arrow = getArrow(0, 0, 100, 200, {\n *   padStart: 0,\n *   padEnd: arrowHeadSize,\n * })\n * const [sx, sy, c1x, c1y, c2x, c2y ex, ey, ae, as] = arrow\n */\nexport default function getArrow(\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  userOptions?: ArrowOptions\n): ArrowDescriptor {\n  return getBoxToBoxArrow(x0, y0, 0, 0, x1, y1, 0, 0, userOptions)\n}\n"],"names":["distanceOf","p1","p2","Math","sqrt","pow","x","y","growBox","box","size","w","h","isPointInBox","point","controlPointOf","target","another","sideOfTarget","margin","min","max","angleOf","enteringSide","getBoxToBoxArrow","x0","y0","w0","h0","x1","y1","w1","h1","userOptions","options","padStart","padEnd","startBox","startAtTop","startAtBottom","startAtLeft","startAtRight","endBox","endAtTop","endAtBottom","endAtLeft","endAtRight","sides","startPoints","endPoints","shortestDistance","bestStartPoint","bestEndPoint","bestStartSide","bestEndSide","keepOutZone","startSideId","length","startPoint","endSideId","endPoint","d","controlPointForStartPoint","controlPointForEndPoint","getArrow"],"mappings":"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"}