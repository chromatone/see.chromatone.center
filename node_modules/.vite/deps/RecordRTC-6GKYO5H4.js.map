{
  "version": 3,
  "sources": ["../../.pnpm/chromatone.center@1.9.0/node_modules/chromatone.center/lib/RecordRTC.js"],
  "sourcesContent": ["import { c as commonjsGlobal } from \"./index.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: \"Module\" }));\n}\nvar RecordRTC$1 = { exports: {} };\n(function(module) {\n  /**\n   * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \n   * @summary Record audio, video or screen inside the browser.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef RecordRTC\n   * @class\n   * @example\n   * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\n   *     type: 'video', // audio or video or gif or canvas\n   *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\n   * });\n   * recorder.startRecording();\n   * @see For further information:\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\n   * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\n   */\n  function RecordRTC2(mediaStream, config) {\n    if (!mediaStream) {\n      throw \"First parameter is required.\";\n    }\n    config = config || {\n      type: \"video\"\n    };\n    config = new RecordRTCConfiguration(mediaStream, config);\n    var self = this;\n    function startRecording(config2) {\n      if (!config.disableLogs) {\n        console.log(\"RecordRTC version: \", self.version);\n      }\n      if (!!config2) {\n        config = new RecordRTCConfiguration(mediaStream, config2);\n      }\n      if (!config.disableLogs) {\n        console.log(\"started recording \" + config.type + \" stream.\");\n      }\n      if (mediaRecorder) {\n        mediaRecorder.clearRecordedData();\n        mediaRecorder.record();\n        setState(\"recording\");\n        if (self.recordingDuration) {\n          handleRecordingDuration();\n        }\n        return self;\n      }\n      initRecorder(function() {\n        if (self.recordingDuration) {\n          handleRecordingDuration();\n        }\n      });\n      return self;\n    }\n    function initRecorder(initCallback) {\n      if (initCallback) {\n        config.initCallback = function() {\n          initCallback();\n          initCallback = config.initCallback = null;\n        };\n      }\n      var Recorder = new GetRecorderType(mediaStream, config);\n      mediaRecorder = new Recorder(mediaStream, config);\n      mediaRecorder.record();\n      setState(\"recording\");\n      if (!config.disableLogs) {\n        console.log(\"Initialized recorderType:\", mediaRecorder.constructor.name, \"for output-type:\", config.type);\n      }\n    }\n    function stopRecording(callback) {\n      callback = callback || function() {\n      };\n      if (!mediaRecorder) {\n        warningLog();\n        return;\n      }\n      if (self.state === \"paused\") {\n        self.resumeRecording();\n        setTimeout(function() {\n          stopRecording(callback);\n        }, 1);\n        return;\n      }\n      if (self.state !== \"recording\" && !config.disableLogs) {\n        console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\n      }\n      if (!config.disableLogs) {\n        console.log(\"Stopped recording \" + config.type + \" stream.\");\n      }\n      if (config.type !== \"gif\") {\n        mediaRecorder.stop(_callback);\n      } else {\n        mediaRecorder.stop();\n        _callback();\n      }\n      setState(\"stopped\");\n      function _callback(__blob) {\n        if (!mediaRecorder) {\n          if (typeof callback.call === \"function\") {\n            callback.call(self, \"\");\n          } else {\n            callback(\"\");\n          }\n          return;\n        }\n        Object.keys(mediaRecorder).forEach(function(key) {\n          if (typeof mediaRecorder[key] === \"function\") {\n            return;\n          }\n          self[key] = mediaRecorder[key];\n        });\n        var blob = mediaRecorder.blob;\n        if (!blob) {\n          if (__blob) {\n            mediaRecorder.blob = blob = __blob;\n          } else {\n            throw \"Recording failed.\";\n          }\n        }\n        if (blob && !config.disableLogs) {\n          console.log(blob.type, \"->\", bytesToSize(blob.size));\n        }\n        if (callback) {\n          var url;\n          try {\n            url = URL.createObjectURL(blob);\n          } catch (e) {\n          }\n          if (typeof callback.call === \"function\") {\n            callback.call(self, url);\n          } else {\n            callback(url);\n          }\n        }\n        if (!config.autoWriteToDisk) {\n          return;\n        }\n        getDataURL(function(dataURL) {\n          var parameter = {};\n          parameter[config.type + \"Blob\"] = dataURL;\n          DiskStorage.Store(parameter);\n        });\n      }\n    }\n    function pauseRecording() {\n      if (!mediaRecorder) {\n        warningLog();\n        return;\n      }\n      if (self.state !== \"recording\") {\n        if (!config.disableLogs) {\n          console.warn(\"Unable to pause the recording. Recording state: \", self.state);\n        }\n        return;\n      }\n      setState(\"paused\");\n      mediaRecorder.pause();\n      if (!config.disableLogs) {\n        console.log(\"Paused recording.\");\n      }\n    }\n    function resumeRecording() {\n      if (!mediaRecorder) {\n        warningLog();\n        return;\n      }\n      if (self.state !== \"paused\") {\n        if (!config.disableLogs) {\n          console.warn(\"Unable to resume the recording. Recording state: \", self.state);\n        }\n        return;\n      }\n      setState(\"recording\");\n      mediaRecorder.resume();\n      if (!config.disableLogs) {\n        console.log(\"Resumed recording.\");\n      }\n    }\n    function readFile(_blob) {\n      postMessage(new FileReaderSync().readAsDataURL(_blob));\n    }\n    function getDataURL(callback, _mediaRecorder) {\n      if (!callback) {\n        throw \"Pass a callback function over getDataURL.\";\n      }\n      var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\n      if (!blob) {\n        if (!config.disableLogs) {\n          console.warn(\"Blob encoder did not finish its job yet.\");\n        }\n        setTimeout(function() {\n          getDataURL(callback, _mediaRecorder);\n        }, 1e3);\n        return;\n      }\n      if (typeof Worker !== \"undefined\" && !navigator.mozGetUserMedia) {\n        var webWorker = processInWebWorker(readFile);\n        webWorker.onmessage = function(event) {\n          callback(event.data);\n        };\n        webWorker.postMessage(blob);\n      } else {\n        var reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onload = function(event) {\n          callback(event.target.result);\n        };\n      }\n      function processInWebWorker(_function) {\n        try {\n          var blob2 = URL.createObjectURL(new Blob([\n            _function.toString(),\n            \"this.onmessage =  function (eee) {\" + _function.name + \"(eee.data);}\"\n          ], {\n            type: \"application/javascript\"\n          }));\n          var worker = new Worker(blob2);\n          URL.revokeObjectURL(blob2);\n          return worker;\n        } catch (e) {\n        }\n      }\n    }\n    function handleRecordingDuration(counter) {\n      counter = counter || 0;\n      if (self.state === \"paused\") {\n        setTimeout(function() {\n          handleRecordingDuration(counter);\n        }, 1e3);\n        return;\n      }\n      if (self.state === \"stopped\") {\n        return;\n      }\n      if (counter >= self.recordingDuration) {\n        stopRecording(self.onRecordingStopped);\n        return;\n      }\n      counter += 1e3;\n      setTimeout(function() {\n        handleRecordingDuration(counter);\n      }, 1e3);\n    }\n    function setState(state) {\n      if (!self) {\n        return;\n      }\n      self.state = state;\n      if (typeof self.onStateChanged.call === \"function\") {\n        self.onStateChanged.call(self, state);\n      } else {\n        self.onStateChanged(state);\n      }\n    }\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + \" recorder.\";\n    function warningLog() {\n      if (config.disableLogs === true) {\n        return;\n      }\n      console.warn(WARNING);\n    }\n    var mediaRecorder;\n    var returnObject = {\n      startRecording,\n      stopRecording,\n      pauseRecording,\n      resumeRecording,\n      initRecorder,\n      setRecordingDuration: function(recordingDuration, callback) {\n        if (typeof recordingDuration === \"undefined\") {\n          throw \"recordingDuration is required.\";\n        }\n        if (typeof recordingDuration !== \"number\") {\n          throw \"recordingDuration must be a number.\";\n        }\n        self.recordingDuration = recordingDuration;\n        self.onRecordingStopped = callback || function() {\n        };\n        return {\n          onRecordingStopped: function(callback2) {\n            self.onRecordingStopped = callback2;\n          }\n        };\n      },\n      clearRecordedData: function() {\n        if (!mediaRecorder) {\n          warningLog();\n          return;\n        }\n        mediaRecorder.clearRecordedData();\n        if (!config.disableLogs) {\n          console.log(\"Cleared old recorded data.\");\n        }\n      },\n      getBlob: function() {\n        if (!mediaRecorder) {\n          warningLog();\n          return;\n        }\n        return mediaRecorder.blob;\n      },\n      getDataURL,\n      toURL: function() {\n        if (!mediaRecorder) {\n          warningLog();\n          return;\n        }\n        return URL.createObjectURL(mediaRecorder.blob);\n      },\n      getInternalRecorder: function() {\n        return mediaRecorder;\n      },\n      save: function(fileName) {\n        if (!mediaRecorder) {\n          warningLog();\n          return;\n        }\n        invokeSaveAsDialog(mediaRecorder.blob, fileName);\n      },\n      getFromDisk: function(callback) {\n        if (!mediaRecorder) {\n          warningLog();\n          return;\n        }\n        RecordRTC2.getFromDisk(config.type, callback);\n      },\n      setAdvertisementArray: function(arrayOfWebPImages) {\n        config.advertisement = [];\n        var length = arrayOfWebPImages.length;\n        for (var i = 0; i < length; i++) {\n          config.advertisement.push({\n            duration: i,\n            image: arrayOfWebPImages[i]\n          });\n        }\n      },\n      blob: null,\n      bufferSize: 0,\n      sampleRate: 0,\n      buffer: null,\n      reset: function() {\n        if (self.state === \"recording\" && !config.disableLogs) {\n          console.warn(\"Stop an active recorder.\");\n        }\n        if (mediaRecorder && typeof mediaRecorder.clearRecordedData === \"function\") {\n          mediaRecorder.clearRecordedData();\n        }\n        mediaRecorder = null;\n        setState(\"inactive\");\n        self.blob = null;\n      },\n      onStateChanged: function(state) {\n        if (!config.disableLogs) {\n          console.log(\"Recorder state changed:\", state);\n        }\n      },\n      state: \"inactive\",\n      getState: function() {\n        return self.state;\n      },\n      destroy: function() {\n        var disableLogsCache = config.disableLogs;\n        config = {\n          disableLogs: true\n        };\n        self.reset();\n        setState(\"destroyed\");\n        returnObject = self = null;\n        if (Storage.AudioContextConstructor) {\n          Storage.AudioContextConstructor.close();\n          Storage.AudioContextConstructor = null;\n        }\n        config.disableLogs = disableLogsCache;\n        if (!config.disableLogs) {\n          console.log(\"RecordRTC is destroyed.\");\n        }\n      },\n      version: \"5.6.2\"\n    };\n    if (!this) {\n      self = returnObject;\n      return returnObject;\n    }\n    for (var prop in returnObject) {\n      this[prop] = returnObject[prop];\n    }\n    self = this;\n    return returnObject;\n  }\n  RecordRTC2.version = \"5.6.2\";\n  {\n    module.exports = RecordRTC2;\n  }\n  RecordRTC2.getFromDisk = function(type, callback) {\n    if (!callback) {\n      throw \"callback is mandatory.\";\n    }\n    console.log(\"Getting recorded \" + (type === \"all\" ? \"blobs\" : type + \" blob \") + \" from disk!\");\n    DiskStorage.Fetch(function(dataURL, _type) {\n      if (type !== \"all\" && _type === type + \"Blob\" && callback) {\n        callback(dataURL);\n      }\n      if (type === \"all\" && callback) {\n        callback(dataURL, _type.replace(\"Blob\", \"\"));\n      }\n    });\n  };\n  RecordRTC2.writeToDisk = function(options) {\n    console.log(\"Writing recorded blob(s) to disk!\");\n    options = options || {};\n    if (options.audio && options.video && options.gif) {\n      options.audio.getDataURL(function(audioDataURL) {\n        options.video.getDataURL(function(videoDataURL) {\n          options.gif.getDataURL(function(gifDataURL) {\n            DiskStorage.Store({\n              audioBlob: audioDataURL,\n              videoBlob: videoDataURL,\n              gifBlob: gifDataURL\n            });\n          });\n        });\n      });\n    } else if (options.audio && options.video) {\n      options.audio.getDataURL(function(audioDataURL) {\n        options.video.getDataURL(function(videoDataURL) {\n          DiskStorage.Store({\n            audioBlob: audioDataURL,\n            videoBlob: videoDataURL\n          });\n        });\n      });\n    } else if (options.audio && options.gif) {\n      options.audio.getDataURL(function(audioDataURL) {\n        options.gif.getDataURL(function(gifDataURL) {\n          DiskStorage.Store({\n            audioBlob: audioDataURL,\n            gifBlob: gifDataURL\n          });\n        });\n      });\n    } else if (options.video && options.gif) {\n      options.video.getDataURL(function(videoDataURL) {\n        options.gif.getDataURL(function(gifDataURL) {\n          DiskStorage.Store({\n            videoBlob: videoDataURL,\n            gifBlob: gifDataURL\n          });\n        });\n      });\n    } else if (options.audio) {\n      options.audio.getDataURL(function(audioDataURL) {\n        DiskStorage.Store({\n          audioBlob: audioDataURL\n        });\n      });\n    } else if (options.video) {\n      options.video.getDataURL(function(videoDataURL) {\n        DiskStorage.Store({\n          videoBlob: videoDataURL\n        });\n      });\n    } else if (options.gif) {\n      options.gif.getDataURL(function(gifDataURL) {\n        DiskStorage.Store({\n          gifBlob: gifDataURL\n        });\n      });\n    }\n  };\n  /**\n   * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\n   * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef RecordRTCConfiguration\n   * @class\n   * @example\n   * var options = RecordRTCConfiguration(mediaStream, options);\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n   * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\n   */\n  function RecordRTCConfiguration(mediaStream, config) {\n    if (!config.recorderType && !config.type) {\n      if (!!config.audio && !!config.video) {\n        config.type = \"video\";\n      } else if (!!config.audio && !config.video) {\n        config.type = \"audio\";\n      }\n    }\n    if (config.recorderType && !config.type) {\n      if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || typeof WebAssemblyRecorder !== \"undefined\" && config.recorderType === WebAssemblyRecorder) {\n        config.type = \"video\";\n      } else if (config.recorderType === GifRecorder) {\n        config.type = \"gif\";\n      } else if (config.recorderType === StereoAudioRecorder) {\n        config.type = \"audio\";\n      } else if (config.recorderType === MediaStreamRecorder) {\n        if (getTracks(mediaStream, \"audio\").length && getTracks(mediaStream, \"video\").length) {\n          config.type = \"video\";\n        } else if (!getTracks(mediaStream, \"audio\").length && getTracks(mediaStream, \"video\").length) {\n          config.type = \"video\";\n        } else if (getTracks(mediaStream, \"audio\").length && !getTracks(mediaStream, \"video\").length) {\n          config.type = \"audio\";\n        } else\n          ;\n      }\n    }\n    if (typeof MediaStreamRecorder !== \"undefined\" && typeof MediaRecorder !== \"undefined\" && \"requestData\" in MediaRecorder.prototype) {\n      if (!config.mimeType) {\n        config.mimeType = \"video/webm\";\n      }\n      if (!config.type) {\n        config.type = config.mimeType.split(\"/\")[0];\n      }\n      if (!config.bitsPerSecond)\n        ;\n    }\n    if (!config.type) {\n      if (config.mimeType) {\n        config.type = config.mimeType.split(\"/\")[0];\n      }\n      if (!config.type) {\n        config.type = \"audio\";\n      }\n    }\n    return config;\n  }\n  /**\n   * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\n   * @summary It returns best recorder-type available for your browser.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef GetRecorderType\n   * @class\n   * @example\n   * var RecorderType = GetRecorderType(options);\n   * var recorder = new RecorderType(options);\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n   * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n   */\n  function GetRecorderType(mediaStream, config) {\n    var recorder;\n    if (isChrome || isEdge || isOpera) {\n      recorder = StereoAudioRecorder;\n    }\n    if (typeof MediaRecorder !== \"undefined\" && \"requestData\" in MediaRecorder.prototype && !isChrome) {\n      recorder = MediaStreamRecorder;\n    }\n    if (config.type === \"video\" && (isChrome || isOpera)) {\n      recorder = WhammyRecorder;\n      if (typeof WebAssemblyRecorder !== \"undefined\" && typeof ReadableStream !== \"undefined\") {\n        recorder = WebAssemblyRecorder;\n      }\n    }\n    if (config.type === \"gif\") {\n      recorder = GifRecorder;\n    }\n    if (config.type === \"canvas\") {\n      recorder = CanvasRecorder;\n    }\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== \"undefined\" && \"requestData\" in MediaRecorder.prototype) {\n      if (getTracks(mediaStream, \"video\").length || getTracks(mediaStream, \"audio\").length) {\n        if (config.type === \"audio\") {\n          if (typeof MediaRecorder.isTypeSupported === \"function\" && MediaRecorder.isTypeSupported(\"audio/webm\")) {\n            recorder = MediaStreamRecorder;\n          }\n        } else {\n          if (typeof MediaRecorder.isTypeSupported === \"function\" && MediaRecorder.isTypeSupported(\"video/webm\")) {\n            recorder = MediaStreamRecorder;\n          }\n        }\n      }\n    }\n    if (mediaStream instanceof Array && mediaStream.length) {\n      recorder = MultiStreamRecorder;\n    }\n    if (config.recorderType) {\n      recorder = config.recorderType;\n    }\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\n      console.log(\"Using recorderType:\", recorder.name || recorder.constructor.name);\n    }\n    if (!recorder && isSafari) {\n      recorder = MediaStreamRecorder;\n    }\n    return recorder;\n  }\n  /**\n   * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\n   * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef MRecordRTC\n   * @class\n   * @example\n   * var recorder = new MRecordRTC();\n   * recorder.addStream(MediaStream);\n   * recorder.mediaType = {\n   *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\n   *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\n   *     gif: true    // or GifRecorder\n   * };\n   * // mimeType is optional and should be set only in advance cases.\n   * recorder.mimeType = {\n   *     audio: 'audio/wav',\n   *     video: 'video/webm',\n   *     gif:   'image/gif'\n   * };\n   * recorder.startRecording();\n   * @see For further information:\n   * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\n   * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n   * @requires {@link RecordRTC}\n   */\n  function MRecordRTC(mediaStream) {\n    this.addStream = function(_mediaStream) {\n      if (_mediaStream) {\n        mediaStream = _mediaStream;\n      }\n    };\n    this.mediaType = {\n      audio: true,\n      video: true\n    };\n    this.startRecording = function() {\n      var mediaType = this.mediaType;\n      var recorderType;\n      var mimeType = this.mimeType || {\n        audio: null,\n        video: null,\n        gif: null\n      };\n      if (typeof mediaType.audio !== \"function\" && isMediaRecorderCompatible() && !getTracks(mediaStream, \"audio\").length) {\n        mediaType.audio = false;\n      }\n      if (typeof mediaType.video !== \"function\" && isMediaRecorderCompatible() && !getTracks(mediaStream, \"video\").length) {\n        mediaType.video = false;\n      }\n      if (typeof mediaType.gif !== \"function\" && isMediaRecorderCompatible() && !getTracks(mediaStream, \"video\").length) {\n        mediaType.gif = false;\n      }\n      if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\n        throw \"MediaStream must have either audio or video tracks.\";\n      }\n      if (!!mediaType.audio) {\n        recorderType = null;\n        if (typeof mediaType.audio === \"function\") {\n          recorderType = mediaType.audio;\n        }\n        this.audioRecorder = new RecordRTC2(mediaStream, {\n          type: \"audio\",\n          bufferSize: this.bufferSize,\n          sampleRate: this.sampleRate,\n          numberOfAudioChannels: this.numberOfAudioChannels || 2,\n          disableLogs: this.disableLogs,\n          recorderType,\n          mimeType: mimeType.audio,\n          timeSlice: this.timeSlice,\n          onTimeStamp: this.onTimeStamp\n        });\n        if (!mediaType.video) {\n          this.audioRecorder.startRecording();\n        }\n      }\n      if (!!mediaType.video) {\n        recorderType = null;\n        if (typeof mediaType.video === \"function\") {\n          recorderType = mediaType.video;\n        }\n        var newStream = mediaStream;\n        if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === \"function\") {\n          var videoTrack = getTracks(mediaStream, \"video\")[0];\n          if (isFirefox) {\n            newStream = new MediaStream();\n            newStream.addTrack(videoTrack);\n            if (recorderType && recorderType === WhammyRecorder) {\n              recorderType = MediaStreamRecorder;\n            }\n          } else {\n            newStream = new MediaStream();\n            newStream.addTrack(videoTrack);\n          }\n        }\n        this.videoRecorder = new RecordRTC2(newStream, {\n          type: \"video\",\n          video: this.video,\n          canvas: this.canvas,\n          frameInterval: this.frameInterval || 10,\n          disableLogs: this.disableLogs,\n          recorderType,\n          mimeType: mimeType.video,\n          timeSlice: this.timeSlice,\n          onTimeStamp: this.onTimeStamp,\n          workerPath: this.workerPath,\n          webAssemblyPath: this.webAssemblyPath,\n          frameRate: this.frameRate,\n          bitrate: this.bitrate\n        });\n        if (!mediaType.audio) {\n          this.videoRecorder.startRecording();\n        }\n      }\n      if (!!mediaType.audio && !!mediaType.video) {\n        var self = this;\n        var isSingleRecorder = isMediaRecorderCompatible() === true;\n        if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\n          isSingleRecorder = false;\n        } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\n          isSingleRecorder = false;\n        }\n        if (isSingleRecorder === true) {\n          self.audioRecorder = null;\n          self.videoRecorder.startRecording();\n        } else {\n          self.videoRecorder.initRecorder(function() {\n            self.audioRecorder.initRecorder(function() {\n              self.videoRecorder.startRecording();\n              self.audioRecorder.startRecording();\n            });\n          });\n        }\n      }\n      if (!!mediaType.gif) {\n        recorderType = null;\n        if (typeof mediaType.gif === \"function\") {\n          recorderType = mediaType.gif;\n        }\n        this.gifRecorder = new RecordRTC2(mediaStream, {\n          type: \"gif\",\n          frameRate: this.frameRate || 200,\n          quality: this.quality || 10,\n          disableLogs: this.disableLogs,\n          recorderType,\n          mimeType: mimeType.gif\n        });\n        this.gifRecorder.startRecording();\n      }\n    };\n    this.stopRecording = function(callback) {\n      callback = callback || function() {\n      };\n      if (this.audioRecorder) {\n        this.audioRecorder.stopRecording(function(blobURL) {\n          callback(blobURL, \"audio\");\n        });\n      }\n      if (this.videoRecorder) {\n        this.videoRecorder.stopRecording(function(blobURL) {\n          callback(blobURL, \"video\");\n        });\n      }\n      if (this.gifRecorder) {\n        this.gifRecorder.stopRecording(function(blobURL) {\n          callback(blobURL, \"gif\");\n        });\n      }\n    };\n    this.pauseRecording = function() {\n      if (this.audioRecorder) {\n        this.audioRecorder.pauseRecording();\n      }\n      if (this.videoRecorder) {\n        this.videoRecorder.pauseRecording();\n      }\n      if (this.gifRecorder) {\n        this.gifRecorder.pauseRecording();\n      }\n    };\n    this.resumeRecording = function() {\n      if (this.audioRecorder) {\n        this.audioRecorder.resumeRecording();\n      }\n      if (this.videoRecorder) {\n        this.videoRecorder.resumeRecording();\n      }\n      if (this.gifRecorder) {\n        this.gifRecorder.resumeRecording();\n      }\n    };\n    this.getBlob = function(callback) {\n      var output = {};\n      if (this.audioRecorder) {\n        output.audio = this.audioRecorder.getBlob();\n      }\n      if (this.videoRecorder) {\n        output.video = this.videoRecorder.getBlob();\n      }\n      if (this.gifRecorder) {\n        output.gif = this.gifRecorder.getBlob();\n      }\n      if (callback) {\n        callback(output);\n      }\n      return output;\n    };\n    this.destroy = function() {\n      if (this.audioRecorder) {\n        this.audioRecorder.destroy();\n        this.audioRecorder = null;\n      }\n      if (this.videoRecorder) {\n        this.videoRecorder.destroy();\n        this.videoRecorder = null;\n      }\n      if (this.gifRecorder) {\n        this.gifRecorder.destroy();\n        this.gifRecorder = null;\n      }\n    };\n    this.getDataURL = function(callback) {\n      this.getBlob(function(blob) {\n        if (blob.audio && blob.video) {\n          getDataURL(blob.audio, function(_audioDataURL) {\n            getDataURL(blob.video, function(_videoDataURL) {\n              callback({\n                audio: _audioDataURL,\n                video: _videoDataURL\n              });\n            });\n          });\n        } else if (blob.audio) {\n          getDataURL(blob.audio, function(_audioDataURL) {\n            callback({\n              audio: _audioDataURL\n            });\n          });\n        } else if (blob.video) {\n          getDataURL(blob.video, function(_videoDataURL) {\n            callback({\n              video: _videoDataURL\n            });\n          });\n        }\n      });\n      function getDataURL(blob, callback00) {\n        if (typeof Worker !== \"undefined\") {\n          var webWorker = processInWebWorker(function readFile(_blob) {\n            postMessage(new FileReaderSync().readAsDataURL(_blob));\n          });\n          webWorker.onmessage = function(event) {\n            callback00(event.data);\n          };\n          webWorker.postMessage(blob);\n        } else {\n          var reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onload = function(event) {\n            callback00(event.target.result);\n          };\n        }\n      }\n      function processInWebWorker(_function) {\n        var blob = URL.createObjectURL(new Blob([\n          _function.toString(),\n          \"this.onmessage =  function (eee) {\" + _function.name + \"(eee.data);}\"\n        ], {\n          type: \"application/javascript\"\n        }));\n        var worker = new Worker(blob);\n        var url;\n        if (typeof URL !== \"undefined\") {\n          url = URL;\n        } else if (typeof webkitURL !== \"undefined\") {\n          url = webkitURL;\n        } else {\n          throw \"Neither URL nor webkitURL detected.\";\n        }\n        url.revokeObjectURL(blob);\n        return worker;\n      }\n    };\n    this.writeToDisk = function() {\n      RecordRTC2.writeToDisk({\n        audio: this.audioRecorder,\n        video: this.videoRecorder,\n        gif: this.gifRecorder\n      });\n    };\n    this.save = function(args) {\n      args = args || {\n        audio: true,\n        video: true,\n        gif: true\n      };\n      if (!!args.audio && this.audioRecorder) {\n        this.audioRecorder.save(typeof args.audio === \"string\" ? args.audio : \"\");\n      }\n      if (!!args.video && this.videoRecorder) {\n        this.videoRecorder.save(typeof args.video === \"string\" ? args.video : \"\");\n      }\n      if (!!args.gif && this.gifRecorder) {\n        this.gifRecorder.save(typeof args.gif === \"string\" ? args.gif : \"\");\n      }\n    };\n  }\n  MRecordRTC.getFromDisk = RecordRTC2.getFromDisk;\n  MRecordRTC.writeToDisk = RecordRTC2.writeToDisk;\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.MRecordRTC = MRecordRTC;\n  }\n  var browserFakeUserAgent = \"Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45\";\n  (function(that) {\n    if (!that) {\n      return;\n    }\n    if (typeof window !== \"undefined\") {\n      return;\n    }\n    if (typeof commonjsGlobal === \"undefined\") {\n      return;\n    }\n    commonjsGlobal.navigator = {\n      userAgent: browserFakeUserAgent,\n      getUserMedia: function() {\n      }\n    };\n    if (!commonjsGlobal.console) {\n      commonjsGlobal.console = {};\n    }\n    if (typeof commonjsGlobal.console.log === \"undefined\" || typeof commonjsGlobal.console.error === \"undefined\") {\n      commonjsGlobal.console.error = commonjsGlobal.console.log = commonjsGlobal.console.log || function() {\n        console.log(arguments);\n      };\n    }\n    if (typeof document === \"undefined\") {\n      that.document = {\n        documentElement: {\n          appendChild: function() {\n            return \"\";\n          }\n        }\n      };\n      document.createElement = document.captureStream = document.mozCaptureStream = function() {\n        var obj = {\n          getContext: function() {\n            return obj;\n          },\n          play: function() {\n          },\n          pause: function() {\n          },\n          drawImage: function() {\n          },\n          toDataURL: function() {\n            return \"\";\n          },\n          style: {}\n        };\n        return obj;\n      };\n      that.HTMLVideoElement = function() {\n      };\n    }\n    if (typeof location === \"undefined\") {\n      that.location = {\n        protocol: \"file:\",\n        href: \"\",\n        hash: \"\"\n      };\n    }\n    if (typeof screen === \"undefined\") {\n      that.screen = {\n        width: 0,\n        height: 0\n      };\n    }\n    if (typeof URL === \"undefined\") {\n      that.URL = {\n        createObjectURL: function() {\n          return \"\";\n        },\n        revokeObjectURL: function() {\n          return \"\";\n        }\n      };\n    }\n    that.window = commonjsGlobal;\n  })(typeof commonjsGlobal !== \"undefined\" ? commonjsGlobal : null);\n  var requestAnimationFrame = window.requestAnimationFrame;\n  if (typeof requestAnimationFrame === \"undefined\") {\n    if (typeof webkitRequestAnimationFrame !== \"undefined\") {\n      requestAnimationFrame = webkitRequestAnimationFrame;\n    } else if (typeof mozRequestAnimationFrame !== \"undefined\") {\n      requestAnimationFrame = mozRequestAnimationFrame;\n    } else if (typeof msRequestAnimationFrame !== \"undefined\") {\n      requestAnimationFrame = msRequestAnimationFrame;\n    } else if (typeof requestAnimationFrame === \"undefined\") {\n      var lastTime = 0;\n      requestAnimationFrame = function(callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = setTimeout(function() {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n  }\n  var cancelAnimationFrame = window.cancelAnimationFrame;\n  if (typeof cancelAnimationFrame === \"undefined\") {\n    if (typeof webkitCancelAnimationFrame !== \"undefined\") {\n      cancelAnimationFrame = webkitCancelAnimationFrame;\n    } else if (typeof mozCancelAnimationFrame !== \"undefined\") {\n      cancelAnimationFrame = mozCancelAnimationFrame;\n    } else if (typeof msCancelAnimationFrame !== \"undefined\") {\n      cancelAnimationFrame = msCancelAnimationFrame;\n    } else if (typeof cancelAnimationFrame === \"undefined\") {\n      cancelAnimationFrame = function(id) {\n        clearTimeout(id);\n      };\n    }\n  }\n  var AudioContext = window.AudioContext;\n  if (typeof AudioContext === \"undefined\") {\n    if (typeof webkitAudioContext !== \"undefined\") {\n      AudioContext = webkitAudioContext;\n    }\n    if (typeof mozAudioContext !== \"undefined\") {\n      AudioContext = mozAudioContext;\n    }\n  }\n  var URL = window.URL;\n  if (typeof URL === \"undefined\" && typeof webkitURL !== \"undefined\") {\n    URL = webkitURL;\n  }\n  if (typeof navigator !== \"undefined\" && typeof navigator.getUserMedia === \"undefined\") {\n    if (typeof navigator.webkitGetUserMedia !== \"undefined\") {\n      navigator.getUserMedia = navigator.webkitGetUserMedia;\n    }\n    if (typeof navigator.mozGetUserMedia !== \"undefined\") {\n      navigator.getUserMedia = navigator.mozGetUserMedia;\n    }\n  }\n  var isEdge = navigator.userAgent.indexOf(\"Edge\") !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\n  var isOpera = !!window.opera || navigator.userAgent.indexOf(\"OPR/\") !== -1;\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf(\"firefox\") > -1 && \"netscape\" in window && / rv:/.test(navigator.userAgent);\n  var isChrome = !isOpera && !isEdge && !!navigator.webkitGetUserMedia || isElectron() || navigator.userAgent.toLowerCase().indexOf(\"chrome/\") !== -1;\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  if (isSafari && !isChrome && navigator.userAgent.indexOf(\"CriOS\") !== -1) {\n    isSafari = false;\n    isChrome = true;\n  }\n  var MediaStream = window.MediaStream;\n  if (typeof MediaStream === \"undefined\" && typeof webkitMediaStream !== \"undefined\") {\n    MediaStream = webkitMediaStream;\n  }\n  if (typeof MediaStream !== \"undefined\") {\n    if (typeof MediaStream.prototype.stop === \"undefined\") {\n      MediaStream.prototype.stop = function() {\n        this.getTracks().forEach(function(track) {\n          track.stop();\n        });\n      };\n    }\n  }\n  function bytesToSize(bytes) {\n    var k = 1e3;\n    var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    if (bytes === 0) {\n      return \"0 Bytes\";\n    }\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n    return (bytes / Math.pow(k, i)).toPrecision(3) + \" \" + sizes[i];\n  }\n  function invokeSaveAsDialog(file, fileName) {\n    if (!file) {\n      throw \"Blob object is required.\";\n    }\n    if (!file.type) {\n      try {\n        file.type = \"video/webm\";\n      } catch (e) {\n      }\n    }\n    var fileExtension = (file.type || \"video/webm\").split(\"/\")[1];\n    if (fileExtension.indexOf(\";\") !== -1) {\n      fileExtension = fileExtension.split(\";\")[0];\n    }\n    if (fileName && fileName.indexOf(\".\") !== -1) {\n      var splitted = fileName.split(\".\");\n      fileName = splitted[0];\n      fileExtension = splitted[1];\n    }\n    var fileFullName = (fileName || Math.round(Math.random() * 9999999999) + 888888888) + \".\" + fileExtension;\n    if (typeof navigator.msSaveOrOpenBlob !== \"undefined\") {\n      return navigator.msSaveOrOpenBlob(file, fileFullName);\n    } else if (typeof navigator.msSaveBlob !== \"undefined\") {\n      return navigator.msSaveBlob(file, fileFullName);\n    }\n    var hyperlink = document.createElement(\"a\");\n    hyperlink.href = URL.createObjectURL(file);\n    hyperlink.download = fileFullName;\n    hyperlink.style = \"display:none;opacity:0;color:transparent;\";\n    (document.body || document.documentElement).appendChild(hyperlink);\n    if (typeof hyperlink.click === \"function\") {\n      hyperlink.click();\n    } else {\n      hyperlink.target = \"_blank\";\n      hyperlink.dispatchEvent(new MouseEvent(\"click\", {\n        view: window,\n        bubbles: true,\n        cancelable: true\n      }));\n    }\n    URL.revokeObjectURL(hyperlink.href);\n  }\n  function isElectron() {\n    if (typeof window !== \"undefined\" && typeof window.process === \"object\" && window.process.type === \"renderer\") {\n      return true;\n    }\n    if (typeof process !== \"undefined\" && typeof process.versions === \"object\" && !!process.versions.electron) {\n      return true;\n    }\n    if (typeof navigator === \"object\" && typeof navigator.userAgent === \"string\" && navigator.userAgent.indexOf(\"Electron\") >= 0) {\n      return true;\n    }\n    return false;\n  }\n  function getTracks(stream, kind) {\n    if (!stream || !stream.getTracks) {\n      return [];\n    }\n    return stream.getTracks().filter(function(t) {\n      return t.kind === (kind || \"audio\");\n    });\n  }\n  function setSrcObject(stream, element) {\n    if (\"srcObject\" in element) {\n      element.srcObject = stream;\n    } else if (\"mozSrcObject\" in element) {\n      element.mozSrcObject = stream;\n    } else {\n      element.srcObject = stream;\n    }\n  }\n  function getSeekableBlob(inputBlob, callback) {\n    if (typeof EBML === \"undefined\") {\n      throw new Error(\"Please link: https://www.webrtc-experiment.com/EBML.js\");\n    }\n    var reader = new EBML.Reader();\n    var decoder = new EBML.Decoder();\n    var tools = EBML.tools;\n    var fileReader = new FileReader();\n    fileReader.onload = function(e) {\n      var ebmlElms = decoder.decode(this.result);\n      ebmlElms.forEach(function(element) {\n        reader.read(element);\n      });\n      reader.stop();\n      var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\n      var body = this.result.slice(reader.metadataSize);\n      var newBlob = new Blob([refinedMetadataBuf, body], {\n        type: \"video/webm\"\n      });\n      callback(newBlob);\n    };\n    fileReader.readAsArrayBuffer(inputBlob);\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.invokeSaveAsDialog = invokeSaveAsDialog;\n    RecordRTC2.getTracks = getTracks;\n    RecordRTC2.getSeekableBlob = getSeekableBlob;\n    RecordRTC2.bytesToSize = bytesToSize;\n    RecordRTC2.isElectron = isElectron;\n  }\n  /**\n   * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @example\n   * Storage.AudioContext === webkitAudioContext\n   * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   */\n  var Storage = {};\n  if (typeof AudioContext !== \"undefined\") {\n    Storage.AudioContext = AudioContext;\n  } else if (typeof webkitAudioContext !== \"undefined\") {\n    Storage.AudioContext = webkitAudioContext;\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.Storage = Storage;\n  }\n  function isMediaRecorderCompatible() {\n    if (isFirefox || isSafari || isEdge) {\n      return true;\n    }\n    var nAgt = navigator.userAgent;\n    var fullVersion = \"\" + parseFloat(navigator.appVersion);\n    var majorVersion = parseInt(navigator.appVersion, 10);\n    var verOffset, ix;\n    if (isChrome || isOpera) {\n      verOffset = nAgt.indexOf(\"Chrome\");\n      fullVersion = nAgt.substring(verOffset + 7);\n    }\n    if ((ix = fullVersion.indexOf(\";\")) !== -1) {\n      fullVersion = fullVersion.substring(0, ix);\n    }\n    if ((ix = fullVersion.indexOf(\" \")) !== -1) {\n      fullVersion = fullVersion.substring(0, ix);\n    }\n    majorVersion = parseInt(\"\" + fullVersion, 10);\n    if (isNaN(majorVersion)) {\n      fullVersion = \"\" + parseFloat(navigator.appVersion);\n      majorVersion = parseInt(navigator.appVersion, 10);\n    }\n    return majorVersion >= 49;\n  }\n  /**\n   * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\n   * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://github.com/muaz-khan|Muaz Khan}\n   * @typedef MediaStreamRecorder\n   * @class\n   * @example\n   * var config = {\n   *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\n   *     audioBitsPerSecond : 256 * 8 * 1024,\n   *     videoBitsPerSecond : 256 * 8 * 1024,\n   *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\n   *     checkForInactiveTracks: true,\n   *     timeSlice: 1000, // concatenate intervals based blobs\n   *     ondataavailable: function() {} // get intervals based blobs\n   * }\n   * var recorder = new MediaStreamRecorder(mediaStream, config);\n   * recorder.record();\n   * recorder.stop(function(blob) {\n   *     video.src = URL.createObjectURL(blob);\n   *\n   *     // or\n   *     var blob = recorder.blob;\n   * });\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n   * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\n   * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\n   */\n  function MediaStreamRecorder(mediaStream, config) {\n    var self = this;\n    if (typeof mediaStream === \"undefined\") {\n      throw 'First argument \"MediaStream\" is required.';\n    }\n    if (typeof MediaRecorder === \"undefined\") {\n      throw \"Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.\";\n    }\n    config = config || {\n      mimeType: \"video/webm\"\n    };\n    if (config.type === \"audio\") {\n      if (getTracks(mediaStream, \"video\").length && getTracks(mediaStream, \"audio\").length) {\n        var stream;\n        if (!!navigator.mozGetUserMedia) {\n          stream = new MediaStream();\n          stream.addTrack(getTracks(mediaStream, \"audio\")[0]);\n        } else {\n          stream = new MediaStream(getTracks(mediaStream, \"audio\"));\n        }\n        mediaStream = stream;\n      }\n      if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf(\"audio\") === -1) {\n        config.mimeType = isChrome ? \"audio/webm\" : \"audio/ogg\";\n      }\n      if (config.mimeType && config.mimeType.toString().toLowerCase() !== \"audio/ogg\" && !!navigator.mozGetUserMedia) {\n        config.mimeType = \"audio/ogg\";\n      }\n    }\n    var arrayOfBlobs = [];\n    this.getArrayOfBlobs = function() {\n      return arrayOfBlobs;\n    };\n    this.record = function() {\n      self.blob = null;\n      self.clearRecordedData();\n      self.timestamps = [];\n      allStates = [];\n      arrayOfBlobs = [];\n      var recorderHints = config;\n      if (!config.disableLogs) {\n        console.log(\"Passing following config over MediaRecorder API.\", recorderHints);\n      }\n      if (mediaRecorder) {\n        mediaRecorder = null;\n      }\n      if (isChrome && !isMediaRecorderCompatible()) {\n        recorderHints = \"video/vp8\";\n      }\n      if (typeof MediaRecorder.isTypeSupported === \"function\" && recorderHints.mimeType) {\n        if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\n          if (!config.disableLogs) {\n            console.warn(\"MediaRecorder API seems unable to record mimeType:\", recorderHints.mimeType);\n          }\n          recorderHints.mimeType = config.type === \"audio\" ? \"audio/webm\" : \"video/webm\";\n        }\n      }\n      try {\n        mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\n        config.mimeType = recorderHints.mimeType;\n      } catch (e) {\n        mediaRecorder = new MediaRecorder(mediaStream);\n      }\n      if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && \"canRecordMimeType\" in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\n        if (!config.disableLogs) {\n          console.warn(\"MediaRecorder API seems unable to record mimeType:\", recorderHints.mimeType);\n        }\n      }\n      mediaRecorder.ondataavailable = function(e) {\n        if (e.data) {\n          allStates.push(\"ondataavailable: \" + bytesToSize(e.data.size));\n        }\n        if (typeof config.timeSlice === \"number\") {\n          if (e.data && e.data.size) {\n            arrayOfBlobs.push(e.data);\n            updateTimeStamp();\n            if (typeof config.ondataavailable === \"function\") {\n              var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\n                type: getMimeType(recorderHints)\n              });\n              config.ondataavailable(blob);\n            }\n          }\n          return;\n        }\n        if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\n          if (self.recordingCallback) {\n            self.recordingCallback(new Blob([], {\n              type: getMimeType(recorderHints)\n            }));\n            self.recordingCallback = null;\n          }\n          return;\n        }\n        self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\n          type: getMimeType(recorderHints)\n        });\n        if (self.recordingCallback) {\n          self.recordingCallback(self.blob);\n          self.recordingCallback = null;\n        }\n      };\n      mediaRecorder.onstart = function() {\n        allStates.push(\"started\");\n      };\n      mediaRecorder.onpause = function() {\n        allStates.push(\"paused\");\n      };\n      mediaRecorder.onresume = function() {\n        allStates.push(\"resumed\");\n      };\n      mediaRecorder.onstop = function() {\n        allStates.push(\"stopped\");\n      };\n      mediaRecorder.onerror = function(error) {\n        if (!error) {\n          return;\n        }\n        if (!error.name) {\n          error.name = \"UnknownError\";\n        }\n        allStates.push(\"error: \" + error);\n        if (!config.disableLogs) {\n          if (error.name.toString().toLowerCase().indexOf(\"invalidstate\") !== -1) {\n            console.error(\"The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.\", error);\n          } else if (error.name.toString().toLowerCase().indexOf(\"notsupported\") !== -1) {\n            console.error(\"MIME type (\", recorderHints.mimeType, \") is not supported.\", error);\n          } else if (error.name.toString().toLowerCase().indexOf(\"security\") !== -1) {\n            console.error(\"MediaRecorder security error\", error);\n          } else if (error.name === \"OutOfMemory\") {\n            console.error(\"The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.\", error);\n          } else if (error.name === \"IllegalStreamModification\") {\n            console.error(\"A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.\", error);\n          } else if (error.name === \"OtherRecordingError\") {\n            console.error(\"Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.\", error);\n          } else if (error.name === \"GenericError\") {\n            console.error(\"The UA cannot provide the codec or recording option that has been requested.\", error);\n          } else {\n            console.error(\"MediaRecorder Error\", error);\n          }\n        }\n        (function(looper) {\n          if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === \"inactive\") {\n            delete config.timeslice;\n            mediaRecorder.start(10 * 60 * 1e3);\n            return;\n          }\n          setTimeout(looper, 1e3);\n        })();\n        if (mediaRecorder.state !== \"inactive\" && mediaRecorder.state !== \"stopped\") {\n          mediaRecorder.stop();\n        }\n      };\n      if (typeof config.timeSlice === \"number\") {\n        updateTimeStamp();\n        mediaRecorder.start(config.timeSlice);\n      } else {\n        mediaRecorder.start(36e5);\n      }\n      if (config.initCallback) {\n        config.initCallback();\n      }\n    };\n    this.timestamps = [];\n    function updateTimeStamp() {\n      self.timestamps.push(new Date().getTime());\n      if (typeof config.onTimeStamp === \"function\") {\n        config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\n      }\n    }\n    function getMimeType(secondObject) {\n      if (mediaRecorder && mediaRecorder.mimeType) {\n        return mediaRecorder.mimeType;\n      }\n      return secondObject.mimeType || \"video/webm\";\n    }\n    this.stop = function(callback) {\n      callback = callback || function() {\n      };\n      self.manuallyStopped = true;\n      if (!mediaRecorder) {\n        return;\n      }\n      this.recordingCallback = callback;\n      if (mediaRecorder.state === \"recording\") {\n        mediaRecorder.stop();\n      }\n      if (typeof config.timeSlice === \"number\") {\n        setTimeout(function() {\n          self.blob = new Blob(arrayOfBlobs, {\n            type: getMimeType(config)\n          });\n          self.recordingCallback(self.blob);\n        }, 100);\n      }\n    };\n    this.pause = function() {\n      if (!mediaRecorder) {\n        return;\n      }\n      if (mediaRecorder.state === \"recording\") {\n        mediaRecorder.pause();\n      }\n    };\n    this.resume = function() {\n      if (!mediaRecorder) {\n        return;\n      }\n      if (mediaRecorder.state === \"paused\") {\n        mediaRecorder.resume();\n      }\n    };\n    this.clearRecordedData = function() {\n      if (mediaRecorder && mediaRecorder.state === \"recording\") {\n        self.stop(clearRecordedDataCB);\n      }\n      clearRecordedDataCB();\n    };\n    function clearRecordedDataCB() {\n      arrayOfBlobs = [];\n      mediaRecorder = null;\n      self.timestamps = [];\n    }\n    var mediaRecorder;\n    this.getInternalRecorder = function() {\n      return mediaRecorder;\n    };\n    function isMediaStreamActive() {\n      if (\"active\" in mediaStream) {\n        if (!mediaStream.active) {\n          return false;\n        }\n      } else if (\"ended\" in mediaStream) {\n        if (mediaStream.ended) {\n          return false;\n        }\n      }\n      return true;\n    }\n    this.blob = null;\n    this.getState = function() {\n      if (!mediaRecorder) {\n        return \"inactive\";\n      }\n      return mediaRecorder.state || \"inactive\";\n    };\n    var allStates = [];\n    this.getAllStates = function() {\n      return allStates;\n    };\n    if (typeof config.checkForInactiveTracks === \"undefined\") {\n      config.checkForInactiveTracks = false;\n    }\n    var self = this;\n    (function looper() {\n      if (!mediaRecorder || config.checkForInactiveTracks === false) {\n        return;\n      }\n      if (isMediaStreamActive() === false) {\n        if (!config.disableLogs) {\n          console.log(\"MediaStream seems stopped.\");\n        }\n        self.stop();\n        return;\n      }\n      setTimeout(looper, 1e3);\n    })();\n    this.name = \"MediaStreamRecorder\";\n    this.toString = function() {\n      return this.name;\n    };\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.MediaStreamRecorder = MediaStreamRecorder;\n  }\n  /**\n   * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\n   * @summary JavaScript standalone object for stereo audio recording.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef StereoAudioRecorder\n   * @class\n   * @example\n   * var recorder = new StereoAudioRecorder(MediaStream, {\n   *     sampleRate: 44100,\n   *     bufferSize: 4096\n   * });\n   * recorder.record();\n   * recorder.stop(function(blob) {\n   *     video.src = URL.createObjectURL(blob);\n   * });\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n   * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\n   */\n  function StereoAudioRecorder(mediaStream, config) {\n    if (!getTracks(mediaStream, \"audio\").length) {\n      throw \"Your stream has no audio tracks.\";\n    }\n    config = config || {};\n    var self = this;\n    var leftchannel = [];\n    var rightchannel = [];\n    var recording = false;\n    var recordingLength = 0;\n    var jsAudioNode;\n    var numberOfAudioChannels = 2;\n    var desiredSampRate = config.desiredSampRate;\n    if (config.leftChannel === true) {\n      numberOfAudioChannels = 1;\n    }\n    if (config.numberOfAudioChannels === 1) {\n      numberOfAudioChannels = 1;\n    }\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\n      numberOfAudioChannels = 2;\n    }\n    if (!config.disableLogs) {\n      console.log(\"StereoAudioRecorder is set to record number of channels: \" + numberOfAudioChannels);\n    }\n    if (typeof config.checkForInactiveTracks === \"undefined\") {\n      config.checkForInactiveTracks = true;\n    }\n    function isMediaStreamActive() {\n      if (config.checkForInactiveTracks === false) {\n        return true;\n      }\n      if (\"active\" in mediaStream) {\n        if (!mediaStream.active) {\n          return false;\n        }\n      } else if (\"ended\" in mediaStream) {\n        if (mediaStream.ended) {\n          return false;\n        }\n      }\n      return true;\n    }\n    this.record = function() {\n      if (isMediaStreamActive() === false) {\n        throw \"Please make sure MediaStream is active.\";\n      }\n      resetVariables();\n      isAudioProcessStarted = isPaused = false;\n      recording = true;\n      if (typeof config.timeSlice !== \"undefined\") {\n        looper();\n      }\n    };\n    function mergeLeftRightBuffers(config2, callback) {\n      function mergeAudioBuffers(config3, cb) {\n        var numberOfAudioChannels2 = config3.numberOfAudioChannels;\n        var leftBuffers = config3.leftBuffers.slice(0);\n        var rightBuffers = config3.rightBuffers.slice(0);\n        var sampleRate2 = config3.sampleRate;\n        var internalInterleavedLength = config3.internalInterleavedLength;\n        var desiredSampRate2 = config3.desiredSampRate;\n        if (numberOfAudioChannels2 === 2) {\n          leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\n          rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\n          if (desiredSampRate2) {\n            leftBuffers = interpolateArray(leftBuffers, desiredSampRate2, sampleRate2);\n            rightBuffers = interpolateArray(rightBuffers, desiredSampRate2, sampleRate2);\n          }\n        }\n        if (numberOfAudioChannels2 === 1) {\n          leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\n          if (desiredSampRate2) {\n            leftBuffers = interpolateArray(leftBuffers, desiredSampRate2, sampleRate2);\n          }\n        }\n        if (desiredSampRate2) {\n          sampleRate2 = desiredSampRate2;\n        }\n        function interpolateArray(data, newSampleRate, oldSampleRate) {\n          var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\n          var newData = [];\n          var springFactor = Number((data.length - 1) / (fitCount - 1));\n          newData[0] = data[0];\n          for (var i2 = 1; i2 < fitCount - 1; i2++) {\n            var tmp = i2 * springFactor;\n            var before = Number(Math.floor(tmp)).toFixed();\n            var after = Number(Math.ceil(tmp)).toFixed();\n            var atPoint = tmp - before;\n            newData[i2] = linearInterpolate(data[before], data[after], atPoint);\n          }\n          newData[fitCount - 1] = data[data.length - 1];\n          return newData;\n        }\n        function linearInterpolate(before, after, atPoint) {\n          return before + (after - before) * atPoint;\n        }\n        function mergeBuffers(channelBuffer, rLength) {\n          var result = new Float64Array(rLength);\n          var offset = 0;\n          var lng2 = channelBuffer.length;\n          for (var i2 = 0; i2 < lng2; i2++) {\n            var buffer2 = channelBuffer[i2];\n            result.set(buffer2, offset);\n            offset += buffer2.length;\n          }\n          return result;\n        }\n        function interleave(leftChannel, rightChannel) {\n          var length = leftChannel.length + rightChannel.length;\n          var result = new Float64Array(length);\n          var inputIndex = 0;\n          for (var index2 = 0; index2 < length; ) {\n            result[index2++] = leftChannel[inputIndex];\n            result[index2++] = rightChannel[inputIndex];\n            inputIndex++;\n          }\n          return result;\n        }\n        function writeUTFBytes(view2, offset, string) {\n          var lng2 = string.length;\n          for (var i2 = 0; i2 < lng2; i2++) {\n            view2.setUint8(offset + i2, string.charCodeAt(i2));\n          }\n        }\n        var interleaved;\n        if (numberOfAudioChannels2 === 2) {\n          interleaved = interleave(leftBuffers, rightBuffers);\n        }\n        if (numberOfAudioChannels2 === 1) {\n          interleaved = leftBuffers;\n        }\n        var interleavedLength = interleaved.length;\n        var resultingBufferLength = 44 + interleavedLength * 2;\n        var buffer = new ArrayBuffer(resultingBufferLength);\n        var view = new DataView(buffer);\n        writeUTFBytes(view, 0, \"RIFF\");\n        view.setUint32(4, 36 + interleavedLength * 2, true);\n        writeUTFBytes(view, 8, \"WAVE\");\n        writeUTFBytes(view, 12, \"fmt \");\n        view.setUint32(16, 16, true);\n        view.setUint16(20, 1, true);\n        view.setUint16(22, numberOfAudioChannels2, true);\n        view.setUint32(24, sampleRate2, true);\n        view.setUint32(28, sampleRate2 * numberOfAudioChannels2 * 2, true);\n        view.setUint16(32, numberOfAudioChannels2 * 2, true);\n        view.setUint16(34, 16, true);\n        writeUTFBytes(view, 36, \"data\");\n        view.setUint32(40, interleavedLength * 2, true);\n        var lng = interleavedLength;\n        var index = 44;\n        var volume = 1;\n        for (var i = 0; i < lng; i++) {\n          view.setInt16(index, interleaved[i] * (32767 * volume), true);\n          index += 2;\n        }\n        if (cb) {\n          return cb({\n            buffer,\n            view\n          });\n        }\n        postMessage({\n          buffer,\n          view\n        });\n      }\n      if (config2.noWorker) {\n        mergeAudioBuffers(config2, function(data) {\n          callback(data.buffer, data.view);\n        });\n        return;\n      }\n      var webWorker = processInWebWorker(mergeAudioBuffers);\n      webWorker.onmessage = function(event) {\n        callback(event.data.buffer, event.data.view);\n        URL.revokeObjectURL(webWorker.workerURL);\n        webWorker.terminate();\n      };\n      webWorker.postMessage(config2);\n    }\n    function processInWebWorker(_function) {\n      var workerURL = URL.createObjectURL(new Blob([\n        _function.toString(),\n        \";this.onmessage =  function (eee) {\" + _function.name + \"(eee.data);}\"\n      ], {\n        type: \"application/javascript\"\n      }));\n      var worker = new Worker(workerURL);\n      worker.workerURL = workerURL;\n      return worker;\n    }\n    this.stop = function(callback) {\n      callback = callback || function() {\n      };\n      recording = false;\n      mergeLeftRightBuffers({\n        desiredSampRate,\n        sampleRate,\n        numberOfAudioChannels,\n        internalInterleavedLength: recordingLength,\n        leftBuffers: leftchannel,\n        rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\n        noWorker: config.noWorker\n      }, function(buffer, view) {\n        self.blob = new Blob([view], {\n          type: \"audio/wav\"\n        });\n        self.buffer = new ArrayBuffer(view.buffer.byteLength);\n        self.view = view;\n        self.sampleRate = desiredSampRate || sampleRate;\n        self.bufferSize = bufferSize;\n        self.length = recordingLength;\n        isAudioProcessStarted = false;\n        if (callback) {\n          callback(self.blob);\n        }\n      });\n    };\n    if (typeof RecordRTC2.Storage === \"undefined\") {\n      RecordRTC2.Storage = {\n        AudioContextConstructor: null,\n        AudioContext: window.AudioContext || window.webkitAudioContext\n      };\n    }\n    if (!RecordRTC2.Storage.AudioContextConstructor || RecordRTC2.Storage.AudioContextConstructor.state === \"closed\") {\n      RecordRTC2.Storage.AudioContextConstructor = new RecordRTC2.Storage.AudioContext();\n    }\n    var context = RecordRTC2.Storage.AudioContextConstructor;\n    var audioInput = context.createMediaStreamSource(mediaStream);\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\n    var bufferSize = typeof config.bufferSize === \"undefined\" ? 4096 : config.bufferSize;\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\n      if (!config.disableLogs) {\n        console.log(\"Legal values for buffer-size are \" + JSON.stringify(legalBufferValues, null, \"\t\"));\n      }\n    }\n    if (context.createJavaScriptNode) {\n      jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\n    } else if (context.createScriptProcessor) {\n      jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\n    } else {\n      throw \"WebAudio API has no support on this browser.\";\n    }\n    audioInput.connect(jsAudioNode);\n    if (!config.bufferSize) {\n      bufferSize = jsAudioNode.bufferSize;\n    }\n    var sampleRate = typeof config.sampleRate !== \"undefined\" ? config.sampleRate : context.sampleRate || 44100;\n    if (sampleRate < 22050 || sampleRate > 96e3) {\n      if (!config.disableLogs) {\n        console.log(\"sample-rate must be under range 22050 and 96000.\");\n      }\n    }\n    if (!config.disableLogs) {\n      if (config.desiredSampRate) {\n        console.log(\"Desired sample-rate: \" + config.desiredSampRate);\n      }\n    }\n    var isPaused = false;\n    this.pause = function() {\n      isPaused = true;\n    };\n    this.resume = function() {\n      if (isMediaStreamActive() === false) {\n        throw \"Please make sure MediaStream is active.\";\n      }\n      if (!recording) {\n        if (!config.disableLogs) {\n          console.log(\"Seems recording has been restarted.\");\n        }\n        this.record();\n        return;\n      }\n      isPaused = false;\n    };\n    this.clearRecordedData = function() {\n      config.checkForInactiveTracks = false;\n      if (recording) {\n        this.stop(clearRecordedDataCB);\n      }\n      clearRecordedDataCB();\n    };\n    function resetVariables() {\n      leftchannel = [];\n      rightchannel = [];\n      recordingLength = 0;\n      isAudioProcessStarted = false;\n      recording = false;\n      isPaused = false;\n      context = null;\n      self.leftchannel = leftchannel;\n      self.rightchannel = rightchannel;\n      self.numberOfAudioChannels = numberOfAudioChannels;\n      self.desiredSampRate = desiredSampRate;\n      self.sampleRate = sampleRate;\n      self.recordingLength = recordingLength;\n      intervalsBasedBuffers = {\n        left: [],\n        right: [],\n        recordingLength: 0\n      };\n    }\n    function clearRecordedDataCB() {\n      if (jsAudioNode) {\n        jsAudioNode.onaudioprocess = null;\n        jsAudioNode.disconnect();\n        jsAudioNode = null;\n      }\n      if (audioInput) {\n        audioInput.disconnect();\n        audioInput = null;\n      }\n      resetVariables();\n    }\n    this.name = \"StereoAudioRecorder\";\n    this.toString = function() {\n      return this.name;\n    };\n    var isAudioProcessStarted = false;\n    function onAudioProcessDataAvailable(e) {\n      if (isPaused) {\n        return;\n      }\n      if (isMediaStreamActive() === false) {\n        if (!config.disableLogs) {\n          console.log(\"MediaStream seems stopped.\");\n        }\n        jsAudioNode.disconnect();\n        recording = false;\n      }\n      if (!recording) {\n        if (audioInput) {\n          audioInput.disconnect();\n          audioInput = null;\n        }\n        return;\n      }\n      if (!isAudioProcessStarted) {\n        isAudioProcessStarted = true;\n        if (config.onAudioProcessStarted) {\n          config.onAudioProcessStarted();\n        }\n        if (config.initCallback) {\n          config.initCallback();\n        }\n      }\n      var left = e.inputBuffer.getChannelData(0);\n      var chLeft = new Float32Array(left);\n      leftchannel.push(chLeft);\n      if (numberOfAudioChannels === 2) {\n        var right = e.inputBuffer.getChannelData(1);\n        var chRight = new Float32Array(right);\n        rightchannel.push(chRight);\n      }\n      recordingLength += bufferSize;\n      self.recordingLength = recordingLength;\n      if (typeof config.timeSlice !== \"undefined\") {\n        intervalsBasedBuffers.recordingLength += bufferSize;\n        intervalsBasedBuffers.left.push(chLeft);\n        if (numberOfAudioChannels === 2) {\n          intervalsBasedBuffers.right.push(chRight);\n        }\n      }\n    }\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\n    if (context.createMediaStreamDestination) {\n      jsAudioNode.connect(context.createMediaStreamDestination());\n    } else {\n      jsAudioNode.connect(context.destination);\n    }\n    this.leftchannel = leftchannel;\n    this.rightchannel = rightchannel;\n    this.numberOfAudioChannels = numberOfAudioChannels;\n    this.desiredSampRate = desiredSampRate;\n    this.sampleRate = sampleRate;\n    self.recordingLength = recordingLength;\n    var intervalsBasedBuffers = {\n      left: [],\n      right: [],\n      recordingLength: 0\n    };\n    function looper() {\n      if (!recording || typeof config.ondataavailable !== \"function\" || typeof config.timeSlice === \"undefined\") {\n        return;\n      }\n      if (intervalsBasedBuffers.left.length) {\n        mergeLeftRightBuffers({\n          desiredSampRate,\n          sampleRate,\n          numberOfAudioChannels,\n          internalInterleavedLength: intervalsBasedBuffers.recordingLength,\n          leftBuffers: intervalsBasedBuffers.left,\n          rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\n        }, function(buffer, view) {\n          var blob = new Blob([view], {\n            type: \"audio/wav\"\n          });\n          config.ondataavailable(blob);\n          setTimeout(looper, config.timeSlice);\n        });\n        intervalsBasedBuffers = {\n          left: [],\n          right: [],\n          recordingLength: 0\n        };\n      } else {\n        setTimeout(looper, config.timeSlice);\n      }\n    }\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.StereoAudioRecorder = StereoAudioRecorder;\n  }\n  /**\n   * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\n   * @summary HTML2Canvas recording into video WebM.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef CanvasRecorder\n   * @class\n   * @example\n   * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\n   * recorder.record();\n   * recorder.stop(function(blob) {\n   *     video.src = URL.createObjectURL(blob);\n   * });\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\n   * @param {object} config - {disableLogs:true, initCallback: function}\n   */\n  function CanvasRecorder(htmlElement, config) {\n    if (typeof html2canvas === \"undefined\") {\n      throw \"Please link: https://www.webrtc-experiment.com/screenshot.js\";\n    }\n    config = config || {};\n    if (!config.frameInterval) {\n      config.frameInterval = 10;\n    }\n    var isCanvasSupportsStreamCapturing = false;\n    [\"captureStream\", \"mozCaptureStream\", \"webkitCaptureStream\"].forEach(function(item) {\n      if (item in document.createElement(\"canvas\")) {\n        isCanvasSupportsStreamCapturing = true;\n      }\n    });\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\n    var chromeVersion = 50;\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    if (_isChrome && matchArray && matchArray[2]) {\n      chromeVersion = parseInt(matchArray[2], 10);\n    }\n    if (_isChrome && chromeVersion < 52) {\n      isCanvasSupportsStreamCapturing = false;\n    }\n    if (config.useWhammyRecorder) {\n      isCanvasSupportsStreamCapturing = false;\n    }\n    var globalCanvas, mediaStreamRecorder;\n    if (isCanvasSupportsStreamCapturing) {\n      if (!config.disableLogs) {\n        console.log(\"Your browser supports both MediRecorder API and canvas.captureStream!\");\n      }\n      if (htmlElement instanceof HTMLCanvasElement) {\n        globalCanvas = htmlElement;\n      } else if (htmlElement instanceof CanvasRenderingContext2D) {\n        globalCanvas = htmlElement.canvas;\n      } else {\n        throw \"Please pass either HTMLCanvasElement or CanvasRenderingContext2D.\";\n      }\n    } else if (!!navigator.mozGetUserMedia) {\n      if (!config.disableLogs) {\n        console.error(\"Canvas recording is NOT supported in Firefox.\");\n      }\n    }\n    var isRecording;\n    this.record = function() {\n      isRecording = true;\n      if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\n        var canvasMediaStream;\n        if (\"captureStream\" in globalCanvas) {\n          canvasMediaStream = globalCanvas.captureStream(25);\n        } else if (\"mozCaptureStream\" in globalCanvas) {\n          canvasMediaStream = globalCanvas.mozCaptureStream(25);\n        } else if (\"webkitCaptureStream\" in globalCanvas) {\n          canvasMediaStream = globalCanvas.webkitCaptureStream(25);\n        }\n        try {\n          var mdStream = new MediaStream();\n          mdStream.addTrack(getTracks(canvasMediaStream, \"video\")[0]);\n          canvasMediaStream = mdStream;\n        } catch (e) {\n        }\n        if (!canvasMediaStream) {\n          throw \"captureStream API are NOT available.\";\n        }\n        mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\n          mimeType: config.mimeType || \"video/webm\"\n        });\n        mediaStreamRecorder.record();\n      } else {\n        whammy.frames = [];\n        lastTime2 = new Date().getTime();\n        drawCanvasFrame();\n      }\n      if (config.initCallback) {\n        config.initCallback();\n      }\n    };\n    this.getWebPImages = function(callback) {\n      if (htmlElement.nodeName.toLowerCase() !== \"canvas\") {\n        callback();\n        return;\n      }\n      var framesLength = whammy.frames.length;\n      whammy.frames.forEach(function(frame, idx) {\n        var framesRemaining = framesLength - idx;\n        if (!config.disableLogs) {\n          console.log(framesRemaining + \"/\" + framesLength + \" frames remaining\");\n        }\n        if (config.onEncodingCallback) {\n          config.onEncodingCallback(framesRemaining, framesLength);\n        }\n        var webp = frame.image.toDataURL(\"image/webp\", 1);\n        whammy.frames[idx].image = webp;\n      });\n      if (!config.disableLogs) {\n        console.log(\"Generating WebM\");\n      }\n      callback();\n    };\n    this.stop = function(callback) {\n      isRecording = false;\n      var that = this;\n      if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\n        mediaStreamRecorder.stop(callback);\n        return;\n      }\n      this.getWebPImages(function() {\n        whammy.compile(function(blob) {\n          if (!config.disableLogs) {\n            console.log(\"Recording finished!\");\n          }\n          that.blob = blob;\n          if (that.blob.forEach) {\n            that.blob = new Blob([], {\n              type: \"video/webm\"\n            });\n          }\n          if (callback) {\n            callback(that.blob);\n          }\n          whammy.frames = [];\n        });\n      });\n    };\n    var isPausedRecording = false;\n    this.pause = function() {\n      isPausedRecording = true;\n      if (mediaStreamRecorder instanceof MediaStreamRecorder) {\n        mediaStreamRecorder.pause();\n        return;\n      }\n    };\n    this.resume = function() {\n      isPausedRecording = false;\n      if (mediaStreamRecorder instanceof MediaStreamRecorder) {\n        mediaStreamRecorder.resume();\n        return;\n      }\n      if (!isRecording) {\n        this.record();\n      }\n    };\n    this.clearRecordedData = function() {\n      if (isRecording) {\n        this.stop(clearRecordedDataCB);\n      }\n      clearRecordedDataCB();\n    };\n    function clearRecordedDataCB() {\n      whammy.frames = [];\n      isRecording = false;\n      isPausedRecording = false;\n    }\n    this.name = \"CanvasRecorder\";\n    this.toString = function() {\n      return this.name;\n    };\n    function cloneCanvas() {\n      var newCanvas = document.createElement(\"canvas\");\n      var context = newCanvas.getContext(\"2d\");\n      newCanvas.width = htmlElement.width;\n      newCanvas.height = htmlElement.height;\n      context.drawImage(htmlElement, 0, 0);\n      return newCanvas;\n    }\n    function drawCanvasFrame() {\n      if (isPausedRecording) {\n        lastTime2 = new Date().getTime();\n        return setTimeout(drawCanvasFrame, 500);\n      }\n      if (htmlElement.nodeName.toLowerCase() === \"canvas\") {\n        var duration = new Date().getTime() - lastTime2;\n        lastTime2 = new Date().getTime();\n        whammy.frames.push({\n          image: cloneCanvas(),\n          duration\n        });\n        if (isRecording) {\n          setTimeout(drawCanvasFrame, config.frameInterval);\n        }\n        return;\n      }\n      html2canvas(htmlElement, {\n        grabMouse: typeof config.showMousePointer === \"undefined\" || config.showMousePointer,\n        onrendered: function(canvas) {\n          var duration2 = new Date().getTime() - lastTime2;\n          if (!duration2) {\n            return setTimeout(drawCanvasFrame, config.frameInterval);\n          }\n          lastTime2 = new Date().getTime();\n          whammy.frames.push({\n            image: canvas.toDataURL(\"image/webp\", 1),\n            duration: duration2\n          });\n          if (isRecording) {\n            setTimeout(drawCanvasFrame, config.frameInterval);\n          }\n        }\n      });\n    }\n    var lastTime2 = new Date().getTime();\n    var whammy = new Whammy.Video(100);\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.CanvasRecorder = CanvasRecorder;\n  }\n  /**\n   * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\n   * @summary Video recording feature in Chrome.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef WhammyRecorder\n   * @class\n   * @example\n   * var recorder = new WhammyRecorder(mediaStream);\n   * recorder.record();\n   * recorder.stop(function(blob) {\n   *     video.src = URL.createObjectURL(blob);\n   * });\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n   * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\n   */\n  function WhammyRecorder(mediaStream, config) {\n    config = config || {};\n    if (!config.frameInterval) {\n      config.frameInterval = 10;\n    }\n    if (!config.disableLogs) {\n      console.log(\"Using frames-interval:\", config.frameInterval);\n    }\n    this.record = function() {\n      if (!config.width) {\n        config.width = 320;\n      }\n      if (!config.height) {\n        config.height = 240;\n      }\n      if (!config.video) {\n        config.video = {\n          width: config.width,\n          height: config.height\n        };\n      }\n      if (!config.canvas) {\n        config.canvas = {\n          width: config.width,\n          height: config.height\n        };\n      }\n      canvas.width = config.canvas.width || 320;\n      canvas.height = config.canvas.height || 240;\n      context = canvas.getContext(\"2d\");\n      if (config.video && config.video instanceof HTMLVideoElement) {\n        video = config.video.cloneNode();\n        if (config.initCallback) {\n          config.initCallback();\n        }\n      } else {\n        video = document.createElement(\"video\");\n        setSrcObject(mediaStream, video);\n        video.onloadedmetadata = function() {\n          if (config.initCallback) {\n            config.initCallback();\n          }\n        };\n        video.width = config.video.width;\n        video.height = config.video.height;\n      }\n      video.muted = true;\n      video.play();\n      lastTime2 = new Date().getTime();\n      whammy = new Whammy.Video();\n      if (!config.disableLogs) {\n        console.log(\"canvas resolutions\", canvas.width, \"*\", canvas.height);\n        console.log(\"video width/height\", video.width || canvas.width, \"*\", video.height || canvas.height);\n      }\n      drawFrames(config.frameInterval);\n    };\n    function drawFrames(frameInterval) {\n      frameInterval = typeof frameInterval !== \"undefined\" ? frameInterval : 10;\n      var duration = new Date().getTime() - lastTime2;\n      if (!duration) {\n        return setTimeout(drawFrames, frameInterval, frameInterval);\n      }\n      if (isPausedRecording) {\n        lastTime2 = new Date().getTime();\n        return setTimeout(drawFrames, 100);\n      }\n      lastTime2 = new Date().getTime();\n      if (video.paused) {\n        video.play();\n      }\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      whammy.frames.push({\n        duration,\n        image: canvas.toDataURL(\"image/webp\")\n      });\n      if (!isStopDrawing) {\n        setTimeout(drawFrames, frameInterval, frameInterval);\n      }\n    }\n    function asyncLoop(o) {\n      var i = -1, length = o.length;\n      (function loop() {\n        i++;\n        if (i === length) {\n          o.callback();\n          return;\n        }\n        setTimeout(function() {\n          o.functionToLoop(loop, i);\n        }, 1);\n      })();\n    }\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\n      var localCanvas = document.createElement(\"canvas\");\n      localCanvas.width = canvas.width;\n      localCanvas.height = canvas.height;\n      var context2d = localCanvas.getContext(\"2d\");\n      var resultFrames = [];\n      var checkUntilNotBlack = _framesToCheck === -1;\n      var endCheckFrame = _framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length ? _framesToCheck : _frames.length;\n      var sampleColor = {\n        r: 0,\n        g: 0,\n        b: 0\n      };\n      var maxColorDifference = Math.sqrt(Math.pow(255, 2) + Math.pow(255, 2) + Math.pow(255, 2));\n      var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n      var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n      var doNotCheckNext = false;\n      asyncLoop({\n        length: endCheckFrame,\n        functionToLoop: function(loop, f) {\n          var matchPixCount, endPixCheck, maxPixCount;\n          var finishImage = function() {\n            if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance)\n              ;\n            else {\n              if (checkUntilNotBlack) {\n                doNotCheckNext = true;\n              }\n              resultFrames.push(_frames[f]);\n            }\n            loop();\n          };\n          if (!doNotCheckNext) {\n            var image = new Image();\n            image.onload = function() {\n              context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n              var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n              matchPixCount = 0;\n              endPixCheck = imageData.data.length;\n              maxPixCount = imageData.data.length / 4;\n              for (var pix = 0; pix < endPixCheck; pix += 4) {\n                var currentColor = {\n                  r: imageData.data[pix],\n                  g: imageData.data[pix + 1],\n                  b: imageData.data[pix + 2]\n                };\n                var colorDifference = Math.sqrt(Math.pow(currentColor.r - sampleColor.r, 2) + Math.pow(currentColor.g - sampleColor.g, 2) + Math.pow(currentColor.b - sampleColor.b, 2));\n                if (colorDifference <= maxColorDifference * pixTolerance) {\n                  matchPixCount++;\n                }\n              }\n              finishImage();\n            };\n            image.src = _frames[f].image;\n          } else {\n            finishImage();\n          }\n        },\n        callback: function() {\n          resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\n          if (resultFrames.length <= 0) {\n            resultFrames.push(_frames[_frames.length - 1]);\n          }\n          callback(resultFrames);\n        }\n      });\n    }\n    var isStopDrawing = false;\n    this.stop = function(callback) {\n      callback = callback || function() {\n      };\n      isStopDrawing = true;\n      var _this = this;\n      setTimeout(function() {\n        dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\n          whammy.frames = frames;\n          if (config.advertisement && config.advertisement.length) {\n            whammy.frames = config.advertisement.concat(whammy.frames);\n          }\n          whammy.compile(function(blob) {\n            _this.blob = blob;\n            if (_this.blob.forEach) {\n              _this.blob = new Blob([], {\n                type: \"video/webm\"\n              });\n            }\n            if (callback) {\n              callback(_this.blob);\n            }\n          });\n        });\n      }, 10);\n    };\n    var isPausedRecording = false;\n    this.pause = function() {\n      isPausedRecording = true;\n    };\n    this.resume = function() {\n      isPausedRecording = false;\n      if (isStopDrawing) {\n        this.record();\n      }\n    };\n    this.clearRecordedData = function() {\n      if (!isStopDrawing) {\n        this.stop(clearRecordedDataCB);\n      }\n      clearRecordedDataCB();\n    };\n    function clearRecordedDataCB() {\n      whammy.frames = [];\n      isStopDrawing = true;\n      isPausedRecording = false;\n    }\n    this.name = \"WhammyRecorder\";\n    this.toString = function() {\n      return this.name;\n    };\n    var canvas = document.createElement(\"canvas\");\n    var context = canvas.getContext(\"2d\");\n    var video;\n    var lastTime2;\n    var whammy;\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.WhammyRecorder = WhammyRecorder;\n  }\n  /**\n   * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\n   * @summary A real time javascript webm encoder based on a canvas hack.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef Whammy\n   * @class\n   * @example\n   * var recorder = new Whammy().Video(15);\n   * recorder.add(context || canvas || dataURL);\n   * var output = recorder.compile();\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   */\n  var Whammy = function() {\n    function WhammyVideo(duration) {\n      this.frames = [];\n      this.duration = duration || 1;\n      this.quality = 0.8;\n    }\n    WhammyVideo.prototype.add = function(frame, duration) {\n      if (\"canvas\" in frame) {\n        frame = frame.canvas;\n      }\n      if (\"toDataURL\" in frame) {\n        frame = frame.toDataURL(\"image/webp\", this.quality);\n      }\n      if (!/^data:image\\/webp;base64,/ig.test(frame)) {\n        throw \"Input must be formatted properly as a base64 encoded DataURI of type image/webp\";\n      }\n      this.frames.push({\n        image: frame,\n        duration: duration || this.duration\n      });\n    };\n    function processInWebWorker(_function) {\n      var blob = URL.createObjectURL(new Blob([\n        _function.toString(),\n        \"this.onmessage =  function (eee) {\" + _function.name + \"(eee.data);}\"\n      ], {\n        type: \"application/javascript\"\n      }));\n      var worker = new Worker(blob);\n      URL.revokeObjectURL(blob);\n      return worker;\n    }\n    function whammyInWebWorker(frames) {\n      function ArrayToWebM(frames2) {\n        var info = checkFrames(frames2);\n        if (!info) {\n          return [];\n        }\n        var clusterMaxDuration = 3e4;\n        var EBML2 = [{\n          \"id\": 440786851,\n          \"data\": [{\n            \"data\": 1,\n            \"id\": 17030\n          }, {\n            \"data\": 1,\n            \"id\": 17143\n          }, {\n            \"data\": 4,\n            \"id\": 17138\n          }, {\n            \"data\": 8,\n            \"id\": 17139\n          }, {\n            \"data\": \"webm\",\n            \"id\": 17026\n          }, {\n            \"data\": 2,\n            \"id\": 17031\n          }, {\n            \"data\": 2,\n            \"id\": 17029\n          }]\n        }, {\n          \"id\": 408125543,\n          \"data\": [{\n            \"id\": 357149030,\n            \"data\": [{\n              \"data\": 1e6,\n              \"id\": 2807729\n            }, {\n              \"data\": \"whammy\",\n              \"id\": 19840\n            }, {\n              \"data\": \"whammy\",\n              \"id\": 22337\n            }, {\n              \"data\": doubleToString(info.duration),\n              \"id\": 17545\n            }]\n          }, {\n            \"id\": 374648427,\n            \"data\": [{\n              \"id\": 174,\n              \"data\": [{\n                \"data\": 1,\n                \"id\": 215\n              }, {\n                \"data\": 1,\n                \"id\": 29637\n              }, {\n                \"data\": 0,\n                \"id\": 156\n              }, {\n                \"data\": \"und\",\n                \"id\": 2274716\n              }, {\n                \"data\": \"V_VP8\",\n                \"id\": 134\n              }, {\n                \"data\": \"VP8\",\n                \"id\": 2459272\n              }, {\n                \"data\": 1,\n                \"id\": 131\n              }, {\n                \"id\": 224,\n                \"data\": [{\n                  \"data\": info.width,\n                  \"id\": 176\n                }, {\n                  \"data\": info.height,\n                  \"id\": 186\n                }]\n              }]\n            }]\n          }]\n        }];\n        var frameNumber = 0;\n        var clusterTimecode = 0;\n        while (frameNumber < frames2.length) {\n          var clusterFrames = [];\n          var clusterDuration = 0;\n          do {\n            clusterFrames.push(frames2[frameNumber]);\n            clusterDuration += frames2[frameNumber].duration;\n            frameNumber++;\n          } while (frameNumber < frames2.length && clusterDuration < clusterMaxDuration);\n          var clusterCounter = 0;\n          var cluster = {\n            \"id\": 524531317,\n            \"data\": getClusterData(clusterTimecode, clusterCounter, clusterFrames)\n          };\n          EBML2[1].data.push(cluster);\n          clusterTimecode += clusterDuration;\n        }\n        return generateEBML(EBML2);\n      }\n      function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\n        return [{\n          \"data\": clusterTimecode,\n          \"id\": 231\n        }].concat(clusterFrames.map(function(webp) {\n          var block = makeSimpleBlock({\n            discardable: 0,\n            frame: webp.data.slice(4),\n            invisible: 0,\n            keyframe: 1,\n            lacing: 0,\n            trackNum: 1,\n            timecode: Math.round(clusterCounter)\n          });\n          clusterCounter += webp.duration;\n          return {\n            data: block,\n            id: 163\n          };\n        }));\n      }\n      function checkFrames(frames2) {\n        if (!frames2[0]) {\n          postMessage({\n            error: \"Something went wrong. Maybe WebP format is not supported in the current browser.\"\n          });\n          return;\n        }\n        var width = frames2[0].width, height = frames2[0].height, duration = frames2[0].duration;\n        for (var i = 1; i < frames2.length; i++) {\n          duration += frames2[i].duration;\n        }\n        return {\n          duration,\n          width,\n          height\n        };\n      }\n      function numToBuffer(num) {\n        var parts = [];\n        while (num > 0) {\n          parts.push(num & 255);\n          num = num >> 8;\n        }\n        return new Uint8Array(parts.reverse());\n      }\n      function strToBuffer(str) {\n        return new Uint8Array(str.split(\"\").map(function(e) {\n          return e.charCodeAt(0);\n        }));\n      }\n      function bitsToBuffer(bits) {\n        var data = [];\n        var pad = bits.length % 8 ? new Array(1 + 8 - bits.length % 8).join(\"0\") : \"\";\n        bits = pad + bits;\n        for (var i = 0; i < bits.length; i += 8) {\n          data.push(parseInt(bits.substr(i, 8), 2));\n        }\n        return new Uint8Array(data);\n      }\n      function generateEBML(json) {\n        var ebml = [];\n        for (var i = 0; i < json.length; i++) {\n          var data = json[i].data;\n          if (typeof data === \"object\") {\n            data = generateEBML(data);\n          }\n          if (typeof data === \"number\") {\n            data = bitsToBuffer(data.toString(2));\n          }\n          if (typeof data === \"string\") {\n            data = strToBuffer(data);\n          }\n          var len = data.size || data.byteLength || data.length;\n          var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\n          var sizeToString = len.toString(2);\n          var padded = new Array(zeroes * 7 + 7 + 1 - sizeToString.length).join(\"0\") + sizeToString;\n          var size = new Array(zeroes).join(\"0\") + \"1\" + padded;\n          ebml.push(numToBuffer(json[i].id));\n          ebml.push(bitsToBuffer(size));\n          ebml.push(data);\n        }\n        return new Blob(ebml, {\n          type: \"video/webm\"\n        });\n      }\n      function makeSimpleBlock(data) {\n        var flags = 0;\n        if (data.keyframe) {\n          flags |= 128;\n        }\n        if (data.invisible) {\n          flags |= 8;\n        }\n        if (data.lacing) {\n          flags |= data.lacing << 1;\n        }\n        if (data.discardable) {\n          flags |= 1;\n        }\n        if (data.trackNum > 127) {\n          throw \"TrackNumber > 127 not supported\";\n        }\n        var out = [data.trackNum | 128, data.timecode >> 8, data.timecode & 255, flags].map(function(e) {\n          return String.fromCharCode(e);\n        }).join(\"\") + data.frame;\n        return out;\n      }\n      function parseWebP(riff) {\n        var VP8 = riff.RIFF[0].WEBP[0];\n        var frameStart = VP8.indexOf(\"\\x9D\u0001*\");\n        for (var i = 0, c = []; i < 4; i++) {\n          c[i] = VP8.charCodeAt(frameStart + 3 + i);\n        }\n        var width, height, tmp;\n        tmp = c[1] << 8 | c[0];\n        width = tmp & 16383;\n        tmp = c[3] << 8 | c[2];\n        height = tmp & 16383;\n        return {\n          width,\n          height,\n          data: VP8,\n          riff\n        };\n      }\n      function getStrLength(string, offset) {\n        return parseInt(string.substr(offset + 4, 4).split(\"\").map(function(i) {\n          var unpadded = i.charCodeAt(0).toString(2);\n          return new Array(8 - unpadded.length + 1).join(\"0\") + unpadded;\n        }).join(\"\"), 2);\n      }\n      function parseRIFF(string) {\n        var offset = 0;\n        var chunks = {};\n        while (offset < string.length) {\n          var id = string.substr(offset, 4);\n          var len = getStrLength(string, offset);\n          var data = string.substr(offset + 4 + 4, len);\n          offset += 4 + 4 + len;\n          chunks[id] = chunks[id] || [];\n          if (id === \"RIFF\" || id === \"LIST\") {\n            chunks[id].push(parseRIFF(data));\n          } else {\n            chunks[id].push(data);\n          }\n        }\n        return chunks;\n      }\n      function doubleToString(num) {\n        return [].slice.call(new Uint8Array(new Float64Array([num]).buffer), 0).map(function(e) {\n          return String.fromCharCode(e);\n        }).reverse().join(\"\");\n      }\n      var webm = new ArrayToWebM(frames.map(function(frame) {\n        var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\n        webp.duration = frame.duration;\n        return webp;\n      }));\n      postMessage(webm);\n    }\n    WhammyVideo.prototype.compile = function(callback) {\n      var webWorker = processInWebWorker(whammyInWebWorker);\n      webWorker.onmessage = function(event) {\n        if (event.data.error) {\n          console.error(event.data.error);\n          return;\n        }\n        callback(event.data);\n      };\n      webWorker.postMessage(this.frames);\n    };\n    return {\n      Video: WhammyVideo\n    };\n  }();\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.Whammy = Whammy;\n  }\n  /**\n   * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\n   * @summary Writing blobs into IndexedDB.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @example\n   * DiskStorage.Store({\n   *     audioBlob: yourAudioBlob,\n   *     videoBlob: yourVideoBlob,\n   *     gifBlob  : yourGifBlob\n   * });\n   * DiskStorage.Fetch(function(dataURL, type) {\n   *     if(type === 'audioBlob') { }\n   *     if(type === 'videoBlob') { }\n   *     if(type === 'gifBlob')   { }\n   * });\n   * // DiskStorage.dataStoreName = 'recordRTC';\n   * // DiskStorage.onError = function(error) { };\n   * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\n   * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\n   * @property {function} Store - This method stores blobs in IndexedDB.\n   * @property {function} onError - This function is invoked for any known/unknown error.\n   * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   */\n  var DiskStorage = {\n    init: function() {\n      var self = this;\n      if (typeof indexedDB === \"undefined\" || typeof indexedDB.open === \"undefined\") {\n        console.error(\"IndexedDB API are not available in this browser.\");\n        return;\n      }\n      var dbVersion = 1;\n      var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, \"\"), db;\n      var request = indexedDB.open(dbName, dbVersion);\n      function createObjectStore(dataBase) {\n        dataBase.createObjectStore(self.dataStoreName);\n      }\n      function putInDB() {\n        var transaction = db.transaction([self.dataStoreName], \"readwrite\");\n        if (self.videoBlob) {\n          transaction.objectStore(self.dataStoreName).put(self.videoBlob, \"videoBlob\");\n        }\n        if (self.gifBlob) {\n          transaction.objectStore(self.dataStoreName).put(self.gifBlob, \"gifBlob\");\n        }\n        if (self.audioBlob) {\n          transaction.objectStore(self.dataStoreName).put(self.audioBlob, \"audioBlob\");\n        }\n        function getFromStore(portionName) {\n          transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\n            if (self.callback) {\n              self.callback(event.target.result, portionName);\n            }\n          };\n        }\n        getFromStore(\"audioBlob\");\n        getFromStore(\"videoBlob\");\n        getFromStore(\"gifBlob\");\n      }\n      request.onerror = self.onError;\n      request.onsuccess = function() {\n        db = request.result;\n        db.onerror = self.onError;\n        if (db.setVersion) {\n          if (db.version !== dbVersion) {\n            var setVersion = db.setVersion(dbVersion);\n            setVersion.onsuccess = function() {\n              createObjectStore(db);\n              putInDB();\n            };\n          } else {\n            putInDB();\n          }\n        } else {\n          putInDB();\n        }\n      };\n      request.onupgradeneeded = function(event) {\n        createObjectStore(event.target.result);\n      };\n    },\n    Fetch: function(callback) {\n      this.callback = callback;\n      this.init();\n      return this;\n    },\n    Store: function(config) {\n      this.audioBlob = config.audioBlob;\n      this.videoBlob = config.videoBlob;\n      this.gifBlob = config.gifBlob;\n      this.init();\n      return this;\n    },\n    onError: function(error) {\n      console.error(JSON.stringify(error, null, \"\t\"));\n    },\n    dataStoreName: \"recordRTC\",\n    dbName: null\n  };\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.DiskStorage = DiskStorage;\n  }\n  /**\n   * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef GifRecorder\n   * @class\n   * @example\n   * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\n   * recorder.record();\n   * recorder.stop(function(blob) {\n   *     img.src = URL.createObjectURL(blob);\n   * });\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\n   * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\n   */\n  function GifRecorder(mediaStream, config) {\n    if (typeof GIFEncoder === \"undefined\") {\n      var script = document.createElement(\"script\");\n      script.src = \"https://www.webrtc-experiment.com/gif-recorder.js\";\n      (document.body || document.documentElement).appendChild(script);\n    }\n    config = config || {};\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\n    this.record = function() {\n      if (typeof GIFEncoder === \"undefined\") {\n        setTimeout(self.record, 1e3);\n        return;\n      }\n      if (!isLoadedMetaData) {\n        setTimeout(self.record, 1e3);\n        return;\n      }\n      if (!isHTMLObject) {\n        if (!config.width) {\n          config.width = video.offsetWidth || 320;\n        }\n        if (!config.height) {\n          config.height = video.offsetHeight || 240;\n        }\n        if (!config.video) {\n          config.video = {\n            width: config.width,\n            height: config.height\n          };\n        }\n        if (!config.canvas) {\n          config.canvas = {\n            width: config.width,\n            height: config.height\n          };\n        }\n        canvas.width = config.canvas.width || 320;\n        canvas.height = config.canvas.height || 240;\n        video.width = config.video.width || 320;\n        video.height = config.video.height || 240;\n      }\n      gifEncoder = new GIFEncoder();\n      gifEncoder.setRepeat(0);\n      gifEncoder.setDelay(config.frameRate || 200);\n      gifEncoder.setQuality(config.quality || 10);\n      gifEncoder.start();\n      if (typeof config.onGifRecordingStarted === \"function\") {\n        config.onGifRecordingStarted();\n      }\n      function drawVideoFrame(time) {\n        if (self.clearedRecordedData === true) {\n          return;\n        }\n        if (isPausedRecording) {\n          return setTimeout(function() {\n            drawVideoFrame(time);\n          }, 100);\n        }\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n        if (typeof lastFrameTime === void 0) {\n          lastFrameTime = time;\n        }\n        if (time - lastFrameTime < 90) {\n          return;\n        }\n        if (!isHTMLObject && video.paused) {\n          video.play();\n        }\n        if (!isHTMLObject) {\n          context.drawImage(video, 0, 0, canvas.width, canvas.height);\n        }\n        if (config.onGifPreview) {\n          config.onGifPreview(canvas.toDataURL(\"image/png\"));\n        }\n        gifEncoder.addFrame(context);\n        lastFrameTime = time;\n      }\n      lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n      if (config.initCallback) {\n        config.initCallback();\n      }\n    };\n    this.stop = function(callback) {\n      callback = callback || function() {\n      };\n      if (lastAnimationFrame) {\n        cancelAnimationFrame(lastAnimationFrame);\n      }\n      this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\n        type: \"image/gif\"\n      });\n      callback(this.blob);\n      gifEncoder.stream().bin = [];\n    };\n    var isPausedRecording = false;\n    this.pause = function() {\n      isPausedRecording = true;\n    };\n    this.resume = function() {\n      isPausedRecording = false;\n    };\n    this.clearRecordedData = function() {\n      self.clearedRecordedData = true;\n      clearRecordedDataCB();\n    };\n    function clearRecordedDataCB() {\n      if (gifEncoder) {\n        gifEncoder.stream().bin = [];\n      }\n    }\n    this.name = \"GifRecorder\";\n    this.toString = function() {\n      return this.name;\n    };\n    var canvas = document.createElement(\"canvas\");\n    var context = canvas.getContext(\"2d\");\n    if (isHTMLObject) {\n      if (mediaStream instanceof CanvasRenderingContext2D) {\n        context = mediaStream;\n        canvas = context.canvas;\n      } else if (mediaStream instanceof HTMLCanvasElement) {\n        context = mediaStream.getContext(\"2d\");\n        canvas = mediaStream;\n      }\n    }\n    var isLoadedMetaData = true;\n    if (!isHTMLObject) {\n      var video = document.createElement(\"video\");\n      video.muted = true;\n      video.autoplay = true;\n      video.playsInline = true;\n      isLoadedMetaData = false;\n      video.onloadedmetadata = function() {\n        isLoadedMetaData = true;\n      };\n      setSrcObject(mediaStream, video);\n      video.play();\n    }\n    var lastAnimationFrame = null;\n    var lastFrameTime;\n    var gifEncoder;\n    var self = this;\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.GifRecorder = GifRecorder;\n  }\n  function MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\n    var browserFakeUserAgent2 = \"Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45\";\n    (function(that) {\n      if (typeof RecordRTC2 !== \"undefined\") {\n        return;\n      }\n      if (!that) {\n        return;\n      }\n      if (typeof window !== \"undefined\") {\n        return;\n      }\n      if (typeof commonjsGlobal === \"undefined\") {\n        return;\n      }\n      commonjsGlobal.navigator = {\n        userAgent: browserFakeUserAgent2,\n        getUserMedia: function() {\n        }\n      };\n      if (!commonjsGlobal.console) {\n        commonjsGlobal.console = {};\n      }\n      if (typeof commonjsGlobal.console.log === \"undefined\" || typeof commonjsGlobal.console.error === \"undefined\") {\n        commonjsGlobal.console.error = commonjsGlobal.console.log = commonjsGlobal.console.log || function() {\n          console.log(arguments);\n        };\n      }\n      if (typeof document === \"undefined\") {\n        that.document = {\n          documentElement: {\n            appendChild: function() {\n              return \"\";\n            }\n          }\n        };\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\n          var obj = {\n            getContext: function() {\n              return obj;\n            },\n            play: function() {\n            },\n            pause: function() {\n            },\n            drawImage: function() {\n            },\n            toDataURL: function() {\n              return \"\";\n            },\n            style: {}\n          };\n          return obj;\n        };\n        that.HTMLVideoElement = function() {\n        };\n      }\n      if (typeof location === \"undefined\") {\n        that.location = {\n          protocol: \"file:\",\n          href: \"\",\n          hash: \"\"\n        };\n      }\n      if (typeof screen === \"undefined\") {\n        that.screen = {\n          width: 0,\n          height: 0\n        };\n      }\n      if (typeof URL2 === \"undefined\") {\n        that.URL = {\n          createObjectURL: function() {\n            return \"\";\n          },\n          revokeObjectURL: function() {\n            return \"\";\n          }\n        };\n      }\n      that.window = commonjsGlobal;\n    })(typeof commonjsGlobal !== \"undefined\" ? commonjsGlobal : null);\n    elementClass = elementClass || \"multi-streams-mixer\";\n    var videos = [];\n    var isStopDrawingFrames = false;\n    var canvas = document.createElement(\"canvas\");\n    var context = canvas.getContext(\"2d\");\n    canvas.style.opacity = 0;\n    canvas.style.position = \"absolute\";\n    canvas.style.zIndex = -1;\n    canvas.style.top = \"-1000em\";\n    canvas.style.left = \"-1000em\";\n    canvas.className = elementClass;\n    (document.body || document.documentElement).appendChild(canvas);\n    this.disableLogs = false;\n    this.frameInterval = 10;\n    this.width = 360;\n    this.height = 240;\n    this.useGainNode = true;\n    var self = this;\n    var AudioContext2 = window.AudioContext;\n    if (typeof AudioContext2 === \"undefined\") {\n      if (typeof webkitAudioContext !== \"undefined\") {\n        AudioContext2 = webkitAudioContext;\n      }\n      if (typeof mozAudioContext !== \"undefined\") {\n        AudioContext2 = mozAudioContext;\n      }\n    }\n    var URL2 = window.URL;\n    if (typeof URL2 === \"undefined\" && typeof webkitURL !== \"undefined\") {\n      URL2 = webkitURL;\n    }\n    if (typeof navigator !== \"undefined\" && typeof navigator.getUserMedia === \"undefined\") {\n      if (typeof navigator.webkitGetUserMedia !== \"undefined\") {\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\n      }\n      if (typeof navigator.mozGetUserMedia !== \"undefined\") {\n        navigator.getUserMedia = navigator.mozGetUserMedia;\n      }\n    }\n    var MediaStream2 = window.MediaStream;\n    if (typeof MediaStream2 === \"undefined\" && typeof webkitMediaStream !== \"undefined\") {\n      MediaStream2 = webkitMediaStream;\n    }\n    if (typeof MediaStream2 !== \"undefined\") {\n      if (typeof MediaStream2.prototype.stop === \"undefined\") {\n        MediaStream2.prototype.stop = function() {\n          this.getTracks().forEach(function(track) {\n            track.stop();\n          });\n        };\n      }\n    }\n    var Storage2 = {};\n    if (typeof AudioContext2 !== \"undefined\") {\n      Storage2.AudioContext = AudioContext2;\n    } else if (typeof webkitAudioContext !== \"undefined\") {\n      Storage2.AudioContext = webkitAudioContext;\n    }\n    function setSrcObject2(stream, element) {\n      if (\"srcObject\" in element) {\n        element.srcObject = stream;\n      } else if (\"mozSrcObject\" in element) {\n        element.mozSrcObject = stream;\n      } else {\n        element.srcObject = stream;\n      }\n    }\n    this.startDrawingFrames = function() {\n      drawVideosToCanvas();\n    };\n    function drawVideosToCanvas() {\n      if (isStopDrawingFrames) {\n        return;\n      }\n      var videosLength = videos.length;\n      var fullcanvas = false;\n      var remaining = [];\n      videos.forEach(function(video) {\n        if (!video.stream) {\n          video.stream = {};\n        }\n        if (video.stream.fullcanvas) {\n          fullcanvas = video;\n        } else {\n          remaining.push(video);\n        }\n      });\n      if (fullcanvas) {\n        canvas.width = fullcanvas.stream.width;\n        canvas.height = fullcanvas.stream.height;\n      } else if (remaining.length) {\n        canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\n        var height = 1;\n        if (videosLength === 3 || videosLength === 4) {\n          height = 2;\n        }\n        if (videosLength === 5 || videosLength === 6) {\n          height = 3;\n        }\n        if (videosLength === 7 || videosLength === 8) {\n          height = 4;\n        }\n        if (videosLength === 9 || videosLength === 10) {\n          height = 5;\n        }\n        canvas.height = remaining[0].height * height;\n      } else {\n        canvas.width = self.width || 360;\n        canvas.height = self.height || 240;\n      }\n      if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\n        drawImage(fullcanvas);\n      }\n      remaining.forEach(function(video, idx) {\n        drawImage(video, idx);\n      });\n      setTimeout(drawVideosToCanvas, self.frameInterval);\n    }\n    function drawImage(video, idx) {\n      if (isStopDrawingFrames) {\n        return;\n      }\n      var x = 0;\n      var y = 0;\n      var width = video.width;\n      var height = video.height;\n      if (idx === 1) {\n        x = video.width;\n      }\n      if (idx === 2) {\n        y = video.height;\n      }\n      if (idx === 3) {\n        x = video.width;\n        y = video.height;\n      }\n      if (idx === 4) {\n        y = video.height * 2;\n      }\n      if (idx === 5) {\n        x = video.width;\n        y = video.height * 2;\n      }\n      if (idx === 6) {\n        y = video.height * 3;\n      }\n      if (idx === 7) {\n        x = video.width;\n        y = video.height * 3;\n      }\n      if (typeof video.stream.left !== \"undefined\") {\n        x = video.stream.left;\n      }\n      if (typeof video.stream.top !== \"undefined\") {\n        y = video.stream.top;\n      }\n      if (typeof video.stream.width !== \"undefined\") {\n        width = video.stream.width;\n      }\n      if (typeof video.stream.height !== \"undefined\") {\n        height = video.stream.height;\n      }\n      context.drawImage(video, x, y, width, height);\n      if (typeof video.stream.onRender === \"function\") {\n        video.stream.onRender(context, x, y, width, height, idx);\n      }\n    }\n    function getMixedStream() {\n      isStopDrawingFrames = false;\n      var mixedVideoStream = getMixedVideoStream();\n      var mixedAudioStream = getMixedAudioStream();\n      if (mixedAudioStream) {\n        mixedAudioStream.getTracks().filter(function(t) {\n          return t.kind === \"audio\";\n        }).forEach(function(track) {\n          mixedVideoStream.addTrack(track);\n        });\n      }\n      arrayOfMediaStreams.forEach(function(stream) {\n        if (stream.fullcanvas)\n          ;\n      });\n      return mixedVideoStream;\n    }\n    function getMixedVideoStream() {\n      resetVideoStreams();\n      var capturedStream;\n      if (\"captureStream\" in canvas) {\n        capturedStream = canvas.captureStream();\n      } else if (\"mozCaptureStream\" in canvas) {\n        capturedStream = canvas.mozCaptureStream();\n      } else if (!self.disableLogs) {\n        console.error(\"Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features\");\n      }\n      var videoStream = new MediaStream2();\n      capturedStream.getTracks().filter(function(t) {\n        return t.kind === \"video\";\n      }).forEach(function(track) {\n        videoStream.addTrack(track);\n      });\n      canvas.stream = videoStream;\n      return videoStream;\n    }\n    function getMixedAudioStream() {\n      if (!Storage2.AudioContextConstructor) {\n        Storage2.AudioContextConstructor = new Storage2.AudioContext();\n      }\n      self.audioContext = Storage2.AudioContextConstructor;\n      self.audioSources = [];\n      if (self.useGainNode === true) {\n        self.gainNode = self.audioContext.createGain();\n        self.gainNode.connect(self.audioContext.destination);\n        self.gainNode.gain.value = 0;\n      }\n      var audioTracksLength = 0;\n      arrayOfMediaStreams.forEach(function(stream) {\n        if (!stream.getTracks().filter(function(t) {\n          return t.kind === \"audio\";\n        }).length) {\n          return;\n        }\n        audioTracksLength++;\n        var audioSource = self.audioContext.createMediaStreamSource(stream);\n        if (self.useGainNode === true) {\n          audioSource.connect(self.gainNode);\n        }\n        self.audioSources.push(audioSource);\n      });\n      if (!audioTracksLength) {\n        return;\n      }\n      self.audioDestination = self.audioContext.createMediaStreamDestination();\n      self.audioSources.forEach(function(audioSource) {\n        audioSource.connect(self.audioDestination);\n      });\n      return self.audioDestination.stream;\n    }\n    function getVideo(stream) {\n      var video = document.createElement(\"video\");\n      setSrcObject2(stream, video);\n      video.className = elementClass;\n      video.muted = true;\n      video.volume = 0;\n      video.width = stream.width || self.width || 360;\n      video.height = stream.height || self.height || 240;\n      video.play();\n      return video;\n    }\n    this.appendStreams = function(streams) {\n      if (!streams) {\n        throw \"First parameter is required.\";\n      }\n      if (!(streams instanceof Array)) {\n        streams = [streams];\n      }\n      streams.forEach(function(stream) {\n        var newStream = new MediaStream2();\n        if (stream.getTracks().filter(function(t) {\n          return t.kind === \"video\";\n        }).length) {\n          var video = getVideo(stream);\n          video.stream = stream;\n          videos.push(video);\n          newStream.addTrack(stream.getTracks().filter(function(t) {\n            return t.kind === \"video\";\n          })[0]);\n        }\n        if (stream.getTracks().filter(function(t) {\n          return t.kind === \"audio\";\n        }).length) {\n          var audioSource = self.audioContext.createMediaStreamSource(stream);\n          self.audioDestination = self.audioContext.createMediaStreamDestination();\n          audioSource.connect(self.audioDestination);\n          newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\n            return t.kind === \"audio\";\n          })[0]);\n        }\n        arrayOfMediaStreams.push(newStream);\n      });\n    };\n    this.releaseStreams = function() {\n      videos = [];\n      isStopDrawingFrames = true;\n      if (self.gainNode) {\n        self.gainNode.disconnect();\n        self.gainNode = null;\n      }\n      if (self.audioSources.length) {\n        self.audioSources.forEach(function(source) {\n          source.disconnect();\n        });\n        self.audioSources = [];\n      }\n      if (self.audioDestination) {\n        self.audioDestination.disconnect();\n        self.audioDestination = null;\n      }\n      if (self.audioContext) {\n        self.audioContext.close();\n      }\n      self.audioContext = null;\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      if (canvas.stream) {\n        canvas.stream.stop();\n        canvas.stream = null;\n      }\n    };\n    this.resetVideoStreams = function(streams) {\n      if (streams && !(streams instanceof Array)) {\n        streams = [streams];\n      }\n      resetVideoStreams(streams);\n    };\n    function resetVideoStreams(streams) {\n      videos = [];\n      streams = streams || arrayOfMediaStreams;\n      streams.forEach(function(stream) {\n        if (!stream.getTracks().filter(function(t) {\n          return t.kind === \"video\";\n        }).length) {\n          return;\n        }\n        var video = getVideo(stream);\n        video.stream = stream;\n        videos.push(video);\n      });\n    }\n    this.name = \"MultiStreamsMixer\";\n    this.toString = function() {\n      return this.name;\n    };\n    this.getMixedStream = getMixedStream;\n  }\n  if (typeof RecordRTC2 === \"undefined\") {\n    {\n      module.exports = MultiStreamsMixer;\n    }\n  }\n  /**\n   * MultiStreamRecorder can record multiple videos in single container.\n   * @summary Multi-videos recorder.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef MultiStreamRecorder\n   * @class\n   * @example\n   * var options = {\n   *     mimeType: 'video/webm'\n   * }\n   * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\n   * recorder.record();\n   * recorder.stop(function(blob) {\n   *     video.src = URL.createObjectURL(blob);\n   *\n   *     // or\n   *     var blob = recorder.blob;\n   * });\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStreams} mediaStreams - Array of MediaStreams.\n   * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\n   */\n  function MultiStreamRecorder(arrayOfMediaStreams, options) {\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\n    var self = this;\n    var mixer;\n    var mediaRecorder;\n    options = options || {\n      elementClass: \"multi-streams-mixer\",\n      mimeType: \"video/webm\",\n      video: {\n        width: 360,\n        height: 240\n      }\n    };\n    if (!options.frameInterval) {\n      options.frameInterval = 10;\n    }\n    if (!options.video) {\n      options.video = {};\n    }\n    if (!options.video.width) {\n      options.video.width = 360;\n    }\n    if (!options.video.height) {\n      options.video.height = 240;\n    }\n    this.record = function() {\n      mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || \"multi-streams-mixer\");\n      if (getAllVideoTracks().length) {\n        mixer.frameInterval = options.frameInterval || 10;\n        mixer.width = options.video.width || 360;\n        mixer.height = options.video.height || 240;\n        mixer.startDrawingFrames();\n      }\n      if (options.previewStream && typeof options.previewStream === \"function\") {\n        options.previewStream(mixer.getMixedStream());\n      }\n      mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\n      mediaRecorder.record();\n    };\n    function getAllVideoTracks() {\n      var tracks = [];\n      arrayOfMediaStreams.forEach(function(stream) {\n        getTracks(stream, \"video\").forEach(function(track) {\n          tracks.push(track);\n        });\n      });\n      return tracks;\n    }\n    this.stop = function(callback) {\n      if (!mediaRecorder) {\n        return;\n      }\n      mediaRecorder.stop(function(blob) {\n        self.blob = blob;\n        callback(blob);\n        self.clearRecordedData();\n      });\n    };\n    this.pause = function() {\n      if (mediaRecorder) {\n        mediaRecorder.pause();\n      }\n    };\n    this.resume = function() {\n      if (mediaRecorder) {\n        mediaRecorder.resume();\n      }\n    };\n    this.clearRecordedData = function() {\n      if (mediaRecorder) {\n        mediaRecorder.clearRecordedData();\n        mediaRecorder = null;\n      }\n      if (mixer) {\n        mixer.releaseStreams();\n        mixer = null;\n      }\n    };\n    this.addStreams = function(streams) {\n      if (!streams) {\n        throw \"First parameter is required.\";\n      }\n      if (!(streams instanceof Array)) {\n        streams = [streams];\n      }\n      arrayOfMediaStreams.concat(streams);\n      if (!mediaRecorder || !mixer) {\n        return;\n      }\n      mixer.appendStreams(streams);\n      if (options.previewStream && typeof options.previewStream === \"function\") {\n        options.previewStream(mixer.getMixedStream());\n      }\n    };\n    this.resetVideoStreams = function(streams) {\n      if (!mixer) {\n        return;\n      }\n      if (streams && !(streams instanceof Array)) {\n        streams = [streams];\n      }\n      mixer.resetVideoStreams(streams);\n    };\n    this.getMixer = function() {\n      return mixer;\n    };\n    this.name = \"MultiStreamRecorder\";\n    this.toString = function() {\n      return this.name;\n    };\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.MultiStreamRecorder = MultiStreamRecorder;\n  }\n  /**\n   * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\n   * @summary Promises for {@link RecordRTC}\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef RecordRTCPromisesHandler\n   * @class\n   * @example\n   * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\n   * recorder.startRecording()\n   *         .then(successCB)\n   *         .catch(errorCB);\n   * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \n   * recorder.recordRTC.onStateChanged = function(state) {};\n   * recorder.recordRTC.setRecordingDuration(5000);\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\n   * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n   * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\n   * @requires {@link RecordRTC}\n   */\n  function RecordRTCPromisesHandler(mediaStream, options) {\n    if (!this) {\n      throw 'Use \"new RecordRTCPromisesHandler()\"';\n    }\n    if (typeof mediaStream === \"undefined\") {\n      throw 'First argument \"MediaStream\" is required.';\n    }\n    var self = this;\n    self.recordRTC = new RecordRTC2(mediaStream, options);\n    this.startRecording = function() {\n      return new Promise(function(resolve, reject) {\n        try {\n          self.recordRTC.startRecording();\n          resolve();\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.stopRecording = function() {\n      return new Promise(function(resolve, reject) {\n        try {\n          self.recordRTC.stopRecording(function(url) {\n            self.blob = self.recordRTC.getBlob();\n            if (!self.blob || !self.blob.size) {\n              reject(\"Empty blob.\", self.blob);\n              return;\n            }\n            resolve(url);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.pauseRecording = function() {\n      return new Promise(function(resolve, reject) {\n        try {\n          self.recordRTC.pauseRecording();\n          resolve();\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.resumeRecording = function() {\n      return new Promise(function(resolve, reject) {\n        try {\n          self.recordRTC.resumeRecording();\n          resolve();\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.getDataURL = function(callback) {\n      return new Promise(function(resolve, reject) {\n        try {\n          self.recordRTC.getDataURL(function(dataURL) {\n            resolve(dataURL);\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.getBlob = function() {\n      return new Promise(function(resolve, reject) {\n        try {\n          resolve(self.recordRTC.getBlob());\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.getInternalRecorder = function() {\n      return new Promise(function(resolve, reject) {\n        try {\n          resolve(self.recordRTC.getInternalRecorder());\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.reset = function() {\n      return new Promise(function(resolve, reject) {\n        try {\n          resolve(self.recordRTC.reset());\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.destroy = function() {\n      return new Promise(function(resolve, reject) {\n        try {\n          resolve(self.recordRTC.destroy());\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.getState = function() {\n      return new Promise(function(resolve, reject) {\n        try {\n          resolve(self.recordRTC.getState());\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n    this.blob = null;\n    this.version = \"5.6.2\";\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\n  }\n  /**\n   * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\n   * @summary Video recording feature in Chrome, Firefox and maybe Edge.\n   * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n   * @author {@link https://MuazKhan.com|Muaz Khan}\n   * @typedef WebAssemblyRecorder\n   * @class\n   * @example\n   * var recorder = new WebAssemblyRecorder(mediaStream);\n   * recorder.record();\n   * recorder.stop(function(blob) {\n   *     video.src = URL.createObjectURL(blob);\n   * });\n   * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n   * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n   * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\n   */\n  function WebAssemblyRecorder(stream, config) {\n    if (typeof ReadableStream === \"undefined\" || typeof WritableStream === \"undefined\") {\n      console.error(\"Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js\");\n    }\n    config = config || {};\n    config.width = config.width || 640;\n    config.height = config.height || 480;\n    config.frameRate = config.frameRate || 30;\n    config.bitrate = config.bitrate || 1200;\n    config.realtime = config.realtime || true;\n    var finished;\n    function cameraStream() {\n      return new ReadableStream({\n        start: function(controller) {\n          var cvs = document.createElement(\"canvas\");\n          var video = document.createElement(\"video\");\n          var first = true;\n          video.srcObject = stream;\n          video.muted = true;\n          video.height = config.height;\n          video.width = config.width;\n          video.volume = 0;\n          video.onplaying = function() {\n            cvs.width = config.width;\n            cvs.height = config.height;\n            var ctx = cvs.getContext(\"2d\");\n            var frameTimeout = 1e3 / config.frameRate;\n            var cameraTimer = setInterval(function f() {\n              if (finished) {\n                clearInterval(cameraTimer);\n                controller.close();\n              }\n              if (first) {\n                first = false;\n                if (config.onVideoProcessStarted) {\n                  config.onVideoProcessStarted();\n                }\n              }\n              ctx.drawImage(video, 0, 0);\n              if (controller._controlledReadableStream.state !== \"closed\") {\n                try {\n                  controller.enqueue(ctx.getImageData(0, 0, config.width, config.height));\n                } catch (e) {\n                }\n              }\n            }, frameTimeout);\n          };\n          video.play();\n        }\n      });\n    }\n    var worker;\n    function startRecording(stream2, buffer) {\n      if (!config.workerPath && !buffer) {\n        finished = false;\n        fetch(\"https://unpkg.com/webm-wasm@latest/dist/webm-worker.js\").then(function(r) {\n          r.arrayBuffer().then(function(buffer2) {\n            startRecording(stream2, buffer2);\n          });\n        });\n        return;\n      }\n      if (!config.workerPath && buffer instanceof ArrayBuffer) {\n        var blob = new Blob([buffer], {\n          type: \"text/javascript\"\n        });\n        config.workerPath = URL.createObjectURL(blob);\n      }\n      if (!config.workerPath) {\n        console.error(\"workerPath parameter is missing.\");\n      }\n      worker = new Worker(config.workerPath);\n      worker.postMessage(config.webAssemblyPath || \"https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm\");\n      worker.addEventListener(\"message\", function(event) {\n        if (event.data === \"READY\") {\n          worker.postMessage({\n            width: config.width,\n            height: config.height,\n            bitrate: config.bitrate || 1200,\n            timebaseDen: config.frameRate || 30,\n            realtime: config.realtime\n          });\n          cameraStream().pipeTo(new WritableStream({\n            write: function(image) {\n              if (finished) {\n                console.error(\"Got image, but recorder is finished!\");\n                return;\n              }\n              worker.postMessage(image.data.buffer, [image.data.buffer]);\n            }\n          }));\n        } else if (!!event.data) {\n          if (!isPaused) {\n            arrayOfBuffers.push(event.data);\n          }\n        }\n      });\n    }\n    this.record = function() {\n      arrayOfBuffers = [];\n      isPaused = false;\n      this.blob = null;\n      startRecording(stream);\n      if (typeof config.initCallback === \"function\") {\n        config.initCallback();\n      }\n    };\n    var isPaused;\n    this.pause = function() {\n      isPaused = true;\n    };\n    this.resume = function() {\n      isPaused = false;\n    };\n    function terminate(callback) {\n      if (!worker) {\n        if (callback) {\n          callback();\n        }\n        return;\n      }\n      worker.addEventListener(\"message\", function(event) {\n        if (event.data === null) {\n          worker.terminate();\n          worker = null;\n          if (callback) {\n            callback();\n          }\n        }\n      });\n      worker.postMessage(null);\n    }\n    var arrayOfBuffers = [];\n    this.stop = function(callback) {\n      finished = true;\n      var recorder = this;\n      terminate(function() {\n        recorder.blob = new Blob(arrayOfBuffers, {\n          type: \"video/webm\"\n        });\n        callback(recorder.blob);\n      });\n    };\n    this.name = \"WebAssemblyRecorder\";\n    this.toString = function() {\n      return this.name;\n    };\n    this.clearRecordedData = function() {\n      arrayOfBuffers = [];\n      isPaused = false;\n      this.blob = null;\n    };\n    this.blob = null;\n  }\n  if (typeof RecordRTC2 !== \"undefined\") {\n    RecordRTC2.WebAssemblyRecorder = WebAssemblyRecorder;\n  }\n})(RecordRTC$1);\nvar RecordRTC_1 = RecordRTC$1.exports;\nvar RecordRTC = /* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  \"default\": RecordRTC_1\n}, [RecordRTC$1.exports]);\nexport { RecordRTC as R };\n"],
  "mappings": "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",
  "names": []
}
