{
  "version": 3,
  "sources": ["browser-external:fs", "browser-external:path", "../../.pnpm/chromatone.center@1.9.0/node_modules/chromatone.center/lib/tone.js", "../../.pnpm/chromatone.center@1.9.0/node_modules/chromatone.center/lib/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code.`)\n    }\n  }\n}))", "const version = \"14.8.40\";\nconst createExtendedExponentialRampToValueAutomationEvent = (value, endTime, insertTime) => {\n  return { endTime, insertTime, type: \"exponentialRampToValue\", value };\n};\nconst createExtendedLinearRampToValueAutomationEvent = (value, endTime, insertTime) => {\n  return { endTime, insertTime, type: \"linearRampToValue\", value };\n};\nconst createSetValueAutomationEvent = (value, startTime) => {\n  return { startTime, type: \"setValue\", value };\n};\nconst createSetValueCurveAutomationEvent = (values, startTime, duration) => {\n  return { duration, startTime, type: \"setValueCurve\", values };\n};\nconst getTargetValueAtTime = (time, valueAtStartTime, { startTime, target, timeConstant }) => {\n  return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n};\nconst isExponentialRampToValueAutomationEvent = (automationEvent) => {\n  return automationEvent.type === \"exponentialRampToValue\";\n};\nconst isLinearRampToValueAutomationEvent = (automationEvent) => {\n  return automationEvent.type === \"linearRampToValue\";\n};\nconst isAnyRampToValueAutomationEvent = (automationEvent) => {\n  return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n};\nconst isSetValueAutomationEvent = (automationEvent) => {\n  return automationEvent.type === \"setValue\";\n};\nconst isSetValueCurveAutomationEvent = (automationEvent) => {\n  return automationEvent.type === \"setValueCurve\";\n};\nconst getValueOfAutomationEventAtIndexAtTime = (automationEvents, index, time, defaultValue) => {\n  const automationEvent = automationEvents[index];\n  return automationEvent === void 0 ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n};\nconst getEndTimeAndValueOfPreviousAutomationEvent = (automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) => {\n  return currentAutomationEvent === void 0 ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [\n    currentAutomationEvent.startTime + currentAutomationEvent.duration,\n    currentAutomationEvent.values[currentAutomationEvent.values.length - 1]\n  ] : [\n    currentAutomationEvent.startTime,\n    getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)\n  ];\n};\nconst isCancelAndHoldAutomationEvent = (automationEvent) => {\n  return automationEvent.type === \"cancelAndHold\";\n};\nconst isCancelScheduledValuesAutomationEvent = (automationEvent) => {\n  return automationEvent.type === \"cancelScheduledValues\";\n};\nconst getEventTime = (automationEvent) => {\n  if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n    return automationEvent.cancelTime;\n  }\n  if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n    return automationEvent.endTime;\n  }\n  return automationEvent.startTime;\n};\nconst getExponentialRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n  if (valueAtStartTime === value) {\n    return value;\n  }\n  if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n    return valueAtStartTime * (value / valueAtStartTime) ** ((time - startTime) / (endTime - startTime));\n  }\n  return 0;\n};\nconst getLinearRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n  return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n};\nconst interpolateValue = (values, theoreticIndex) => {\n  const lowerIndex = Math.floor(theoreticIndex);\n  const upperIndex = Math.ceil(theoreticIndex);\n  if (lowerIndex === upperIndex) {\n    return values[lowerIndex];\n  }\n  return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n};\nconst getValueCurveValueAtTime = (time, { duration, startTime, values }) => {\n  const theoreticIndex = (time - startTime) / duration * (values.length - 1);\n  return interpolateValue(values, theoreticIndex);\n};\nconst isSetTargetAutomationEvent = (automationEvent) => {\n  return automationEvent.type === \"setTarget\";\n};\nclass AutomationEventList {\n  constructor(defaultValue) {\n    this._automationEvents = [];\n    this._currenTime = 0;\n    this._defaultValue = defaultValue;\n  }\n  [Symbol.iterator]() {\n    return this._automationEvents[Symbol.iterator]();\n  }\n  add(automationEvent) {\n    const eventTime = getEventTime(automationEvent);\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n      const index = this._automationEvents.findIndex((currentAutomationEvent) => {\n        if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n          return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n        }\n        return getEventTime(currentAutomationEvent) >= eventTime;\n      });\n      const removedAutomationEvent = this._automationEvents[index];\n      if (index !== -1) {\n        this._automationEvents = this._automationEvents.slice(0, index);\n      }\n      if (isCancelAndHoldAutomationEvent(automationEvent)) {\n        const lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n        if (removedAutomationEvent !== void 0 && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n          if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n            throw new Error(\"The internal list is malformed.\");\n          }\n          const startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n          const startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n          const value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n          const truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n          this._automationEvents.push(truncatedAutomationEvent);\n        }\n        if (lastAutomationEvent !== void 0 && isSetTargetAutomationEvent(lastAutomationEvent)) {\n          this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n        }\n        if (lastAutomationEvent !== void 0 && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n          this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n        }\n      }\n    } else {\n      const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > eventTime);\n      const previousAutomationEvent = index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[index - 1];\n      if (previousAutomationEvent !== void 0 && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n        return false;\n      }\n      const persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n      if (index === -1) {\n        this._automationEvents.push(persistentAutomationEvent);\n      } else {\n        if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[index])) {\n          return false;\n        }\n        this._automationEvents.splice(index, 0, persistentAutomationEvent);\n      }\n    }\n    return true;\n  }\n  flush(time) {\n    const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > time);\n    if (index > 1) {\n      const remainingAutomationEvents = this._automationEvents.slice(index - 1);\n      const firstRemainingAutomationEvent = remainingAutomationEvents[0];\n      if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n        remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n      }\n      this._automationEvents = remainingAutomationEvents;\n    }\n  }\n  getValue(time) {\n    if (this._automationEvents.length === 0) {\n      return this._defaultValue;\n    }\n    const indexOfNextEvent = this._automationEvents.findIndex((automationEvent) => getEventTime(automationEvent) > time);\n    const nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n    const indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n    const currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n    if (currentAutomationEvent !== void 0 && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === void 0 || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n      return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n    }\n    if (currentAutomationEvent !== void 0 && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === void 0 || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n      return currentAutomationEvent.value;\n    }\n    if (currentAutomationEvent !== void 0 && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === void 0 || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n      if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n        return getValueCurveValueAtTime(time, currentAutomationEvent);\n      }\n      return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n    }\n    if (currentAutomationEvent !== void 0 && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === void 0 || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n      return currentAutomationEvent.value;\n    }\n    if (nextAutomationEvent !== void 0 && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n      const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n      return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n    }\n    if (nextAutomationEvent !== void 0 && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n      const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n      return getLinearRampValueAtTime(time, startTime, value, nextAutomationEvent);\n    }\n    return this._defaultValue;\n  }\n}\nconst createCancelAndHoldAutomationEvent = (cancelTime) => {\n  return { cancelTime, type: \"cancelAndHold\" };\n};\nconst createCancelScheduledValuesAutomationEvent = (cancelTime) => {\n  return { cancelTime, type: \"cancelScheduledValues\" };\n};\nconst createExponentialRampToValueAutomationEvent = (value, endTime) => {\n  return { endTime, type: \"exponentialRampToValue\", value };\n};\nconst createLinearRampToValueAutomationEvent = (value, endTime) => {\n  return { endTime, type: \"linearRampToValue\", value };\n};\nconst createSetTargetAutomationEvent = (target, startTime, timeConstant) => {\n  return { startTime, target, timeConstant, type: \"setTarget\" };\n};\nconst createAbortError = () => new DOMException(\"\", \"AbortError\");\nconst createAddActiveInputConnectionToAudioNode = (insertElementInSet2) => {\n  return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n    insertElementInSet2(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n  };\n};\nconst createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n  return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n    const activeInputs = [];\n    for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n      activeInputs.push(/* @__PURE__ */ new Set());\n    }\n    audioNodeConnectionsStore.set(audioNode, {\n      activeInputs,\n      outputs: /* @__PURE__ */ new Set(),\n      passiveInputs: /* @__PURE__ */ new WeakMap(),\n      renderer: audioNodeRenderer\n    });\n  };\n};\nconst createAddAudioParamConnections = (audioParamConnectionsStore) => {\n  return (audioParam, audioParamRenderer) => {\n    audioParamConnectionsStore.set(audioParam, { activeInputs: /* @__PURE__ */ new Set(), passiveInputs: /* @__PURE__ */ new WeakMap(), renderer: audioParamRenderer });\n  };\n};\nconst ACTIVE_AUDIO_NODE_STORE = /* @__PURE__ */ new WeakSet();\nconst AUDIO_NODE_CONNECTIONS_STORE = /* @__PURE__ */ new WeakMap();\nconst AUDIO_NODE_STORE = /* @__PURE__ */ new WeakMap();\nconst AUDIO_PARAM_CONNECTIONS_STORE = /* @__PURE__ */ new WeakMap();\nconst AUDIO_PARAM_STORE = /* @__PURE__ */ new WeakMap();\nconst CONTEXT_STORE = /* @__PURE__ */ new WeakMap();\nconst EVENT_LISTENERS = /* @__PURE__ */ new WeakMap();\nconst CYCLE_COUNTERS = /* @__PURE__ */ new WeakMap();\nconst NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = /* @__PURE__ */ new WeakMap();\nconst NODE_TO_PROCESSOR_MAPS = /* @__PURE__ */ new WeakMap();\nconst handler = {\n  construct() {\n    return handler;\n  }\n};\nconst isConstructible = (constructible) => {\n  try {\n    const proxy = new Proxy(constructible, handler);\n    new proxy();\n  } catch {\n    return false;\n  }\n  return true;\n};\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/;\nconst splitImportStatements = (source, url) => {\n  const importStatements = [];\n  let sourceWithoutImportStatements = source.replace(/^[\\s]+/, \"\");\n  let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n  while (result !== null) {\n    const unresolvedUrl = result[1].slice(1, -1);\n    const importStatementWithResolvedUrl = result[0].replace(/([\\s]+)?;?$/, \"\").replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n    importStatements.push(importStatementWithResolvedUrl);\n    sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, \"\");\n    result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n  }\n  return [importStatements.join(\";\"), sourceWithoutImportStatements];\n};\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n  if (parameterDescriptors !== void 0 && !Array.isArray(parameterDescriptors)) {\n    throw new TypeError(\"The parameterDescriptors property of given value for processorCtor is not an array.\");\n  }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n  if (!isConstructible(processorCtor)) {\n    throw new TypeError(\"The given value for processorCtor should be a constructor.\");\n  }\n  if (processorCtor.prototype === null || typeof processorCtor.prototype !== \"object\") {\n    throw new TypeError(\"The given value for processorCtor should have a prototype.\");\n  }\n};\nconst createAddAudioWorkletModule = (cacheTestResult2, createNotSupportedError2, evaluateSource, exposeCurrentFrameAndCurrentTime2, fetchSource, getNativeContext2, getOrCreateBackupOfflineAudioContext2, isNativeOfflineAudioContext2, nativeAudioWorkletNodeConstructor2, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window2) => {\n  let index = 0;\n  return (context2, moduleURL, options = { credentials: \"omit\" }) => {\n    const resolvedRequestsOfContext = resolvedRequests.get(context2);\n    if (resolvedRequestsOfContext !== void 0 && resolvedRequestsOfContext.has(moduleURL)) {\n      return Promise.resolve();\n    }\n    const ongoingRequestsOfContext = ongoingRequests.get(context2);\n    if (ongoingRequestsOfContext !== void 0) {\n      const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n      if (promiseOfOngoingRequest !== void 0) {\n        return promiseOfOngoingRequest;\n      }\n    }\n    const nativeContext = getNativeContext2(context2);\n    const promise = nativeContext.audioWorklet === void 0 ? fetchSource(moduleURL).then(([source, absoluteUrl]) => {\n      const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n      const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n      return evaluateSource(wrappedSource);\n    }).then(() => {\n      const evaluateAudioWorkletGlobalScope = window2._AWGS.pop();\n      if (evaluateAudioWorkletGlobalScope === void 0) {\n        throw new SyntaxError();\n      }\n      exposeCurrentFrameAndCurrentTime2(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n      }, void 0, (name, processorCtor) => {\n        if (name.trim() === \"\") {\n          throw createNotSupportedError2();\n        }\n        const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n        if (nodeNameToProcessorConstructorMap !== void 0) {\n          if (nodeNameToProcessorConstructorMap.has(name)) {\n            throw createNotSupportedError2();\n          }\n          verifyProcessorCtor(processorCtor);\n          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n          nodeNameToProcessorConstructorMap.set(name, processorCtor);\n        } else {\n          verifyProcessorCtor(processorCtor);\n          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n          NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, /* @__PURE__ */ new Map([[name, processorCtor]]));\n        }\n      }, nativeContext.sampleRate, void 0, void 0));\n    }) : Promise.all([\n      fetchSource(moduleURL),\n      Promise.resolve(cacheTestResult2(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n    ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n      const currentIndex = index + 1;\n      index = currentIndex;\n      const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n      const patchedAudioWorkletProcessor = isSupportingPostMessage ? \"AudioWorkletProcessor\" : \"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}\";\n      const memberDefinition = isSupportingPostMessage ? \"\" : \"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));\";\n      const bufferRegistration = isSupportingPostMessage ? \"\" : \"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));\";\n      const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n      const blob = new Blob([wrappedSource], { type: \"application/javascript; charset=utf-8\" });\n      const url = URL.createObjectURL(blob);\n      return nativeContext.audioWorklet.addModule(url, options).then(() => {\n        if (isNativeOfflineAudioContext2(nativeContext)) {\n          return nativeContext;\n        }\n        const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext2(nativeContext);\n        return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n      }).then((nativeContextOrBackupOfflineAudioContext) => {\n        if (nativeAudioWorkletNodeConstructor2 === null) {\n          throw new SyntaxError();\n        }\n        try {\n          new nativeAudioWorkletNodeConstructor2(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`);\n        } catch {\n          throw new SyntaxError();\n        }\n      }).finally(() => URL.revokeObjectURL(url));\n    });\n    if (ongoingRequestsOfContext === void 0) {\n      ongoingRequests.set(context2, /* @__PURE__ */ new Map([[moduleURL, promise]]));\n    } else {\n      ongoingRequestsOfContext.set(moduleURL, promise);\n    }\n    promise.then(() => {\n      const updatedResolvedRequestsOfContext = resolvedRequests.get(context2);\n      if (updatedResolvedRequestsOfContext === void 0) {\n        resolvedRequests.set(context2, /* @__PURE__ */ new Set([moduleURL]));\n      } else {\n        updatedResolvedRequestsOfContext.add(moduleURL);\n      }\n    }).finally(() => {\n      const updatedOngoingRequestsOfContext = ongoingRequests.get(context2);\n      if (updatedOngoingRequestsOfContext !== void 0) {\n        updatedOngoingRequestsOfContext.delete(moduleURL);\n      }\n    });\n    return promise;\n  };\n};\nconst getValueForKey = (map, key) => {\n  const value = map.get(key);\n  if (value === void 0) {\n    throw new Error(\"A value with the given key could not be found.\");\n  }\n  return value;\n};\nconst pickElementFromSet = (set, predicate) => {\n  const matchingElements = Array.from(set).filter(predicate);\n  if (matchingElements.length > 1) {\n    throw Error(\"More than one element was found.\");\n  }\n  if (matchingElements.length === 0) {\n    throw Error(\"No element was found.\");\n  }\n  const [matchingElement] = matchingElements;\n  set.delete(matchingElement);\n  return matchingElement;\n};\nconst deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n  const passiveInputConnections = getValueForKey(passiveInputs, source);\n  const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n  if (passiveInputConnections.size === 0) {\n    passiveInputs.delete(source);\n  }\n  return matchingConnection;\n};\nconst getEventListenersOfAudioNode = (audioNode) => {\n  return getValueForKey(EVENT_LISTENERS, audioNode);\n};\nconst setInternalStateToActive = (audioNode) => {\n  if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n    throw new Error(\"The AudioNode is already stored.\");\n  }\n  ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n  getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\nconst isAudioWorkletNode = (audioNode) => {\n  return \"port\" in audioNode;\n};\nconst setInternalStateToPassive = (audioNode) => {\n  if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n    throw new Error(\"The AudioNode is not stored.\");\n  }\n  ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n  getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\nconst setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n  if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n    setInternalStateToPassive(audioNode);\n  }\n};\nconst createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode2, addPassiveInputConnectionToAudioNode2, connectNativeAudioNodeToNativeAudioNode2, deleteActiveInputConnectionToAudioNode2, disconnectNativeAudioNodeFromNativeAudioNode2, getAudioNodeConnections2, getAudioNodeTailTime2, getEventListenersOfAudioNode2, getNativeAudioNode2, insertElementInSet2, isActiveAudioNode2, isPartOfACycle2, isPassiveAudioNode2) => {\n  const tailTimeTimeoutIds = /* @__PURE__ */ new WeakMap();\n  return (source, destination, output, input, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections2(destination);\n    const { outputs } = getAudioNodeConnections2(source);\n    const eventListeners = getEventListenersOfAudioNode2(source);\n    const eventListener = (isActive) => {\n      const nativeDestinationAudioNode = getNativeAudioNode2(destination);\n      const nativeSourceAudioNode = getNativeAudioNode2(source);\n      if (isActive) {\n        const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        addActiveInputConnectionToAudioNode2(activeInputs, source, partialConnection, false);\n        if (!isOffline && !isPartOfACycle2(source)) {\n          connectNativeAudioNodeToNativeAudioNode2(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n        }\n        if (isPassiveAudioNode2(destination)) {\n          setInternalStateToActive(destination);\n        }\n      } else {\n        const partialConnection = deleteActiveInputConnectionToAudioNode2(activeInputs, source, output, input);\n        addPassiveInputConnectionToAudioNode2(passiveInputs, input, partialConnection, false);\n        if (!isOffline && !isPartOfACycle2(source)) {\n          disconnectNativeAudioNodeFromNativeAudioNode2(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n        }\n        const tailTime = getAudioNodeTailTime2(destination);\n        if (tailTime === 0) {\n          if (isActiveAudioNode2(destination)) {\n            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n          }\n        } else {\n          const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n          if (tailTimeTimeoutId !== void 0) {\n            clearTimeout(tailTimeTimeoutId);\n          }\n          tailTimeTimeoutIds.set(destination, setTimeout(() => {\n            if (isActiveAudioNode2(destination)) {\n              setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n            }\n          }, tailTime * 1e3));\n        }\n      }\n    };\n    if (insertElementInSet2(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n      eventListeners.add(eventListener);\n      if (isActiveAudioNode2(source)) {\n        addActiveInputConnectionToAudioNode2(activeInputs, source, [output, input, eventListener], true);\n      } else {\n        addPassiveInputConnectionToAudioNode2(passiveInputs, input, [source, output, eventListener], true);\n      }\n      return true;\n    }\n    return false;\n  };\n};\nconst createAddPassiveInputConnectionToAudioNode = (insertElementInSet2) => {\n  return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === void 0) {\n      passiveInputs.set(source, /* @__PURE__ */ new Set([[output, input, eventListener]]));\n    } else {\n      insertElementInSet2(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n    }\n  };\n};\nconst createAddSilentConnection = (createNativeGainNode2) => {\n  return (nativeContext, nativeAudioScheduledSourceNode) => {\n    const nativeGainNode = createNativeGainNode2(nativeContext, {\n      channelCount: 1,\n      channelCountMode: \"explicit\",\n      channelInterpretation: \"discrete\",\n      gain: 0\n    });\n    nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n    const disconnect2 = () => {\n      nativeAudioScheduledSourceNode.removeEventListener(\"ended\", disconnect2);\n      nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n      nativeGainNode.disconnect();\n    };\n    nativeAudioScheduledSourceNode.addEventListener(\"ended\", disconnect2);\n  };\n};\nconst createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes2) => {\n  return (nativeContext, audioWorkletNode) => {\n    getUnrenderedAudioWorkletNodes2(nativeContext).add(audioWorkletNode);\n  };\n};\nconst DEFAULT_OPTIONS$j = {\n  channelCount: 2,\n  channelCountMode: \"max\",\n  channelInterpretation: \"speakers\",\n  fftSize: 2048,\n  maxDecibels: -30,\n  minDecibels: -100,\n  smoothingTimeConstant: 0.8\n};\nconst createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer2, createIndexSizeError2, createNativeAnalyserNode2, getNativeContext2, isNativeOfflineAudioContext2) => {\n  return class AnalyserNode extends audionNodeConstructor {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$j, ...options };\n      const nativeAnalyserNode = createNativeAnalyserNode2(nativeContext, mergedOptions);\n      const analyserNodeRenderer = isNativeOfflineAudioContext2(nativeContext) ? createAnalyserNodeRenderer2() : null;\n      super(context2, false, nativeAnalyserNode, analyserNodeRenderer);\n      this._nativeAnalyserNode = nativeAnalyserNode;\n    }\n    get fftSize() {\n      return this._nativeAnalyserNode.fftSize;\n    }\n    set fftSize(value) {\n      this._nativeAnalyserNode.fftSize = value;\n    }\n    get frequencyBinCount() {\n      return this._nativeAnalyserNode.frequencyBinCount;\n    }\n    get maxDecibels() {\n      return this._nativeAnalyserNode.maxDecibels;\n    }\n    set maxDecibels(value) {\n      const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n      this._nativeAnalyserNode.maxDecibels = value;\n      if (!(value > this._nativeAnalyserNode.minDecibels)) {\n        this._nativeAnalyserNode.maxDecibels = maxDecibels;\n        throw createIndexSizeError2();\n      }\n    }\n    get minDecibels() {\n      return this._nativeAnalyserNode.minDecibels;\n    }\n    set minDecibels(value) {\n      const minDecibels = this._nativeAnalyserNode.minDecibels;\n      this._nativeAnalyserNode.minDecibels = value;\n      if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n        this._nativeAnalyserNode.minDecibels = minDecibels;\n        throw createIndexSizeError2();\n      }\n    }\n    get smoothingTimeConstant() {\n      return this._nativeAnalyserNode.smoothingTimeConstant;\n    }\n    set smoothingTimeConstant(value) {\n      this._nativeAnalyserNode.smoothingTimeConstant = value;\n    }\n    getByteFrequencyData(array) {\n      this._nativeAnalyserNode.getByteFrequencyData(array);\n    }\n    getByteTimeDomainData(array) {\n      this._nativeAnalyserNode.getByteTimeDomainData(array);\n    }\n    getFloatFrequencyData(array) {\n      this._nativeAnalyserNode.getFloatFrequencyData(array);\n    }\n    getFloatTimeDomainData(array) {\n      this._nativeAnalyserNode.getFloatTimeDomainData(array);\n    }\n  };\n};\nconst isOwnedByContext = (nativeAudioNode, nativeContext) => {\n  return nativeAudioNode.context === nativeContext;\n};\nconst createAnalyserNodeRendererFactory = (createNativeAnalyserNode2, getNativeAudioNode2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeAnalyserNodes = /* @__PURE__ */ new WeakMap();\n    const createAnalyserNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeAnalyserNode = getNativeAudioNode2(proxy);\n      const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n      if (!nativeAnalyserNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeAnalyserNode.channelCount,\n          channelCountMode: nativeAnalyserNode.channelCountMode,\n          channelInterpretation: nativeAnalyserNode.channelInterpretation,\n          fftSize: nativeAnalyserNode.fftSize,\n          maxDecibels: nativeAnalyserNode.maxDecibels,\n          minDecibels: nativeAnalyserNode.minDecibels,\n          smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n        };\n        nativeAnalyserNode = createNativeAnalyserNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n      return nativeAnalyserNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeAnalyserNode !== void 0) {\n          return Promise.resolve(renderedNativeAnalyserNode);\n        }\n        return createAnalyserNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n  try {\n    nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n  } catch {\n    return false;\n  }\n  return true;\n};\nconst createIndexSizeError = () => new DOMException(\"\", \"IndexSizeError\");\nconst wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n  audioBuffer.getChannelData = ((getChannelData) => {\n    return (channel) => {\n      try {\n        return getChannelData.call(audioBuffer, channel);\n      } catch (err) {\n        if (err.code === 12) {\n          throw createIndexSizeError();\n        }\n        throw err;\n      }\n    };\n  })(audioBuffer.getChannelData);\n};\nconst DEFAULT_OPTIONS$i = {\n  numberOfChannels: 1\n};\nconst createAudioBufferConstructor = (audioBufferStore2, cacheTestResult2, createNotSupportedError2, nativeAudioBufferConstructor2, nativeOfflineAudioContextConstructor2, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods2, wrapAudioBufferCopyChannelMethodsOutOfBounds2) => {\n  let nativeOfflineAudioContext = null;\n  return class AudioBuffer {\n    constructor(options) {\n      if (nativeOfflineAudioContextConstructor2 === null) {\n        throw new Error(\"Missing the native OfflineAudioContext constructor.\");\n      }\n      const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS$i, ...options };\n      if (nativeOfflineAudioContext === null) {\n        nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor2(1, 1, 44100);\n      }\n      const audioBuffer = nativeAudioBufferConstructor2 !== null && cacheTestResult2(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport) ? new nativeAudioBufferConstructor2({ length, numberOfChannels, sampleRate }) : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n      if (audioBuffer.numberOfChannels === 0) {\n        throw createNotSupportedError2();\n      }\n      if (typeof audioBuffer.copyFromChannel !== \"function\") {\n        wrapAudioBufferCopyChannelMethods2(audioBuffer);\n        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n      } else if (!cacheTestResult2(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n        wrapAudioBufferCopyChannelMethodsOutOfBounds2(audioBuffer);\n      }\n      audioBufferStore2.add(audioBuffer);\n      return audioBuffer;\n    }\n    static [Symbol.hasInstance](instance) {\n      return instance !== null && typeof instance === \"object\" && Object.getPrototypeOf(instance) === AudioBuffer.prototype || audioBufferStore2.has(instance);\n    }\n  };\n};\nconst MOST_NEGATIVE_SINGLE_FLOAT = -34028234663852886e22;\nconst MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\nconst isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\nconst DEFAULT_OPTIONS$h = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: \"max\",\n  channelInterpretation: \"speakers\",\n  loop: false,\n  loopEnd: 0,\n  loopStart: 0,\n  playbackRate: 1\n};\nconst createAudioBufferSourceNodeConstructor = (audioNodeConstructor2, createAudioBufferSourceNodeRenderer2, createAudioParam2, createInvalidStateError2, createNativeAudioBufferSourceNode2, getNativeContext2, isNativeOfflineAudioContext2, wrapEventListener2) => {\n  return class AudioBufferSourceNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$h, ...options };\n      const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const audioBufferSourceNodeRenderer = isOffline ? createAudioBufferSourceNodeRenderer2() : null;\n      super(context2, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n      this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n      this._isBufferNullified = false;\n      this._isBufferSet = mergedOptions.buffer !== null;\n      this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n      this._onended = null;\n      this._playbackRate = createAudioParam2(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n    get buffer() {\n      if (this._isBufferNullified) {\n        return null;\n      }\n      return this._nativeAudioBufferSourceNode.buffer;\n    }\n    set buffer(value) {\n      this._nativeAudioBufferSourceNode.buffer = value;\n      if (value !== null) {\n        if (this._isBufferSet) {\n          throw createInvalidStateError2();\n        }\n        this._isBufferSet = true;\n      }\n    }\n    get loop() {\n      return this._nativeAudioBufferSourceNode.loop;\n    }\n    set loop(value) {\n      this._nativeAudioBufferSourceNode.loop = value;\n    }\n    get loopEnd() {\n      return this._nativeAudioBufferSourceNode.loopEnd;\n    }\n    set loopEnd(value) {\n      this._nativeAudioBufferSourceNode.loopEnd = value;\n    }\n    get loopStart() {\n      return this._nativeAudioBufferSourceNode.loopStart;\n    }\n    set loopStart(value) {\n      this._nativeAudioBufferSourceNode.loopStart = value;\n    }\n    get onended() {\n      return this._onended;\n    }\n    set onended(value) {\n      const wrappedListener = typeof value === \"function\" ? wrapEventListener2(this, value) : null;\n      this._nativeAudioBufferSourceNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n    get playbackRate() {\n      return this._playbackRate;\n    }\n    start(when = 0, offset = 0, duration) {\n      this._nativeAudioBufferSourceNode.start(when, offset, duration);\n      if (this._audioBufferSourceNodeRenderer !== null) {\n        this._audioBufferSourceNodeRenderer.start = duration === void 0 ? [when, offset] : [when, offset, duration];\n      }\n      if (this.context.state !== \"closed\") {\n        setInternalStateToActive(this);\n        const resetInternalStateToPassive = () => {\n          this._nativeAudioBufferSourceNode.removeEventListener(\"ended\", resetInternalStateToPassive);\n          if (isActiveAudioNode(this)) {\n            setInternalStateToPassive(this);\n          }\n        };\n        this._nativeAudioBufferSourceNode.addEventListener(\"ended\", resetInternalStateToPassive);\n      }\n    }\n    stop(when = 0) {\n      this._nativeAudioBufferSourceNode.stop(when);\n      if (this._audioBufferSourceNodeRenderer !== null) {\n        this._audioBufferSourceNodeRenderer.stop = when;\n      }\n    }\n  };\n};\nconst createAudioBufferSourceNodeRendererFactory = (connectAudioParam2, createNativeAudioBufferSourceNode2, getNativeAudioNode2, renderAutomation2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeAudioBufferSourceNodes = /* @__PURE__ */ new WeakMap();\n    let start2 = null;\n    let stop = null;\n    const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeAudioBufferSourceNode = getNativeAudioNode2(proxy);\n      const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n      if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n        const options = {\n          buffer: nativeAudioBufferSourceNode.buffer,\n          channelCount: nativeAudioBufferSourceNode.channelCount,\n          channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n          channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n          loop: nativeAudioBufferSourceNode.loop,\n          loopEnd: nativeAudioBufferSourceNode.loopEnd,\n          loopStart: nativeAudioBufferSourceNode.loopStart,\n          playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n        };\n        nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode2(nativeOfflineAudioContext, options);\n        if (start2 !== null) {\n          nativeAudioBufferSourceNode.start(...start2);\n        }\n        if (stop !== null) {\n          nativeAudioBufferSourceNode.stop(stop);\n        }\n      }\n      renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n      if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n        await renderAutomation2(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n      } else {\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n      }\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n      return nativeAudioBufferSourceNode;\n    };\n    return {\n      set start(value) {\n        start2 = value;\n      },\n      set stop(value) {\n        stop = value;\n      },\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeAudioBufferSourceNode !== void 0) {\n          return Promise.resolve(renderedNativeAudioBufferSourceNode);\n        }\n        return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst isAudioBufferSourceNode = (audioNode) => {\n  return \"playbackRate\" in audioNode;\n};\nconst isBiquadFilterNode = (audioNode) => {\n  return \"frequency\" in audioNode && \"gain\" in audioNode;\n};\nconst isConstantSourceNode = (audioNode) => {\n  return \"offset\" in audioNode;\n};\nconst isGainNode = (audioNode) => {\n  return !(\"frequency\" in audioNode) && \"gain\" in audioNode;\n};\nconst isOscillatorNode = (audioNode) => {\n  return \"detune\" in audioNode && \"frequency\" in audioNode;\n};\nconst isStereoPannerNode = (audioNode) => {\n  return \"pan\" in audioNode;\n};\nconst getAudioNodeConnections = (audioNode) => {\n  return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\nconst getAudioParamConnections = (audioParam) => {\n  return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\nconst deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n  const { activeInputs } = getAudioNodeConnections(audioNode);\n  activeInputs.forEach((connections) => connections.forEach(([source]) => {\n    if (!trace.includes(audioNode)) {\n      deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n    }\n  }));\n  const audioParams = isAudioBufferSourceNode(audioNode) ? [\n    audioNode.playbackRate\n  ] : isAudioWorkletNode(audioNode) ? Array.from(audioNode.parameters.values()) : isBiquadFilterNode(audioNode) ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain] : isConstantSourceNode(audioNode) ? [audioNode.offset] : isGainNode(audioNode) ? [audioNode.gain] : isOscillatorNode(audioNode) ? [audioNode.detune, audioNode.frequency] : isStereoPannerNode(audioNode) ? [audioNode.pan] : [];\n  for (const audioParam of audioParams) {\n    const audioParamConnections = getAudioParamConnections(audioParam);\n    if (audioParamConnections !== void 0) {\n      audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n    }\n  }\n  if (isActiveAudioNode(audioNode)) {\n    setInternalStateToPassive(audioNode);\n  }\n};\nconst deactivateAudioGraph = (context2) => {\n  deactivateActiveAudioNodeInputConnections(context2.destination, []);\n};\nconst isValidLatencyHint = (latencyHint) => {\n  return latencyHint === void 0 || typeof latencyHint === \"number\" || typeof latencyHint === \"string\" && (latencyHint === \"balanced\" || latencyHint === \"interactive\" || latencyHint === \"playback\");\n};\nconst createAudioContextConstructor = (baseAudioContextConstructor2, createInvalidStateError2, createNotSupportedError2, createUnknownError2, mediaElementAudioSourceNodeConstructor2, mediaStreamAudioDestinationNodeConstructor2, mediaStreamAudioSourceNodeConstructor2, mediaStreamTrackAudioSourceNodeConstructor2, nativeAudioContextConstructor2) => {\n  return class AudioContext extends baseAudioContextConstructor2 {\n    constructor(options = {}) {\n      if (nativeAudioContextConstructor2 === null) {\n        throw new Error(\"Missing the native AudioContext constructor.\");\n      }\n      let nativeAudioContext;\n      try {\n        nativeAudioContext = new nativeAudioContextConstructor2(options);\n      } catch (err) {\n        if (err.code === 12 && err.message === \"sampleRate is not in range\") {\n          throw createNotSupportedError2();\n        }\n        throw err;\n      }\n      if (nativeAudioContext === null) {\n        throw createUnknownError2();\n      }\n      if (!isValidLatencyHint(options.latencyHint)) {\n        throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n      }\n      if (options.sampleRate !== void 0 && nativeAudioContext.sampleRate !== options.sampleRate) {\n        throw createNotSupportedError2();\n      }\n      super(nativeAudioContext, 2);\n      const { latencyHint } = options;\n      const { sampleRate } = nativeAudioContext;\n      this._baseLatency = typeof nativeAudioContext.baseLatency === \"number\" ? nativeAudioContext.baseLatency : latencyHint === \"balanced\" ? 512 / sampleRate : latencyHint === \"interactive\" || latencyHint === void 0 ? 256 / sampleRate : latencyHint === \"playback\" ? 1024 / sampleRate : Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;\n      this._nativeAudioContext = nativeAudioContext;\n      if (nativeAudioContextConstructor2.name === \"webkitAudioContext\") {\n        this._nativeGainNode = nativeAudioContext.createGain();\n        this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n        this._nativeGainNode.gain.value = 1e-37;\n        this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n        this._nativeOscillatorNode.start();\n      } else {\n        this._nativeGainNode = null;\n        this._nativeOscillatorNode = null;\n      }\n      this._state = null;\n      if (nativeAudioContext.state === \"running\") {\n        this._state = \"suspended\";\n        const revokeState = () => {\n          if (this._state === \"suspended\") {\n            this._state = null;\n          }\n          nativeAudioContext.removeEventListener(\"statechange\", revokeState);\n        };\n        nativeAudioContext.addEventListener(\"statechange\", revokeState);\n      }\n    }\n    get baseLatency() {\n      return this._baseLatency;\n    }\n    get state() {\n      return this._state !== null ? this._state : this._nativeAudioContext.state;\n    }\n    close() {\n      if (this.state === \"closed\") {\n        return this._nativeAudioContext.close().then(() => {\n          throw createInvalidStateError2();\n        });\n      }\n      if (this._state === \"suspended\") {\n        this._state = null;\n      }\n      return this._nativeAudioContext.close().then(() => {\n        if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n          this._nativeOscillatorNode.stop();\n          this._nativeGainNode.disconnect();\n          this._nativeOscillatorNode.disconnect();\n        }\n        deactivateAudioGraph(this);\n      });\n    }\n    createMediaElementSource(mediaElement) {\n      return new mediaElementAudioSourceNodeConstructor2(this, { mediaElement });\n    }\n    createMediaStreamDestination() {\n      return new mediaStreamAudioDestinationNodeConstructor2(this);\n    }\n    createMediaStreamSource(mediaStream) {\n      return new mediaStreamAudioSourceNodeConstructor2(this, { mediaStream });\n    }\n    createMediaStreamTrackSource(mediaStreamTrack) {\n      return new mediaStreamTrackAudioSourceNodeConstructor2(this, { mediaStreamTrack });\n    }\n    resume() {\n      if (this._state === \"suspended\") {\n        return new Promise((resolve, reject) => {\n          const resolvePromise = () => {\n            this._nativeAudioContext.removeEventListener(\"statechange\", resolvePromise);\n            if (this._nativeAudioContext.state === \"running\") {\n              resolve();\n            } else {\n              this.resume().then(resolve, reject);\n            }\n          };\n          this._nativeAudioContext.addEventListener(\"statechange\", resolvePromise);\n        });\n      }\n      return this._nativeAudioContext.resume().catch((err) => {\n        if (err === void 0 || err.code === 15) {\n          throw createInvalidStateError2();\n        }\n        throw err;\n      });\n    }\n    suspend() {\n      return this._nativeAudioContext.suspend().catch((err) => {\n        if (err === void 0) {\n          throw createInvalidStateError2();\n        }\n        throw err;\n      });\n    }\n  };\n};\nconst createAudioDestinationNodeConstructor = (audioNodeConstructor2, createAudioDestinationNodeRenderer2, createIndexSizeError2, createInvalidStateError2, createNativeAudioDestinationNode, getNativeContext2, isNativeOfflineAudioContext2, renderInputsOfAudioNode2) => {\n  return class AudioDestinationNode extends audioNodeConstructor2 {\n    constructor(context2, channelCount) {\n      const nativeContext = getNativeContext2(context2);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n      const audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer2(renderInputsOfAudioNode2) : null;\n      super(context2, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n      this._isNodeOfNativeOfflineAudioContext = isOffline;\n      this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n    }\n    get channelCount() {\n      return this._nativeAudioDestinationNode.channelCount;\n    }\n    set channelCount(value) {\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError2();\n      }\n      if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n        throw createIndexSizeError2();\n      }\n      this._nativeAudioDestinationNode.channelCount = value;\n    }\n    get channelCountMode() {\n      return this._nativeAudioDestinationNode.channelCountMode;\n    }\n    set channelCountMode(value) {\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError2();\n      }\n      this._nativeAudioDestinationNode.channelCountMode = value;\n    }\n    get maxChannelCount() {\n      return this._nativeAudioDestinationNode.maxChannelCount;\n    }\n  };\n};\nconst createAudioDestinationNodeRenderer = (renderInputsOfAudioNode2) => {\n  const renderedNativeAudioDestinationNodes = /* @__PURE__ */ new WeakMap();\n  const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n    const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n    renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n    await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n    return nativeAudioDestinationNode;\n  };\n  return {\n    render(proxy, nativeOfflineAudioContext) {\n      const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n      if (renderedNativeAudioDestinationNode !== void 0) {\n        return Promise.resolve(renderedNativeAudioDestinationNode);\n      }\n      return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n    }\n  };\n};\nconst createAudioListenerFactory = (createAudioParam2, createNativeChannelMergerNode2, createNativeConstantSourceNode2, createNativeScriptProcessorNode2, createNotSupportedError2, getFirstSample2, isNativeOfflineAudioContext2, overwriteAccessors2) => {\n  return (context2, nativeContext) => {\n    const nativeListener = nativeContext.listener;\n    const createFakeAudioParams = () => {\n      const buffer = new Float32Array(1);\n      const channelMergerNode = createNativeChannelMergerNode2(nativeContext, {\n        channelCount: 1,\n        channelCountMode: \"explicit\",\n        channelInterpretation: \"speakers\",\n        numberOfInputs: 9\n      });\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      let isScriptProcessorNodeCreated = false;\n      let lastOrientation = [0, 0, -1, 0, 1, 0];\n      let lastPosition = [0, 0, 0];\n      const createScriptProcessorNode = () => {\n        if (isScriptProcessorNodeCreated) {\n          return;\n        }\n        isScriptProcessorNodeCreated = true;\n        const scriptProcessorNode = createNativeScriptProcessorNode2(nativeContext, 256, 9, 0);\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n          const orientation = [\n            getFirstSample2(inputBuffer, buffer, 0),\n            getFirstSample2(inputBuffer, buffer, 1),\n            getFirstSample2(inputBuffer, buffer, 2),\n            getFirstSample2(inputBuffer, buffer, 3),\n            getFirstSample2(inputBuffer, buffer, 4),\n            getFirstSample2(inputBuffer, buffer, 5)\n          ];\n          if (orientation.some((value, index) => value !== lastOrientation[index])) {\n            nativeListener.setOrientation(...orientation);\n            lastOrientation = orientation;\n          }\n          const positon = [\n            getFirstSample2(inputBuffer, buffer, 6),\n            getFirstSample2(inputBuffer, buffer, 7),\n            getFirstSample2(inputBuffer, buffer, 8)\n          ];\n          if (positon.some((value, index) => value !== lastPosition[index])) {\n            nativeListener.setPosition(...positon);\n            lastPosition = positon;\n          }\n        };\n        channelMergerNode.connect(scriptProcessorNode);\n      };\n      const createSetOrientation = (index) => (value) => {\n        if (value !== lastOrientation[index]) {\n          lastOrientation[index] = value;\n          nativeListener.setOrientation(...lastOrientation);\n        }\n      };\n      const createSetPosition = (index) => (value) => {\n        if (value !== lastPosition[index]) {\n          lastPosition[index] = value;\n          nativeListener.setPosition(...lastPosition);\n        }\n      };\n      const createFakeAudioParam = (input, initialValue, setValue) => {\n        const constantSourceNode = createNativeConstantSourceNode2(nativeContext, {\n          channelCount: 1,\n          channelCountMode: \"explicit\",\n          channelInterpretation: \"discrete\",\n          offset: initialValue\n        });\n        constantSourceNode.connect(channelMergerNode, 0, input);\n        constantSourceNode.start();\n        Object.defineProperty(constantSourceNode.offset, \"defaultValue\", {\n          get() {\n            return initialValue;\n          }\n        });\n        const audioParam = createAudioParam2({ context: context2 }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        overwriteAccessors2(audioParam, \"value\", (get) => () => get.call(audioParam), (set) => (value) => {\n          try {\n            set.call(audioParam, value);\n          } catch (err) {\n            if (err.code !== 9) {\n              throw err;\n            }\n          }\n          createScriptProcessorNode();\n          if (isOffline) {\n            setValue(value);\n          }\n        });\n        audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n          if (isOffline) {\n            return () => {\n              throw createNotSupportedError2();\n            };\n          }\n          return (...args) => {\n            const value = cancelAndHoldAtTime.apply(audioParam, args);\n            createScriptProcessorNode();\n            return value;\n          };\n        })(audioParam.cancelAndHoldAtTime);\n        audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n          if (isOffline) {\n            return () => {\n              throw createNotSupportedError2();\n            };\n          }\n          return (...args) => {\n            const value = cancelScheduledValues.apply(audioParam, args);\n            createScriptProcessorNode();\n            return value;\n          };\n        })(audioParam.cancelScheduledValues);\n        audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n          if (isOffline) {\n            return () => {\n              throw createNotSupportedError2();\n            };\n          }\n          return (...args) => {\n            const value = exponentialRampToValueAtTime.apply(audioParam, args);\n            createScriptProcessorNode();\n            return value;\n          };\n        })(audioParam.exponentialRampToValueAtTime);\n        audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n          if (isOffline) {\n            return () => {\n              throw createNotSupportedError2();\n            };\n          }\n          return (...args) => {\n            const value = linearRampToValueAtTime.apply(audioParam, args);\n            createScriptProcessorNode();\n            return value;\n          };\n        })(audioParam.linearRampToValueAtTime);\n        audioParam.setTargetAtTime = ((setTargetAtTime) => {\n          if (isOffline) {\n            return () => {\n              throw createNotSupportedError2();\n            };\n          }\n          return (...args) => {\n            const value = setTargetAtTime.apply(audioParam, args);\n            createScriptProcessorNode();\n            return value;\n          };\n        })(audioParam.setTargetAtTime);\n        audioParam.setValueAtTime = ((setValueAtTime) => {\n          if (isOffline) {\n            return () => {\n              throw createNotSupportedError2();\n            };\n          }\n          return (...args) => {\n            const value = setValueAtTime.apply(audioParam, args);\n            createScriptProcessorNode();\n            return value;\n          };\n        })(audioParam.setValueAtTime);\n        audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n          if (isOffline) {\n            return () => {\n              throw createNotSupportedError2();\n            };\n          }\n          return (...args) => {\n            const value = setValueCurveAtTime.apply(audioParam, args);\n            createScriptProcessorNode();\n            return value;\n          };\n        })(audioParam.setValueCurveAtTime);\n        return audioParam;\n      };\n      return {\n        forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n        forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n        forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n        positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n        positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n        positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n        upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n        upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n        upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n      };\n    };\n    const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === void 0 ? createFakeAudioParams() : nativeListener;\n    return {\n      get forwardX() {\n        return forwardX;\n      },\n      get forwardY() {\n        return forwardY;\n      },\n      get forwardZ() {\n        return forwardZ;\n      },\n      get positionX() {\n        return positionX;\n      },\n      get positionY() {\n        return positionY;\n      },\n      get positionZ() {\n        return positionZ;\n      },\n      get upX() {\n        return upX;\n      },\n      get upY() {\n        return upY;\n      },\n      get upZ() {\n        return upZ;\n      }\n    };\n  };\n};\nconst isAudioNode$1 = (audioNodeOrAudioParam) => {\n  return \"context\" in audioNodeOrAudioParam;\n};\nconst isAudioNodeOutputConnection = (outputConnection) => {\n  return isAudioNode$1(outputConnection[0]);\n};\nconst insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n  for (const lmnt of set) {\n    if (predicate(lmnt)) {\n      if (ignoreDuplicates) {\n        return false;\n      }\n      throw Error(\"The set contains at least one similar element.\");\n    }\n  }\n  set.add(element);\n  return true;\n};\nconst addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n  insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\nconst addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n  const passiveInputConnections = passiveInputs.get(source);\n  if (passiveInputConnections === void 0) {\n    passiveInputs.set(source, /* @__PURE__ */ new Set([[output, eventListener]]));\n  } else {\n    insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n  }\n};\nconst isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n  return \"inputs\" in nativeAudioNodeOrNativeAudioNodeFaker;\n};\nconst connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n  if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n    const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n    nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n    return [fakeNativeDestinationAudioNode, output, 0];\n  }\n  nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n  return [nativeDestinationAudioNode, output, input];\n};\nconst deleteActiveInputConnection = (activeInputConnections, source, output) => {\n  for (const activeInputConnection of activeInputConnections) {\n    if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n      activeInputConnections.delete(activeInputConnection);\n      return activeInputConnection;\n    }\n  }\n  return null;\n};\nconst deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n  return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\nconst deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n  const eventListeners = getEventListenersOfAudioNode(audioNode);\n  if (!eventListeners.delete(eventListener)) {\n    throw new Error(\"Missing the expected event listener.\");\n  }\n};\nconst deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n  const passiveInputConnections = getValueForKey(passiveInputs, source);\n  const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n  if (passiveInputConnections.size === 0) {\n    passiveInputs.delete(source);\n  }\n  return matchingConnection;\n};\nconst disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n  if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n  } else {\n    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n  }\n};\nconst getNativeAudioNode = (audioNode) => {\n  return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\nconst getNativeAudioParam = (audioParam) => {\n  return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\nconst isPartOfACycle = (audioNode) => {\n  return CYCLE_COUNTERS.has(audioNode);\n};\nconst isPassiveAudioNode = (audioNode) => {\n  return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\nconst testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor2) => {\n  return new Promise((resolve) => {\n    if (nativeAudioWorkletNodeConstructor2 !== null) {\n      resolve(true);\n    } else {\n      const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n      const dummy = nativeAudioContext.createGain();\n      const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n      const channelData = ones.getChannelData(0);\n      channelData[0] = 1;\n      channelData[1] = 1;\n      const source = nativeAudioContext.createBufferSource();\n      source.buffer = ones;\n      source.loop = true;\n      source.connect(analyzer).connect(nativeAudioContext.destination);\n      source.connect(dummy);\n      source.disconnect(dummy);\n      analyzer.onaudioprocess = (event) => {\n        const chnnlDt = event.inputBuffer.getChannelData(0);\n        if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n        source.stop();\n        analyzer.onaudioprocess = null;\n        source.disconnect(analyzer);\n        analyzer.disconnect(nativeAudioContext.destination);\n      };\n      source.start();\n    }\n  });\n};\nconst visitEachAudioNodeOnce = (cycles, visitor) => {\n  const counts = /* @__PURE__ */ new Map();\n  for (const cycle of cycles) {\n    for (const audioNode of cycle) {\n      const count = counts.get(audioNode);\n      counts.set(audioNode, count === void 0 ? 1 : count + 1);\n    }\n  }\n  counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\nconst isNativeAudioNode$1 = (nativeAudioNodeOrAudioParam) => {\n  return \"context\" in nativeAudioNodeOrAudioParam;\n};\nconst wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n  const connections = /* @__PURE__ */ new Map();\n  nativeAudioNode.connect = ((connect2) => {\n    return (destination, output = 0, input = 0) => {\n      const returnValue = isNativeAudioNode$1(destination) ? connect2(destination, output, input) : connect2(destination, output);\n      const connectionsToDestination = connections.get(destination);\n      if (connectionsToDestination === void 0) {\n        connections.set(destination, [{ input, output }]);\n      } else {\n        if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n          connectionsToDestination.push({ input, output });\n        }\n      }\n      return returnValue;\n    };\n  })(nativeAudioNode.connect.bind(nativeAudioNode));\n  nativeAudioNode.disconnect = ((disconnect2) => {\n    return (destinationOrOutput, output, input) => {\n      disconnect2.apply(nativeAudioNode);\n      if (destinationOrOutput === void 0) {\n        connections.clear();\n      } else if (typeof destinationOrOutput === \"number\") {\n        for (const [destination, connectionsToDestination] of connections) {\n          const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n          if (filteredConnections.length === 0) {\n            connections.delete(destination);\n          } else {\n            connections.set(destination, filteredConnections);\n          }\n        }\n      } else if (connections.has(destinationOrOutput)) {\n        if (output === void 0) {\n          connections.delete(destinationOrOutput);\n        } else {\n          const connectionsToDestination = connections.get(destinationOrOutput);\n          if (connectionsToDestination !== void 0) {\n            const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === void 0));\n            if (filteredConnections.length === 0) {\n              connections.delete(destinationOrOutput);\n            } else {\n              connections.set(destinationOrOutput, filteredConnections);\n            }\n          }\n        }\n      }\n      for (const [destination, connectionsToDestination] of connections) {\n        connectionsToDestination.forEach((connection) => {\n          if (isNativeAudioNode$1(destination)) {\n            nativeAudioNode.connect(destination, connection.output, connection.input);\n          } else {\n            nativeAudioNode.connect(destination, connection.output);\n          }\n        });\n      }\n    };\n  })(nativeAudioNode.disconnect);\n};\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n  const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n  const { outputs } = getAudioNodeConnections(source);\n  const eventListeners = getEventListenersOfAudioNode(source);\n  const eventListener = (isActive) => {\n    const nativeAudioNode = getNativeAudioNode(source);\n    const nativeAudioParam = getNativeAudioParam(destination);\n    if (isActive) {\n      const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n      addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n      if (!isOffline && !isPartOfACycle(source)) {\n        nativeAudioNode.connect(nativeAudioParam, output);\n      }\n    } else {\n      const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n      addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n      if (!isOffline && !isPartOfACycle(source)) {\n        nativeAudioNode.disconnect(nativeAudioParam, output);\n      }\n    }\n  };\n  if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n    eventListeners.add(eventListener);\n    if (isActiveAudioNode(source)) {\n      addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n    } else {\n      addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n    }\n    return true;\n  }\n  return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n  const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n  const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n  if (activeInputConnection === null) {\n    const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n    return [passiveInputConnection[2], false];\n  }\n  return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n  const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n  const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n  if (activeInputConnection === null) {\n    const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n    return [passiveInputConnection[1], false];\n  }\n  return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n  const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n  if (listener !== null) {\n    deleteEventListenerOfAudioNode(source, listener);\n    if (isActive && !isOffline && !isPartOfACycle(source)) {\n      disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n    }\n  }\n  if (isActiveAudioNode(destination)) {\n    const { activeInputs } = getAudioNodeConnections(destination);\n    setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n  }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n  const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n  if (listener !== null) {\n    deleteEventListenerOfAudioNode(source, listener);\n    if (isActive && !isOffline && !isPartOfACycle(source)) {\n      getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n    }\n  }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  const destinations = [];\n  for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n    if (isAudioNodeOutputConnection(outputConnection)) {\n      deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n    } else {\n      deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n    }\n    destinations.push(outputConnection[0]);\n  }\n  audioNodeConnectionsOfSource.outputs.clear();\n  return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  const destinations = [];\n  for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n    if (outputConnection[1] === output) {\n      if (isAudioNodeOutputConnection(outputConnection)) {\n        deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n      } else {\n        deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n      }\n      destinations.push(outputConnection[0]);\n      audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n    }\n  }\n  return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n  const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n  return Array.from(audioNodeConnectionsOfSource.outputs).filter((outputConnection) => outputConnection[0] === destination && (output === void 0 || outputConnection[1] === output) && (input === void 0 || outputConnection[2] === input)).map((outputConnection) => {\n    if (isAudioNodeOutputConnection(outputConnection)) {\n      deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n    } else {\n      deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n    }\n    audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n    return outputConnection[0];\n  });\n};\nconst createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult2, createIncrementCycleCounter, createIndexSizeError2, createInvalidAccessError2, createNotSupportedError2, decrementCycleCounter, detectCycles, eventTargetConstructor2, getNativeContext2, isNativeAudioContext2, isNativeAudioNode2, isNativeAudioParam2, isNativeOfflineAudioContext2, nativeAudioWorkletNodeConstructor2) => {\n  return class AudioNode extends eventTargetConstructor2 {\n    constructor(context2, isActive, nativeAudioNode, audioNodeRenderer) {\n      super(nativeAudioNode);\n      this._context = context2;\n      this._nativeAudioNode = nativeAudioNode;\n      const nativeContext = getNativeContext2(context2);\n      if (isNativeAudioContext2(nativeContext) && cacheTestResult2(testAudioNodeDisconnectMethodSupport, () => {\n        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor2);\n      }) !== true) {\n        wrapAudioNodeDisconnectMethod(nativeAudioNode);\n      }\n      AUDIO_NODE_STORE.set(this, nativeAudioNode);\n      EVENT_LISTENERS.set(this, /* @__PURE__ */ new Set());\n      if (context2.state !== \"closed\" && isActive) {\n        setInternalStateToActive(this);\n      }\n      addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n    }\n    get channelCount() {\n      return this._nativeAudioNode.channelCount;\n    }\n    set channelCount(value) {\n      this._nativeAudioNode.channelCount = value;\n    }\n    get channelCountMode() {\n      return this._nativeAudioNode.channelCountMode;\n    }\n    set channelCountMode(value) {\n      this._nativeAudioNode.channelCountMode = value;\n    }\n    get channelInterpretation() {\n      return this._nativeAudioNode.channelInterpretation;\n    }\n    set channelInterpretation(value) {\n      this._nativeAudioNode.channelInterpretation = value;\n    }\n    get context() {\n      return this._context;\n    }\n    get numberOfInputs() {\n      return this._nativeAudioNode.numberOfInputs;\n    }\n    get numberOfOutputs() {\n      return this._nativeAudioNode.numberOfOutputs;\n    }\n    connect(destination, output = 0, input = 0) {\n      if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n        throw createIndexSizeError2();\n      }\n      const nativeContext = getNativeContext2(this._context);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      if (isNativeAudioNode2(destination) || isNativeAudioParam2(destination)) {\n        throw createInvalidAccessError2();\n      }\n      if (isAudioNode$1(destination)) {\n        const nativeDestinationAudioNode = getNativeAudioNode(destination);\n        try {\n          const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n          const isPassive = isPassiveAudioNode(this);\n          if (isOffline || isPassive) {\n            this._nativeAudioNode.disconnect(...connection);\n          }\n          if (this.context.state !== \"closed\" && !isPassive && isPassiveAudioNode(destination)) {\n            setInternalStateToActive(destination);\n          }\n        } catch (err) {\n          if (err.code === 12) {\n            throw createInvalidAccessError2();\n          }\n          throw err;\n        }\n        const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n        if (isNewConnectionToAudioNode) {\n          const cycles = detectCycles([this], destination);\n          visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n        }\n        return destination;\n      }\n      const nativeAudioParam = getNativeAudioParam(destination);\n      if (nativeAudioParam.name === \"playbackRate\" && nativeAudioParam.maxValue === 1024) {\n        throw createNotSupportedError2();\n      }\n      try {\n        this._nativeAudioNode.connect(nativeAudioParam, output);\n        if (isOffline || isPassiveAudioNode(this)) {\n          this._nativeAudioNode.disconnect(nativeAudioParam, output);\n        }\n      } catch (err) {\n        if (err.code === 12) {\n          throw createInvalidAccessError2();\n        }\n        throw err;\n      }\n      const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n      if (isNewConnectionToAudioParam) {\n        const cycles = detectCycles([this], destination);\n        visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n      }\n    }\n    disconnect(destinationOrOutput, output, input) {\n      let destinations;\n      const nativeContext = getNativeContext2(this._context);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      if (destinationOrOutput === void 0) {\n        destinations = deleteAnyConnection(this, isOffline);\n      } else if (typeof destinationOrOutput === \"number\") {\n        if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n          throw createIndexSizeError2();\n        }\n        destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n      } else {\n        if (output !== void 0 && (output < 0 || output >= this.numberOfOutputs)) {\n          throw createIndexSizeError2();\n        }\n        if (isAudioNode$1(destinationOrOutput) && input !== void 0 && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n          throw createIndexSizeError2();\n        }\n        destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n        if (destinations.length === 0) {\n          throw createInvalidAccessError2();\n        }\n      }\n      for (const destination of destinations) {\n        const cycles = detectCycles([this], destination);\n        visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n      }\n    }\n  };\n};\nconst createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore2, audioParamStore, createAudioParamRenderer2, createCancelAndHoldAutomationEvent2, createCancelScheduledValuesAutomationEvent2, createExponentialRampToValueAutomationEvent2, createLinearRampToValueAutomationEvent2, createSetTargetAutomationEvent2, createSetValueAutomationEvent2, createSetValueCurveAutomationEvent2, nativeAudioContextConstructor2, setValueAtTimeUntilPossible2) => {\n  return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n    const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n    const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer2(automationEventList) : null;\n    const audioParam = {\n      get defaultValue() {\n        return nativeAudioParam.defaultValue;\n      },\n      get maxValue() {\n        return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n      },\n      get minValue() {\n        return minValue === null ? nativeAudioParam.minValue : minValue;\n      },\n      get value() {\n        return nativeAudioParam.value;\n      },\n      set value(value) {\n        nativeAudioParam.value = value;\n        audioParam.setValueAtTime(value, audioNode.context.currentTime);\n      },\n      cancelAndHoldAtTime(cancelTime) {\n        if (typeof nativeAudioParam.cancelAndHoldAtTime === \"function\") {\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n          automationEventList.add(createCancelAndHoldAutomationEvent2(cancelTime));\n          nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n        } else {\n          const previousLastEvent = Array.from(automationEventList).pop();\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n          automationEventList.add(createCancelAndHoldAutomationEvent2(cancelTime));\n          const currentLastEvent = Array.from(automationEventList).pop();\n          nativeAudioParam.cancelScheduledValues(cancelTime);\n          if (previousLastEvent !== currentLastEvent && currentLastEvent !== void 0) {\n            if (currentLastEvent.type === \"exponentialRampToValue\") {\n              nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n            } else if (currentLastEvent.type === \"linearRampToValue\") {\n              nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n            } else if (currentLastEvent.type === \"setValue\") {\n              nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n            } else if (currentLastEvent.type === \"setValueCurve\") {\n              nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n            }\n          }\n        }\n        return audioParam;\n      },\n      cancelScheduledValues(cancelTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createCancelScheduledValuesAutomationEvent2(cancelTime));\n        nativeAudioParam.cancelScheduledValues(cancelTime);\n        return audioParam;\n      },\n      exponentialRampToValueAtTime(value, endTime) {\n        if (value === 0) {\n          throw new RangeError();\n        }\n        if (!Number.isFinite(endTime) || endTime < 0) {\n          throw new RangeError();\n        }\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createExponentialRampToValueAutomationEvent2(value, endTime));\n        nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n        return audioParam;\n      },\n      linearRampToValueAtTime(value, endTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createLinearRampToValueAutomationEvent2(value, endTime));\n        nativeAudioParam.linearRampToValueAtTime(value, endTime);\n        return audioParam;\n      },\n      setTargetAtTime(target, startTime, timeConstant) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createSetTargetAutomationEvent2(target, startTime, timeConstant));\n        nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n        return audioParam;\n      },\n      setValueAtTime(value, startTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createSetValueAutomationEvent2(value, startTime));\n        nativeAudioParam.setValueAtTime(value, startTime);\n        return audioParam;\n      },\n      setValueCurveAtTime(values, startTime, duration) {\n        const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n        if (nativeAudioContextConstructor2 !== null && nativeAudioContextConstructor2.name === \"webkitAudioContext\") {\n          const endTime = startTime + duration;\n          const sampleRate = audioNode.context.sampleRate;\n          const firstSample = Math.ceil(startTime * sampleRate);\n          const lastSample = Math.floor(endTime * sampleRate);\n          const numberOfInterpolatedValues = lastSample - firstSample;\n          const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n          for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n            const theoreticIndex = (convertedValues.length - 1) / duration * ((firstSample + i) / sampleRate - startTime);\n            const lowerIndex = Math.floor(theoreticIndex);\n            const upperIndex = Math.ceil(theoreticIndex);\n            interpolatedValues[i] = lowerIndex === upperIndex ? convertedValues[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n          }\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n          automationEventList.add(createSetValueCurveAutomationEvent2(interpolatedValues, startTime, duration));\n          nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n          const timeOfLastSample = lastSample / sampleRate;\n          if (timeOfLastSample < endTime) {\n            setValueAtTimeUntilPossible2(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n          }\n          setValueAtTimeUntilPossible2(audioParam, convertedValues[convertedValues.length - 1], endTime);\n        } else {\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n          automationEventList.add(createSetValueCurveAutomationEvent2(convertedValues, startTime, duration));\n          nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n        }\n        return audioParam;\n      }\n    };\n    audioParamStore.set(audioParam, nativeAudioParam);\n    audioParamAudioNodeStore2.set(audioParam, audioNode);\n    addAudioParamConnections(audioParam, audioParamRenderer);\n    return audioParam;\n  };\n};\nconst createAudioParamRenderer = (automationEventList) => {\n  return {\n    replay(audioParam) {\n      for (const automationEvent of automationEventList) {\n        if (automationEvent.type === \"exponentialRampToValue\") {\n          const { endTime, value } = automationEvent;\n          audioParam.exponentialRampToValueAtTime(value, endTime);\n        } else if (automationEvent.type === \"linearRampToValue\") {\n          const { endTime, value } = automationEvent;\n          audioParam.linearRampToValueAtTime(value, endTime);\n        } else if (automationEvent.type === \"setTarget\") {\n          const { startTime, target, timeConstant } = automationEvent;\n          audioParam.setTargetAtTime(target, startTime, timeConstant);\n        } else if (automationEvent.type === \"setValue\") {\n          const { startTime, value } = automationEvent;\n          audioParam.setValueAtTime(value, startTime);\n        } else if (automationEvent.type === \"setValueCurve\") {\n          const { duration, startTime, values } = automationEvent;\n          audioParam.setValueCurveAtTime(values, startTime, duration);\n        } else {\n          throw new Error(\"Can't apply an unknown automation.\");\n        }\n      }\n    }\n  };\n};\nclass ReadOnlyMap {\n  constructor(parameters) {\n    this._map = new Map(parameters);\n  }\n  get size() {\n    return this._map.size;\n  }\n  entries() {\n    return this._map.entries();\n  }\n  forEach(callback, thisArg = null) {\n    return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n  }\n  get(name) {\n    return this._map.get(name);\n  }\n  has(name) {\n    return this._map.has(name);\n  }\n  keys() {\n    return this._map.keys();\n  }\n  values() {\n    return this._map.values();\n  }\n}\nconst DEFAULT_OPTIONS$g = {\n  channelCount: 2,\n  channelCountMode: \"explicit\",\n  channelInterpretation: \"speakers\",\n  numberOfInputs: 1,\n  numberOfOutputs: 1,\n  parameterData: {},\n  processorOptions: {}\n};\nconst createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode2, audioNodeConstructor2, createAudioParam2, createAudioWorkletNodeRenderer2, createNativeAudioWorkletNode2, getAudioNodeConnections2, getBackupOfflineAudioContext2, getNativeContext2, isNativeOfflineAudioContext2, nativeAudioWorkletNodeConstructor2, sanitizeAudioWorkletNodeOptions2, setActiveAudioWorkletNodeInputs2, testAudioWorkletNodeOptionsClonability2, wrapEventListener2) => {\n  return class AudioWorkletNode extends audioNodeConstructor2 {\n    constructor(context2, name, options) {\n      var _a;\n      const nativeContext = getNativeContext2(context2);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const mergedOptions = sanitizeAudioWorkletNodeOptions2({ ...DEFAULT_OPTIONS$g, ...options });\n      testAudioWorkletNodeOptionsClonability2(mergedOptions);\n      const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n      const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n      const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== \"closed\" ? nativeContext : (_a = getBackupOfflineAudioContext2(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n      const nativeAudioWorkletNode = createNativeAudioWorkletNode2(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context2.baseLatency, nativeAudioWorkletNodeConstructor2, name, processorConstructor, mergedOptions);\n      const audioWorkletNodeRenderer = isOffline ? createAudioWorkletNodeRenderer2(name, mergedOptions, processorConstructor) : null;\n      super(context2, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n      const parameters = [];\n      nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n        const audioParam = createAudioParam2(this, isOffline, nativeAudioParam);\n        parameters.push([nm, audioParam]);\n      });\n      this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n      this._onprocessorerror = null;\n      this._parameters = new ReadOnlyMap(parameters);\n      if (isOffline) {\n        addUnrenderedAudioWorkletNode2(nativeContext, this);\n      }\n      const { activeInputs } = getAudioNodeConnections2(this);\n      setActiveAudioWorkletNodeInputs2(nativeAudioWorkletNode, activeInputs);\n    }\n    get onprocessorerror() {\n      return this._onprocessorerror;\n    }\n    set onprocessorerror(value) {\n      const wrappedListener = typeof value === \"function\" ? wrapEventListener2(this, value) : null;\n      this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n      const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n      this._onprocessorerror = nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener ? value : nativeOnProcessorError;\n    }\n    get parameters() {\n      if (this._parameters === null) {\n        return this._nativeAudioWorkletNode.parameters;\n      }\n      return this._parameters;\n    }\n    get port() {\n      return this._nativeAudioWorkletNode.port;\n    }\n  };\n};\nfunction copyFromChannel(audioBuffer, parent, key, channelNumber, bufferOffset) {\n  if (typeof audioBuffer.copyFromChannel === \"function\") {\n    if (parent[key].byteLength === 0) {\n      parent[key] = new Float32Array(128);\n    }\n    audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n  } else {\n    const channelData = audioBuffer.getChannelData(channelNumber);\n    if (parent[key].byteLength === 0) {\n      parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n    } else {\n      const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n      parent[key].set(slicedInput);\n    }\n  }\n}\nconst copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n  if (typeof audioBuffer.copyToChannel === \"function\") {\n    if (parent[key].byteLength !== 0) {\n      audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n    }\n  } else {\n    if (parent[key].byteLength !== 0) {\n      audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n    }\n  }\n};\nconst createNestedArrays = (x, y) => {\n  const arrays = [];\n  for (let i = 0; i < x; i += 1) {\n    const array = [];\n    const length = typeof y === \"number\" ? y : y[i];\n    for (let j = 0; j < length; j += 1) {\n      array.push(new Float32Array(128));\n    }\n    arrays.push(array);\n  }\n  return arrays;\n};\nconst getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n  const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n  const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n  return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime2) => {\n  const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n  const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n  const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n  const processedBuffer = numberOfOutputChannels === 0 ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n  if (processorConstructor === void 0) {\n    throw new Error(\"Missing the processor constructor.\");\n  }\n  const audioNodeConnections = getAudioNodeConnections(proxy);\n  const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n  const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n  const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n  const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n  for (let i = 0; i < length; i += 128) {\n    if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n      for (let j = 0; j < options.numberOfInputs; j += 1) {\n        for (let k = 0; k < options.channelCount; k += 1) {\n          copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n        }\n      }\n    }\n    if (processorConstructor.parameterDescriptors !== void 0 && renderedBuffer !== null) {\n      processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n        copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n      });\n    }\n    for (let j = 0; j < options.numberOfInputs; j += 1) {\n      for (let k = 0; k < outputChannelCount[j]; k += 1) {\n        if (outputs[j][k].byteLength === 0) {\n          outputs[j][k] = new Float32Array(128);\n        }\n      }\n    }\n    try {\n      const potentiallyEmptyInputs = inputs.map((input, index) => {\n        if (audioNodeConnections.activeInputs[index].size === 0) {\n          return [];\n        }\n        return input;\n      });\n      const activeSourceFlag = exposeCurrentFrameAndCurrentTime2(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n      if (processedBuffer !== null) {\n        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n          for (let k = 0; k < outputChannelCount[j]; k += 1) {\n            copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n          }\n          outputChannelSplitterNodeOutput += outputChannelCount[j];\n        }\n      }\n      if (!activeSourceFlag) {\n        break;\n      }\n    } catch (error) {\n      proxy.dispatchEvent(new ErrorEvent(\"processorerror\", {\n        colno: error.colno,\n        filename: error.filename,\n        lineno: error.lineno,\n        message: error.message\n      }));\n      break;\n    }\n  }\n  return processedBuffer;\n};\nconst createAudioWorkletNodeRendererFactory = (connectAudioParam2, connectMultipleOutputs2, createNativeAudioBufferSourceNode2, createNativeChannelMergerNode2, createNativeChannelSplitterNode2, createNativeConstantSourceNode2, createNativeGainNode2, deleteUnrenderedAudioWorkletNode2, disconnectMultipleOutputs2, exposeCurrentFrameAndCurrentTime2, getNativeAudioNode2, nativeAudioWorkletNodeConstructor2, nativeOfflineAudioContextConstructor2, renderAutomation2, renderInputsOfAudioNode2, renderNativeOfflineAudioContext2) => {\n  return (name, options, processorConstructor) => {\n    const renderedNativeAudioNodes = /* @__PURE__ */ new WeakMap();\n    let processedBufferPromise = null;\n    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeAudioWorkletNode = getNativeAudioNode2(proxy);\n      let nativeOutputNodes = null;\n      const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n      const outputChannelCount = Array.isArray(options.outputChannelCount) ? options.outputChannelCount : Array.from(options.outputChannelCount);\n      if (nativeAudioWorkletNodeConstructor2 === null) {\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const outputChannelSplitterNode = createNativeChannelSplitterNode2(nativeOfflineAudioContext, {\n          channelCount: Math.max(1, numberOfOutputChannels),\n          channelCountMode: \"explicit\",\n          channelInterpretation: \"discrete\",\n          numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n          outputChannelMergerNodes.push(createNativeChannelMergerNode2(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: \"explicit\",\n            channelInterpretation: \"speakers\",\n            numberOfInputs: outputChannelCount[i]\n          }));\n        }\n        const outputGainNode = createNativeGainNode2(nativeOfflineAudioContext, {\n          channelCount: options.channelCount,\n          channelCountMode: options.channelCountMode,\n          channelInterpretation: options.channelInterpretation,\n          gain: 1\n        });\n        outputGainNode.connect = connectMultipleOutputs2.bind(null, outputChannelMergerNodes);\n        outputGainNode.disconnect = disconnectMultipleOutputs2.bind(null, outputChannelMergerNodes);\n        nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n      } else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n        nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor2(nativeOfflineAudioContext, name);\n      }\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n      if (nativeOutputNodes !== null) {\n        if (processedBufferPromise === null) {\n          if (processorConstructor === void 0) {\n            throw new Error(\"Missing the processor constructor.\");\n          }\n          if (nativeOfflineAudioContextConstructor2 === null) {\n            throw new Error(\"Missing the native OfflineAudioContext constructor.\");\n          }\n          const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n          const numberOfParameters = processorConstructor.parameterDescriptors === void 0 ? 0 : processorConstructor.parameterDescriptors.length;\n          const numberOfChannels = numberOfInputChannels + numberOfParameters;\n          const renderBuffer = async () => {\n            const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor2(numberOfChannels, Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n            const gainNodes = [];\n            const inputChannelSplitterNodes = [];\n            for (let i = 0; i < options.numberOfInputs; i += 1) {\n              gainNodes.push(createNativeGainNode2(partialOfflineAudioContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n              }));\n              inputChannelSplitterNodes.push(createNativeChannelSplitterNode2(partialOfflineAudioContext, {\n                channelCount: options.channelCount,\n                channelCountMode: \"explicit\",\n                channelInterpretation: \"discrete\",\n                numberOfOutputs: options.channelCount\n              }));\n            }\n            const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n              const constantSourceNode = createNativeConstantSourceNode2(partialOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: \"explicit\",\n                channelInterpretation: \"discrete\",\n                offset: audioParam.value\n              });\n              await renderAutomation2(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n              return constantSourceNode;\n            }));\n            const inputChannelMergerNode = createNativeChannelMergerNode2(partialOfflineAudioContext, {\n              channelCount: 1,\n              channelCountMode: \"explicit\",\n              channelInterpretation: \"speakers\",\n              numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n            });\n            for (let i = 0; i < options.numberOfInputs; i += 1) {\n              gainNodes[i].connect(inputChannelSplitterNodes[i]);\n              for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n              }\n            }\n            for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n              constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n              constantSourceNode.start(0);\n            }\n            inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n            await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode2(proxy, partialOfflineAudioContext, gainNode)));\n            return renderNativeOfflineAudioContext2(partialOfflineAudioContext);\n          };\n          processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime2);\n        }\n        const processedBuffer = await processedBufferPromise;\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode2(nativeOfflineAudioContext, {\n          buffer: null,\n          channelCount: 2,\n          channelCountMode: \"max\",\n          channelInterpretation: \"speakers\",\n          loop: false,\n          loopEnd: 0,\n          loopStart: 0,\n          playbackRate: 1\n        });\n        const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n        if (processedBuffer !== null) {\n          audioBufferSourceNode.buffer = processedBuffer;\n          audioBufferSourceNode.start(0);\n        }\n        audioBufferSourceNode.connect(outputChannelSplitterNode);\n        for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n          const outputChannelMergerNode = outputChannelMergerNodes[i];\n          for (let j = 0; j < outputChannelCount[i]; j += 1) {\n            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n          }\n          outputChannelSplitterNodeOutput += outputChannelCount[i];\n        }\n        return outputGainNode;\n      }\n      if (!nativeAudioWorkletNodeIsOwnedByContext) {\n        for (const [nm, audioParam] of proxy.parameters.entries()) {\n          await renderAutomation2(nativeOfflineAudioContext, audioParam, nativeAudioWorkletNode.parameters.get(nm));\n        }\n      } else {\n        for (const [nm, audioParam] of proxy.parameters.entries()) {\n          await connectAudioParam2(nativeOfflineAudioContext, audioParam, nativeAudioWorkletNode.parameters.get(nm));\n        }\n      }\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n      return nativeAudioWorkletNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        deleteUnrenderedAudioWorkletNode2(nativeOfflineAudioContext, proxy);\n        const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeAudioWorkletNodeOrGainNode !== void 0) {\n          return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n        }\n        return createAudioNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createBaseAudioContextConstructor = (addAudioWorkletModule2, analyserNodeConstructor2, audioBufferConstructor2, audioBufferSourceNodeConstructor2, biquadFilterNodeConstructor2, channelMergerNodeConstructor2, channelSplitterNodeConstructor2, constantSourceNodeConstructor2, convolverNodeConstructor2, decodeAudioData2, delayNodeConstructor2, dynamicsCompressorNodeConstructor2, gainNodeConstructor2, iIRFilterNodeConstructor2, minimalBaseAudioContextConstructor2, oscillatorNodeConstructor2, pannerNodeConstructor2, periodicWaveConstructor2, stereoPannerNodeConstructor2, waveShaperNodeConstructor2) => {\n  return class BaseAudioContext extends minimalBaseAudioContextConstructor2 {\n    constructor(_nativeContext, numberOfChannels) {\n      super(_nativeContext, numberOfChannels);\n      this._nativeContext = _nativeContext;\n      this._audioWorklet = addAudioWorkletModule2 === void 0 ? void 0 : {\n        addModule: (moduleURL, options) => {\n          return addAudioWorkletModule2(this, moduleURL, options);\n        }\n      };\n    }\n    get audioWorklet() {\n      return this._audioWorklet;\n    }\n    createAnalyser() {\n      return new analyserNodeConstructor2(this);\n    }\n    createBiquadFilter() {\n      return new biquadFilterNodeConstructor2(this);\n    }\n    createBuffer(numberOfChannels, length, sampleRate) {\n      return new audioBufferConstructor2({ length, numberOfChannels, sampleRate });\n    }\n    createBufferSource() {\n      return new audioBufferSourceNodeConstructor2(this);\n    }\n    createChannelMerger(numberOfInputs = 6) {\n      return new channelMergerNodeConstructor2(this, { numberOfInputs });\n    }\n    createChannelSplitter(numberOfOutputs = 6) {\n      return new channelSplitterNodeConstructor2(this, { numberOfOutputs });\n    }\n    createConstantSource() {\n      return new constantSourceNodeConstructor2(this);\n    }\n    createConvolver() {\n      return new convolverNodeConstructor2(this);\n    }\n    createDelay(maxDelayTime = 1) {\n      return new delayNodeConstructor2(this, { maxDelayTime });\n    }\n    createDynamicsCompressor() {\n      return new dynamicsCompressorNodeConstructor2(this);\n    }\n    createGain() {\n      return new gainNodeConstructor2(this);\n    }\n    createIIRFilter(feedforward, feedback) {\n      return new iIRFilterNodeConstructor2(this, { feedback, feedforward });\n    }\n    createOscillator() {\n      return new oscillatorNodeConstructor2(this);\n    }\n    createPanner() {\n      return new pannerNodeConstructor2(this);\n    }\n    createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n      return new periodicWaveConstructor2(this, { ...constraints, imag, real });\n    }\n    createStereoPanner() {\n      return new stereoPannerNodeConstructor2(this);\n    }\n    createWaveShaper() {\n      return new waveShaperNodeConstructor2(this);\n    }\n    decodeAudioData(audioData, successCallback, errorCallback) {\n      return decodeAudioData2(this._nativeContext, audioData).then((audioBuffer) => {\n        if (typeof successCallback === \"function\") {\n          successCallback(audioBuffer);\n        }\n        return audioBuffer;\n      }, (err) => {\n        if (typeof errorCallback === \"function\") {\n          errorCallback(err);\n        }\n        throw err;\n      });\n    }\n  };\n};\nconst DEFAULT_OPTIONS$f = {\n  Q: 1,\n  channelCount: 2,\n  channelCountMode: \"max\",\n  channelInterpretation: \"speakers\",\n  detune: 0,\n  frequency: 350,\n  gain: 0,\n  type: \"lowpass\"\n};\nconst createBiquadFilterNodeConstructor = (audioNodeConstructor2, createAudioParam2, createBiquadFilterNodeRenderer2, createInvalidAccessError2, createNativeBiquadFilterNode2, getNativeContext2, isNativeOfflineAudioContext2, setAudioNodeTailTime2) => {\n  return class BiquadFilterNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$f, ...options };\n      const nativeBiquadFilterNode = createNativeBiquadFilterNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const biquadFilterNodeRenderer = isOffline ? createBiquadFilterNodeRenderer2() : null;\n      super(context2, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n      this._Q = createAudioParam2(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._detune = createAudioParam2(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n      this._frequency = createAudioParam2(this, isOffline, nativeBiquadFilterNode.frequency, context2.sampleRate / 2, 0);\n      this._gain = createAudioParam2(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n      this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n      setAudioNodeTailTime2(this, 1);\n    }\n    get detune() {\n      return this._detune;\n    }\n    get frequency() {\n      return this._frequency;\n    }\n    get gain() {\n      return this._gain;\n    }\n    get Q() {\n      return this._Q;\n    }\n    get type() {\n      return this._nativeBiquadFilterNode.type;\n    }\n    set type(value) {\n      this._nativeBiquadFilterNode.type = value;\n    }\n    getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n      try {\n        this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n      } catch (err) {\n        if (err.code === 11) {\n          throw createInvalidAccessError2();\n        }\n        throw err;\n      }\n      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n        throw createInvalidAccessError2();\n      }\n    }\n  };\n};\nconst createBiquadFilterNodeRendererFactory = (connectAudioParam2, createNativeBiquadFilterNode2, getNativeAudioNode2, renderAutomation2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeBiquadFilterNodes = /* @__PURE__ */ new WeakMap();\n    const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeBiquadFilterNode = getNativeAudioNode2(proxy);\n      const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n      if (!nativeBiquadFilterNodeIsOwnedByContext) {\n        const options = {\n          Q: nativeBiquadFilterNode.Q.value,\n          channelCount: nativeBiquadFilterNode.channelCount,\n          channelCountMode: nativeBiquadFilterNode.channelCountMode,\n          channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n          detune: nativeBiquadFilterNode.detune.value,\n          frequency: nativeBiquadFilterNode.frequency.value,\n          gain: nativeBiquadFilterNode.gain.value,\n          type: nativeBiquadFilterNode.type\n        };\n        nativeBiquadFilterNode = createNativeBiquadFilterNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n      if (!nativeBiquadFilterNodeIsOwnedByContext) {\n        await renderAutomation2(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n      } else {\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n      }\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n      return nativeBiquadFilterNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeBiquadFilterNode !== void 0) {\n          return Promise.resolve(renderedNativeBiquadFilterNode);\n        }\n        return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createCacheTestResult = (ongoingTests, testResults) => {\n  return (tester, test) => {\n    const cachedTestResult = testResults.get(tester);\n    if (cachedTestResult !== void 0) {\n      return cachedTestResult;\n    }\n    const ongoingTest = ongoingTests.get(tester);\n    if (ongoingTest !== void 0) {\n      return ongoingTest;\n    }\n    try {\n      const synchronousTestResult = test();\n      if (synchronousTestResult instanceof Promise) {\n        ongoingTests.set(tester, synchronousTestResult);\n        return synchronousTestResult.catch(() => false).then((finalTestResult) => {\n          ongoingTests.delete(tester);\n          testResults.set(tester, finalTestResult);\n          return finalTestResult;\n        });\n      }\n      testResults.set(tester, synchronousTestResult);\n      return synchronousTestResult;\n    } catch {\n      testResults.set(tester, false);\n      return false;\n    }\n  };\n};\nconst DEFAULT_OPTIONS$e = {\n  channelCount: 1,\n  channelCountMode: \"explicit\",\n  channelInterpretation: \"speakers\",\n  numberOfInputs: 6\n};\nconst createChannelMergerNodeConstructor = (audioNodeConstructor2, createChannelMergerNodeRenderer2, createNativeChannelMergerNode2, getNativeContext2, isNativeOfflineAudioContext2) => {\n  return class ChannelMergerNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$e, ...options };\n      const nativeChannelMergerNode = createNativeChannelMergerNode2(nativeContext, mergedOptions);\n      const channelMergerNodeRenderer = isNativeOfflineAudioContext2(nativeContext) ? createChannelMergerNodeRenderer2() : null;\n      super(context2, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n    }\n  };\n};\nconst createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode2, getNativeAudioNode2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeAudioNodes = /* @__PURE__ */ new WeakMap();\n    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeAudioNode = getNativeAudioNode2(proxy);\n      const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n      if (!nativeAudioNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeAudioNode.channelCount,\n          channelCountMode: nativeAudioNode.channelCountMode,\n          channelInterpretation: nativeAudioNode.channelInterpretation,\n          numberOfInputs: nativeAudioNode.numberOfInputs\n        };\n        nativeAudioNode = createNativeChannelMergerNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeAudioNode);\n      return nativeAudioNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeAudioNode !== void 0) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n        return createAudioNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst DEFAULT_OPTIONS$d = {\n  channelCount: 6,\n  channelCountMode: \"explicit\",\n  channelInterpretation: \"discrete\",\n  numberOfOutputs: 6\n};\nconst createChannelSplitterNodeConstructor = (audioNodeConstructor2, createChannelSplitterNodeRenderer2, createNativeChannelSplitterNode2, getNativeContext2, isNativeOfflineAudioContext2, sanitizeChannelSplitterOptions2) => {\n  return class ChannelSplitterNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = sanitizeChannelSplitterOptions2({ ...DEFAULT_OPTIONS$d, ...options });\n      const nativeChannelSplitterNode = createNativeChannelSplitterNode2(nativeContext, mergedOptions);\n      const channelSplitterNodeRenderer = isNativeOfflineAudioContext2(nativeContext) ? createChannelSplitterNodeRenderer2() : null;\n      super(context2, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n    }\n  };\n};\nconst createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode2, getNativeAudioNode2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeAudioNodes = /* @__PURE__ */ new WeakMap();\n    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeAudioNode = getNativeAudioNode2(proxy);\n      const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n      if (!nativeAudioNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeAudioNode.channelCount,\n          channelCountMode: nativeAudioNode.channelCountMode,\n          channelInterpretation: nativeAudioNode.channelInterpretation,\n          numberOfOutputs: nativeAudioNode.numberOfOutputs\n        };\n        nativeAudioNode = createNativeChannelSplitterNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeAudioNode);\n      return nativeAudioNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeAudioNode !== void 0) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n        return createAudioNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createConnectAudioParam = (renderInputsOfAudioParam2) => {\n  return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n    return renderInputsOfAudioParam2(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n  };\n};\nconst createConnectMultipleOutputs = (createIndexSizeError2) => {\n  return (outputAudioNodes, destination, output = 0, input = 0) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === void 0) {\n      throw createIndexSizeError2();\n    }\n    if (isNativeAudioNode$1(destination)) {\n      return outputAudioNode.connect(destination, 0, input);\n    }\n    return outputAudioNode.connect(destination, 0);\n  };\n};\nconst createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode2) => {\n  return (nativeContext, nativeAudioNode) => {\n    const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode2(nativeContext, {\n      buffer: null,\n      channelCount: 2,\n      channelCountMode: \"max\",\n      channelInterpretation: \"speakers\",\n      loop: false,\n      loopEnd: 0,\n      loopStart: 0,\n      playbackRate: 1\n    });\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.loop = true;\n    nativeAudioBufferSourceNode.connect(nativeAudioNode);\n    nativeAudioBufferSourceNode.start();\n    return () => {\n      nativeAudioBufferSourceNode.stop();\n      nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n    };\n  };\n};\nconst DEFAULT_OPTIONS$c = {\n  channelCount: 2,\n  channelCountMode: \"max\",\n  channelInterpretation: \"speakers\",\n  offset: 1\n};\nconst createConstantSourceNodeConstructor = (audioNodeConstructor2, createAudioParam2, createConstantSourceNodeRendererFactory2, createNativeConstantSourceNode2, getNativeContext2, isNativeOfflineAudioContext2, wrapEventListener2) => {\n  return class ConstantSourceNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$c, ...options };\n      const nativeConstantSourceNode = createNativeConstantSourceNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const constantSourceNodeRenderer = isOffline ? createConstantSourceNodeRendererFactory2() : null;\n      super(context2, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n      this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n      this._nativeConstantSourceNode = nativeConstantSourceNode;\n      this._offset = createAudioParam2(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._onended = null;\n    }\n    get offset() {\n      return this._offset;\n    }\n    get onended() {\n      return this._onended;\n    }\n    set onended(value) {\n      const wrappedListener = typeof value === \"function\" ? wrapEventListener2(this, value) : null;\n      this._nativeConstantSourceNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeConstantSourceNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n    start(when = 0) {\n      this._nativeConstantSourceNode.start(when);\n      if (this._constantSourceNodeRenderer !== null) {\n        this._constantSourceNodeRenderer.start = when;\n      }\n      if (this.context.state !== \"closed\") {\n        setInternalStateToActive(this);\n        const resetInternalStateToPassive = () => {\n          this._nativeConstantSourceNode.removeEventListener(\"ended\", resetInternalStateToPassive);\n          if (isActiveAudioNode(this)) {\n            setInternalStateToPassive(this);\n          }\n        };\n        this._nativeConstantSourceNode.addEventListener(\"ended\", resetInternalStateToPassive);\n      }\n    }\n    stop(when = 0) {\n      this._nativeConstantSourceNode.stop(when);\n      if (this._constantSourceNodeRenderer !== null) {\n        this._constantSourceNodeRenderer.stop = when;\n      }\n    }\n  };\n};\nconst createConstantSourceNodeRendererFactory = (connectAudioParam2, createNativeConstantSourceNode2, getNativeAudioNode2, renderAutomation2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeConstantSourceNodes = /* @__PURE__ */ new WeakMap();\n    let start2 = null;\n    let stop = null;\n    const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeConstantSourceNode = getNativeAudioNode2(proxy);\n      const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n      if (!nativeConstantSourceNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeConstantSourceNode.channelCount,\n          channelCountMode: nativeConstantSourceNode.channelCountMode,\n          channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n          offset: nativeConstantSourceNode.offset.value\n        };\n        nativeConstantSourceNode = createNativeConstantSourceNode2(nativeOfflineAudioContext, options);\n        if (start2 !== null) {\n          nativeConstantSourceNode.start(start2);\n        }\n        if (stop !== null) {\n          nativeConstantSourceNode.stop(stop);\n        }\n      }\n      renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n      if (!nativeConstantSourceNodeIsOwnedByContext) {\n        await renderAutomation2(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n      } else {\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n      }\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n      return nativeConstantSourceNode;\n    };\n    return {\n      set start(value) {\n        start2 = value;\n      },\n      set stop(value) {\n        stop = value;\n      },\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeConstantSourceNode !== void 0) {\n          return Promise.resolve(renderedNativeConstantSourceNode);\n        }\n        return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createConvertNumberToUnsignedLong = (unit32Array) => {\n  return (value) => {\n    unit32Array[0] = value;\n    return unit32Array[0];\n  };\n};\nconst DEFAULT_OPTIONS$b = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: \"clamped-max\",\n  channelInterpretation: \"speakers\",\n  disableNormalization: false\n};\nconst createConvolverNodeConstructor = (audioNodeConstructor2, createConvolverNodeRenderer2, createNativeConvolverNode2, getNativeContext2, isNativeOfflineAudioContext2, setAudioNodeTailTime2) => {\n  return class ConvolverNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$b, ...options };\n      const nativeConvolverNode = createNativeConvolverNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const convolverNodeRenderer = isOffline ? createConvolverNodeRenderer2() : null;\n      super(context2, false, nativeConvolverNode, convolverNodeRenderer);\n      this._isBufferNullified = false;\n      this._nativeConvolverNode = nativeConvolverNode;\n      if (mergedOptions.buffer !== null) {\n        setAudioNodeTailTime2(this, mergedOptions.buffer.duration);\n      }\n    }\n    get buffer() {\n      if (this._isBufferNullified) {\n        return null;\n      }\n      return this._nativeConvolverNode.buffer;\n    }\n    set buffer(value) {\n      this._nativeConvolverNode.buffer = value;\n      if (value === null && this._nativeConvolverNode.buffer !== null) {\n        const nativeContext = this._nativeConvolverNode.context;\n        this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n        this._isBufferNullified = true;\n        setAudioNodeTailTime2(this, 0);\n      } else {\n        this._isBufferNullified = false;\n        setAudioNodeTailTime2(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n      }\n    }\n    get normalize() {\n      return this._nativeConvolverNode.normalize;\n    }\n    set normalize(value) {\n      this._nativeConvolverNode.normalize = value;\n    }\n  };\n};\nconst createConvolverNodeRendererFactory = (createNativeConvolverNode2, getNativeAudioNode2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeConvolverNodes = /* @__PURE__ */ new WeakMap();\n    const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeConvolverNode = getNativeAudioNode2(proxy);\n      const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n      if (!nativeConvolverNodeIsOwnedByContext) {\n        const options = {\n          buffer: nativeConvolverNode.buffer,\n          channelCount: nativeConvolverNode.channelCount,\n          channelCountMode: nativeConvolverNode.channelCountMode,\n          channelInterpretation: nativeConvolverNode.channelInterpretation,\n          disableNormalization: !nativeConvolverNode.normalize\n        };\n        nativeConvolverNode = createNativeConvolverNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n      if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n        await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n      } else {\n        await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n      }\n      return nativeConvolverNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeConvolverNode !== void 0) {\n          return Promise.resolve(renderedNativeConvolverNode);\n        }\n        return createConvolverNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createCreateNativeOfflineAudioContext = (createNotSupportedError2, nativeOfflineAudioContextConstructor2) => {\n  return (numberOfChannels, length, sampleRate) => {\n    if (nativeOfflineAudioContextConstructor2 === null) {\n      throw new Error(\"Missing the native OfflineAudioContext constructor.\");\n    }\n    try {\n      return new nativeOfflineAudioContextConstructor2(numberOfChannels, length, sampleRate);\n    } catch (err) {\n      if (err.name === \"SyntaxError\") {\n        throw createNotSupportedError2();\n      }\n      throw err;\n    }\n  };\n};\nconst createDataCloneError = () => new DOMException(\"\", \"DataCloneError\");\nconst detachArrayBuffer = (arrayBuffer) => {\n  const { port1, port2 } = new MessageChannel();\n  return new Promise((resolve) => {\n    const closeAndResolve = () => {\n      port2.onmessage = null;\n      port1.close();\n      port2.close();\n      resolve();\n    };\n    port2.onmessage = () => closeAndResolve();\n    try {\n      port1.postMessage(arrayBuffer, [arrayBuffer]);\n    } finally {\n      closeAndResolve();\n    }\n  });\n};\nconst createDecodeAudioData = (audioBufferStore2, cacheTestResult2, createDataCloneError2, createEncodingError2, detachedArrayBuffers, getNativeContext2, isNativeContext2, testAudioBufferCopyChannelMethodsOutOfBoundsSupport2, testPromiseSupport2, wrapAudioBufferCopyChannelMethods2, wrapAudioBufferCopyChannelMethodsOutOfBounds2) => {\n  return (anyContext, audioData) => {\n    const nativeContext = isNativeContext2(anyContext) ? anyContext : getNativeContext2(anyContext);\n    if (detachedArrayBuffers.has(audioData)) {\n      const err = createDataCloneError2();\n      return Promise.reject(err);\n    }\n    try {\n      detachedArrayBuffers.add(audioData);\n    } catch {\n    }\n    if (cacheTestResult2(testPromiseSupport2, () => testPromiseSupport2(nativeContext))) {\n      return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n        detachArrayBuffer(audioData).catch(() => {\n        });\n        if (!cacheTestResult2(testAudioBufferCopyChannelMethodsOutOfBoundsSupport2, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport2(audioBuffer))) {\n          wrapAudioBufferCopyChannelMethodsOutOfBounds2(audioBuffer);\n        }\n        audioBufferStore2.add(audioBuffer);\n        return audioBuffer;\n      });\n    }\n    return new Promise((resolve, reject) => {\n      const complete = async () => {\n        try {\n          await detachArrayBuffer(audioData);\n        } catch {\n        }\n      };\n      const fail = (err) => {\n        reject(err);\n        complete();\n      };\n      try {\n        nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n          if (typeof audioBuffer.copyFromChannel !== \"function\") {\n            wrapAudioBufferCopyChannelMethods2(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n          }\n          audioBufferStore2.add(audioBuffer);\n          complete().then(() => resolve(audioBuffer));\n        }, (err) => {\n          if (err === null) {\n            fail(createEncodingError2());\n          } else {\n            fail(err);\n          }\n        });\n      } catch (err) {\n        fail(err);\n      }\n    });\n  };\n};\nconst createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode2, cycleCounters, getAudioNodeConnections2, getNativeAudioNode2, getNativeAudioParam2, getNativeContext2, isActiveAudioNode2, isNativeOfflineAudioContext2) => {\n  return (audioNode, count) => {\n    const cycleCounter = cycleCounters.get(audioNode);\n    if (cycleCounter === void 0) {\n      throw new Error(\"Missing the expected cycle count.\");\n    }\n    const nativeContext = getNativeContext2(audioNode.context);\n    const isOffline = isNativeOfflineAudioContext2(nativeContext);\n    if (cycleCounter === count) {\n      cycleCounters.delete(audioNode);\n      if (!isOffline && isActiveAudioNode2(audioNode)) {\n        const nativeSourceAudioNode = getNativeAudioNode2(audioNode);\n        const { outputs } = getAudioNodeConnections2(audioNode);\n        for (const output of outputs) {\n          if (isAudioNodeOutputConnection(output)) {\n            const nativeDestinationAudioNode = getNativeAudioNode2(output[0]);\n            connectNativeAudioNodeToNativeAudioNode2(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n          } else {\n            const nativeDestinationAudioParam = getNativeAudioParam2(output[0]);\n            nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n          }\n        }\n      }\n    } else {\n      cycleCounters.set(audioNode, cycleCounter - count);\n    }\n  };\n};\nconst DEFAULT_OPTIONS$a = {\n  channelCount: 2,\n  channelCountMode: \"max\",\n  channelInterpretation: \"speakers\",\n  delayTime: 0,\n  maxDelayTime: 1\n};\nconst createDelayNodeConstructor = (audioNodeConstructor2, createAudioParam2, createDelayNodeRenderer2, createNativeDelayNode2, getNativeContext2, isNativeOfflineAudioContext2, setAudioNodeTailTime2) => {\n  return class DelayNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$a, ...options };\n      const nativeDelayNode = createNativeDelayNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const delayNodeRenderer = isOffline ? createDelayNodeRenderer2(mergedOptions.maxDelayTime) : null;\n      super(context2, false, nativeDelayNode, delayNodeRenderer);\n      this._delayTime = createAudioParam2(this, isOffline, nativeDelayNode.delayTime);\n      setAudioNodeTailTime2(this, mergedOptions.maxDelayTime);\n    }\n    get delayTime() {\n      return this._delayTime;\n    }\n  };\n};\nconst createDelayNodeRendererFactory = (connectAudioParam2, createNativeDelayNode2, getNativeAudioNode2, renderAutomation2, renderInputsOfAudioNode2) => {\n  return (maxDelayTime) => {\n    const renderedNativeDelayNodes = /* @__PURE__ */ new WeakMap();\n    const createDelayNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeDelayNode = getNativeAudioNode2(proxy);\n      const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n      if (!nativeDelayNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeDelayNode.channelCount,\n          channelCountMode: nativeDelayNode.channelCountMode,\n          channelInterpretation: nativeDelayNode.channelInterpretation,\n          delayTime: nativeDelayNode.delayTime.value,\n          maxDelayTime\n        };\n        nativeDelayNode = createNativeDelayNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n      if (!nativeDelayNodeIsOwnedByContext) {\n        await renderAutomation2(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n      } else {\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n      }\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeDelayNode);\n      return nativeDelayNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeDelayNode !== void 0) {\n          return Promise.resolve(renderedNativeDelayNode);\n        }\n        return createDelayNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet2) => {\n  return (activeInputs, source, output, input) => {\n    return pickElementFromSet2(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n  };\n};\nconst createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes2) => {\n  return (nativeContext, audioWorkletNode) => {\n    getUnrenderedAudioWorkletNodes2(nativeContext).delete(audioWorkletNode);\n  };\n};\nconst isDelayNode = (audioNode) => {\n  return \"delayTime\" in audioNode;\n};\nconst createDetectCycles = (audioParamAudioNodeStore2, getAudioNodeConnections2, getValueForKey2) => {\n  return function detectCycles(chain, nextLink) {\n    const audioNode = isAudioNode$1(nextLink) ? nextLink : getValueForKey2(audioParamAudioNodeStore2, nextLink);\n    if (isDelayNode(audioNode)) {\n      return [];\n    }\n    if (chain[0] === audioNode) {\n      return [chain];\n    }\n    if (chain.includes(audioNode)) {\n      return [];\n    }\n    const { outputs } = getAudioNodeConnections2(audioNode);\n    return Array.from(outputs).map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0])).reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n  };\n};\nconst getOutputAudioNodeAtIndex = (createIndexSizeError2, outputAudioNodes, output) => {\n  const outputAudioNode = outputAudioNodes[output];\n  if (outputAudioNode === void 0) {\n    throw createIndexSizeError2();\n  }\n  return outputAudioNode;\n};\nconst createDisconnectMultipleOutputs = (createIndexSizeError2) => {\n  return (outputAudioNodes, destinationOrOutput = void 0, output = void 0, input = 0) => {\n    if (destinationOrOutput === void 0) {\n      return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n    }\n    if (typeof destinationOrOutput === \"number\") {\n      return getOutputAudioNodeAtIndex(createIndexSizeError2, outputAudioNodes, destinationOrOutput).disconnect();\n    }\n    if (isNativeAudioNode$1(destinationOrOutput)) {\n      if (output === void 0) {\n        return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n      }\n      if (input === void 0) {\n        return getOutputAudioNodeAtIndex(createIndexSizeError2, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n      }\n      return getOutputAudioNodeAtIndex(createIndexSizeError2, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n    }\n    if (output === void 0) {\n      return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n    }\n    return getOutputAudioNodeAtIndex(createIndexSizeError2, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n  };\n};\nconst DEFAULT_OPTIONS$9 = {\n  attack: 3e-3,\n  channelCount: 2,\n  channelCountMode: \"clamped-max\",\n  channelInterpretation: \"speakers\",\n  knee: 30,\n  ratio: 12,\n  release: 0.25,\n  threshold: -24\n};\nconst createDynamicsCompressorNodeConstructor = (audioNodeConstructor2, createAudioParam2, createDynamicsCompressorNodeRenderer2, createNativeDynamicsCompressorNode2, createNotSupportedError2, getNativeContext2, isNativeOfflineAudioContext2, setAudioNodeTailTime2) => {\n  return class DynamicsCompressorNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$9, ...options };\n      const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const dynamicsCompressorNodeRenderer = isOffline ? createDynamicsCompressorNodeRenderer2() : null;\n      super(context2, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n      this._attack = createAudioParam2(this, isOffline, nativeDynamicsCompressorNode.attack);\n      this._knee = createAudioParam2(this, isOffline, nativeDynamicsCompressorNode.knee);\n      this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n      this._ratio = createAudioParam2(this, isOffline, nativeDynamicsCompressorNode.ratio);\n      this._release = createAudioParam2(this, isOffline, nativeDynamicsCompressorNode.release);\n      this._threshold = createAudioParam2(this, isOffline, nativeDynamicsCompressorNode.threshold);\n      setAudioNodeTailTime2(this, 6e-3);\n    }\n    get attack() {\n      return this._attack;\n    }\n    get channelCount() {\n      return this._nativeDynamicsCompressorNode.channelCount;\n    }\n    set channelCount(value) {\n      const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n      this._nativeDynamicsCompressorNode.channelCount = value;\n      if (value > 2) {\n        this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n        throw createNotSupportedError2();\n      }\n    }\n    get channelCountMode() {\n      return this._nativeDynamicsCompressorNode.channelCountMode;\n    }\n    set channelCountMode(value) {\n      const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n      this._nativeDynamicsCompressorNode.channelCountMode = value;\n      if (value === \"max\") {\n        this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n        throw createNotSupportedError2();\n      }\n    }\n    get knee() {\n      return this._knee;\n    }\n    get ratio() {\n      return this._ratio;\n    }\n    get reduction() {\n      if (typeof this._nativeDynamicsCompressorNode.reduction.value === \"number\") {\n        return this._nativeDynamicsCompressorNode.reduction.value;\n      }\n      return this._nativeDynamicsCompressorNode.reduction;\n    }\n    get release() {\n      return this._release;\n    }\n    get threshold() {\n      return this._threshold;\n    }\n  };\n};\nconst createDynamicsCompressorNodeRendererFactory = (connectAudioParam2, createNativeDynamicsCompressorNode2, getNativeAudioNode2, renderAutomation2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeDynamicsCompressorNodes = /* @__PURE__ */ new WeakMap();\n    const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeDynamicsCompressorNode = getNativeAudioNode2(proxy);\n      const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n      if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n        const options = {\n          attack: nativeDynamicsCompressorNode.attack.value,\n          channelCount: nativeDynamicsCompressorNode.channelCount,\n          channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n          channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n          knee: nativeDynamicsCompressorNode.knee.value,\n          ratio: nativeDynamicsCompressorNode.ratio.value,\n          release: nativeDynamicsCompressorNode.release.value,\n          threshold: nativeDynamicsCompressorNode.threshold.value\n        };\n        nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n      if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n        await renderAutomation2(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n      } else {\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n      }\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n      return nativeDynamicsCompressorNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeDynamicsCompressorNode !== void 0) {\n          return Promise.resolve(renderedNativeDynamicsCompressorNode);\n        }\n        return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createEncodingError = () => new DOMException(\"\", \"EncodingError\");\nconst createEvaluateSource = (window2) => {\n  return (source) => new Promise((resolve, reject) => {\n    if (window2 === null) {\n      reject(new SyntaxError());\n      return;\n    }\n    const head = window2.document.head;\n    if (head === null) {\n      reject(new SyntaxError());\n    } else {\n      const script = window2.document.createElement(\"script\");\n      const blob = new Blob([source], { type: \"application/javascript\" });\n      const url = URL.createObjectURL(blob);\n      const originalOnErrorHandler = window2.onerror;\n      const removeErrorEventListenerAndRevokeUrl = () => {\n        window2.onerror = originalOnErrorHandler;\n        URL.revokeObjectURL(url);\n      };\n      window2.onerror = (message, src, lineno, colno, error) => {\n        if (src === url || src === window2.location.href && lineno === 1 && colno === 1) {\n          removeErrorEventListenerAndRevokeUrl();\n          reject(error);\n          return false;\n        }\n        if (originalOnErrorHandler !== null) {\n          return originalOnErrorHandler(message, src, lineno, colno, error);\n        }\n      };\n      script.onerror = () => {\n        removeErrorEventListenerAndRevokeUrl();\n        reject(new SyntaxError());\n      };\n      script.onload = () => {\n        removeErrorEventListenerAndRevokeUrl();\n        resolve();\n      };\n      script.src = url;\n      script.type = \"module\";\n      head.appendChild(script);\n    }\n  });\n};\nconst createEventTargetConstructor = (wrapEventListener2) => {\n  return class EventTarget {\n    constructor(_nativeEventTarget) {\n      this._nativeEventTarget = _nativeEventTarget;\n      this._listeners = /* @__PURE__ */ new WeakMap();\n    }\n    addEventListener(type, listener, options) {\n      if (listener !== null) {\n        let wrappedEventListener = this._listeners.get(listener);\n        if (wrappedEventListener === void 0) {\n          wrappedEventListener = wrapEventListener2(this, listener);\n          if (typeof listener === \"function\") {\n            this._listeners.set(listener, wrappedEventListener);\n          }\n        }\n        this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n      }\n    }\n    dispatchEvent(event) {\n      return this._nativeEventTarget.dispatchEvent(event);\n    }\n    removeEventListener(type, listener, options) {\n      const wrappedEventListener = listener === null ? void 0 : this._listeners.get(listener);\n      this._nativeEventTarget.removeEventListener(type, wrappedEventListener === void 0 ? null : wrappedEventListener, options);\n    }\n  };\n};\nconst createExposeCurrentFrameAndCurrentTime = (window2) => {\n  return (currentTime, sampleRate, fn) => {\n    Object.defineProperties(window2, {\n      currentFrame: {\n        configurable: true,\n        get() {\n          return Math.round(currentTime * sampleRate);\n        }\n      },\n      currentTime: {\n        configurable: true,\n        get() {\n          return currentTime;\n        }\n      }\n    });\n    try {\n      return fn();\n    } finally {\n      if (window2 !== null) {\n        delete window2.currentFrame;\n        delete window2.currentTime;\n      }\n    }\n  };\n};\nconst createFetchSource = (createAbortError2) => {\n  return async (url) => {\n    try {\n      const response = await fetch(url);\n      if (response.ok) {\n        return [await response.text(), response.url];\n      }\n    } catch {\n    }\n    throw createAbortError2();\n  };\n};\nconst DEFAULT_OPTIONS$8 = {\n  channelCount: 2,\n  channelCountMode: \"max\",\n  channelInterpretation: \"speakers\",\n  gain: 1\n};\nconst createGainNodeConstructor = (audioNodeConstructor2, createAudioParam2, createGainNodeRenderer2, createNativeGainNode2, getNativeContext2, isNativeOfflineAudioContext2) => {\n  return class GainNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$8, ...options };\n      const nativeGainNode = createNativeGainNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const gainNodeRenderer = isOffline ? createGainNodeRenderer2() : null;\n      super(context2, false, nativeGainNode, gainNodeRenderer);\n      this._gain = createAudioParam2(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n    get gain() {\n      return this._gain;\n    }\n  };\n};\nconst createGainNodeRendererFactory = (connectAudioParam2, createNativeGainNode2, getNativeAudioNode2, renderAutomation2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeGainNodes = /* @__PURE__ */ new WeakMap();\n    const createGainNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeGainNode = getNativeAudioNode2(proxy);\n      const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n      if (!nativeGainNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeGainNode.channelCount,\n          channelCountMode: nativeGainNode.channelCountMode,\n          channelInterpretation: nativeGainNode.channelInterpretation,\n          gain: nativeGainNode.gain.value\n        };\n        nativeGainNode = createNativeGainNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n      if (!nativeGainNodeIsOwnedByContext) {\n        await renderAutomation2(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n      } else {\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n      }\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeGainNode);\n      return nativeGainNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeGainNode !== void 0) {\n          return Promise.resolve(renderedNativeGainNode);\n        }\n        return createGainNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore2, getValueForKey2) => {\n  return (nativeAudioWorkletNode) => getValueForKey2(activeAudioWorkletNodeInputsStore2, nativeAudioWorkletNode);\n};\nconst createGetAudioNodeRenderer = (getAudioNodeConnections2) => {\n  return (audioNode) => {\n    const audioNodeConnections = getAudioNodeConnections2(audioNode);\n    if (audioNodeConnections.renderer === null) {\n      throw new Error(\"Missing the renderer of the given AudioNode in the audio graph.\");\n    }\n    return audioNodeConnections.renderer;\n  };\n};\nconst createGetAudioNodeTailTime = (audioNodeTailTimeStore2) => {\n  return (audioNode) => {\n    var _a;\n    return (_a = audioNodeTailTimeStore2.get(audioNode)) !== null && _a !== void 0 ? _a : 0;\n  };\n};\nconst createGetAudioParamRenderer = (getAudioParamConnections2) => {\n  return (audioParam) => {\n    const audioParamConnections = getAudioParamConnections2(audioParam);\n    if (audioParamConnections.renderer === null) {\n      throw new Error(\"Missing the renderer of the given AudioParam in the audio graph.\");\n    }\n    return audioParamConnections.renderer;\n  };\n};\nconst createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore2) => {\n  return (nativeContext) => {\n    return backupOfflineAudioContextStore2.get(nativeContext);\n  };\n};\nconst createInvalidStateError = () => new DOMException(\"\", \"InvalidStateError\");\nconst createGetNativeContext = (contextStore) => {\n  return (context2) => {\n    const nativeContext = contextStore.get(context2);\n    if (nativeContext === void 0) {\n      throw createInvalidStateError();\n    }\n    return nativeContext;\n  };\n};\nconst createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore2, nativeOfflineAudioContextConstructor2) => {\n  return (nativeContext) => {\n    let backupOfflineAudioContext = backupOfflineAudioContextStore2.get(nativeContext);\n    if (backupOfflineAudioContext !== void 0) {\n      return backupOfflineAudioContext;\n    }\n    if (nativeOfflineAudioContextConstructor2 === null) {\n      throw new Error(\"Missing the native OfflineAudioContext constructor.\");\n    }\n    backupOfflineAudioContext = new nativeOfflineAudioContextConstructor2(1, 1, 44100);\n    backupOfflineAudioContextStore2.set(nativeContext, backupOfflineAudioContext);\n    return backupOfflineAudioContext;\n  };\n};\nconst createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore2) => {\n  return (nativeContext) => {\n    const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore2.get(nativeContext);\n    if (unrenderedAudioWorkletNodes === void 0) {\n      throw new Error(\"The context has no set of AudioWorkletNodes.\");\n    }\n    return unrenderedAudioWorkletNodes;\n  };\n};\nconst createInvalidAccessError = () => new DOMException(\"\", \"InvalidAccessError\");\nconst wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n  nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n    return (frequencyHz, magResponse, phaseResponse) => {\n      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n        throw createInvalidAccessError();\n      }\n      return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n    };\n  })(nativeIIRFilterNode.getFrequencyResponse);\n};\nconst DEFAULT_OPTIONS$7 = {\n  channelCount: 2,\n  channelCountMode: \"max\",\n  channelInterpretation: \"speakers\"\n};\nconst createIIRFilterNodeConstructor = (audioNodeConstructor2, createNativeIIRFilterNode2, createIIRFilterNodeRenderer2, getNativeContext2, isNativeOfflineAudioContext2, setAudioNodeTailTime2) => {\n  return class IIRFilterNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const mergedOptions = { ...DEFAULT_OPTIONS$7, ...options };\n      const nativeIIRFilterNode = createNativeIIRFilterNode2(nativeContext, isOffline ? null : context2.baseLatency, mergedOptions);\n      const iirFilterNodeRenderer = isOffline ? createIIRFilterNodeRenderer2(mergedOptions.feedback, mergedOptions.feedforward) : null;\n      super(context2, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n      wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n      this._nativeIIRFilterNode = nativeIIRFilterNode;\n      setAudioNodeTailTime2(this, 1);\n    }\n    getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n      return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n    }\n  };\n};\nconst filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n  const inputLength = input.length;\n  let i = bufferIndex;\n  for (let j = 0; j < inputLength; j += 1) {\n    let y = feedforward[0] * input[j];\n    for (let k = 1; k < minLength; k += 1) {\n      const x = i - k & bufferLength - 1;\n      y += feedforward[k] * xBuffer[x];\n      y -= feedback[k] * yBuffer[x];\n    }\n    for (let k = minLength; k < feedforwardLength; k += 1) {\n      y += feedforward[k] * xBuffer[i - k & bufferLength - 1];\n    }\n    for (let k = minLength; k < feedbackLength; k += 1) {\n      y -= feedback[k] * yBuffer[i - k & bufferLength - 1];\n    }\n    xBuffer[i] = input[j];\n    yBuffer[i] = y;\n    i = i + 1 & bufferLength - 1;\n    output[j] = y;\n  }\n  return i;\n};\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n  const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n  const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n  const feedbackLength = convertedFeedback.length;\n  const feedforwardLength = convertedFeedforward.length;\n  const minLength = Math.min(feedbackLength, feedforwardLength);\n  if (convertedFeedback[0] !== 1) {\n    for (let i = 0; i < feedbackLength; i += 1) {\n      convertedFeedforward[i] /= convertedFeedback[0];\n    }\n    for (let i = 1; i < feedforwardLength; i += 1) {\n      convertedFeedback[i] /= convertedFeedback[0];\n    }\n  }\n  const bufferLength = 32;\n  const xBuffer = new Float32Array(bufferLength);\n  const yBuffer = new Float32Array(bufferLength);\n  const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n  const numberOfChannels = renderedBuffer.numberOfChannels;\n  for (let i = 0; i < numberOfChannels; i += 1) {\n    const input = renderedBuffer.getChannelData(i);\n    const output = filteredBuffer.getChannelData(i);\n    xBuffer.fill(0);\n    yBuffer.fill(0);\n    filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n  }\n  return filteredBuffer;\n};\nconst createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode2, getNativeAudioNode2, nativeOfflineAudioContextConstructor2, renderInputsOfAudioNode2, renderNativeOfflineAudioContext2) => {\n  return (feedback, feedforward) => {\n    const renderedNativeAudioNodes = /* @__PURE__ */ new WeakMap();\n    let filteredBufferPromise = null;\n    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeAudioBufferSourceNode = null;\n      let nativeIIRFilterNode = getNativeAudioNode2(proxy);\n      const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n      if (nativeOfflineAudioContext.createIIRFilter === void 0) {\n        nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode2(nativeOfflineAudioContext, {\n          buffer: null,\n          channelCount: 2,\n          channelCountMode: \"max\",\n          channelInterpretation: \"speakers\",\n          loop: false,\n          loopEnd: 0,\n          loopStart: 0,\n          playbackRate: 1\n        });\n      } else if (!nativeIIRFilterNodeIsOwnedByContext) {\n        nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n      }\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n      if (nativeAudioBufferSourceNode !== null) {\n        if (filteredBufferPromise === null) {\n          if (nativeOfflineAudioContextConstructor2 === null) {\n            throw new Error(\"Missing the native OfflineAudioContext constructor.\");\n          }\n          const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor2(proxy.context.destination.channelCount, proxy.context.length, nativeOfflineAudioContext.sampleRate);\n          filteredBufferPromise = (async () => {\n            await renderInputsOfAudioNode2(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n            const renderedBuffer = await renderNativeOfflineAudioContext2(partialOfflineAudioContext);\n            return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n          })();\n        }\n        const filteredBuffer = await filteredBufferPromise;\n        nativeAudioBufferSourceNode.buffer = filteredBuffer;\n        nativeAudioBufferSourceNode.start(0);\n        return nativeAudioBufferSourceNode;\n      }\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n      return nativeIIRFilterNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeAudioNode !== void 0) {\n          return Promise.resolve(renderedNativeAudioNode);\n        }\n        return createAudioNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode2, getAudioNodeConnections2, getNativeAudioNode2, getNativeAudioParam2, isActiveAudioNode2) => {\n  return (isOffline) => {\n    return (audioNode, count) => {\n      const cycleCounter = cycleCounters.get(audioNode);\n      if (cycleCounter === void 0) {\n        if (!isOffline && isActiveAudioNode2(audioNode)) {\n          const nativeSourceAudioNode = getNativeAudioNode2(audioNode);\n          const { outputs } = getAudioNodeConnections2(audioNode);\n          for (const output of outputs) {\n            if (isAudioNodeOutputConnection(output)) {\n              const nativeDestinationAudioNode = getNativeAudioNode2(output[0]);\n              disconnectNativeAudioNodeFromNativeAudioNode2(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n            } else {\n              const nativeDestinationAudioParam = getNativeAudioParam2(output[0]);\n              nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n            }\n          }\n        }\n        cycleCounters.set(audioNode, count);\n      } else {\n        cycleCounters.set(audioNode, cycleCounter + count);\n      }\n    };\n  };\n};\nconst createIsAnyAudioContext = (contextStore, isNativeAudioContext2) => {\n  return (anything) => {\n    const nativeContext = contextStore.get(anything);\n    return isNativeAudioContext2(nativeContext) || isNativeAudioContext2(anything);\n  };\n};\nconst createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode2) => {\n  return (anything) => audioNodeStore.has(anything) || isNativeAudioNode2(anything);\n};\nconst createIsAnyAudioParam = (audioParamStore, isNativeAudioParam2) => {\n  return (anything) => audioParamStore.has(anything) || isNativeAudioParam2(anything);\n};\nconst createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext2) => {\n  return (anything) => {\n    const nativeContext = contextStore.get(anything);\n    return isNativeOfflineAudioContext2(nativeContext) || isNativeOfflineAudioContext2(anything);\n  };\n};\nconst createIsNativeAudioContext = (nativeAudioContextConstructor2) => {\n  return (anything) => {\n    return nativeAudioContextConstructor2 !== null && anything instanceof nativeAudioContextConstructor2;\n  };\n};\nconst createIsNativeAudioNode = (window2) => {\n  return (anything) => {\n    return window2 !== null && typeof window2.AudioNode === \"function\" && anything instanceof window2.AudioNode;\n  };\n};\nconst createIsNativeAudioParam = (window2) => {\n  return (anything) => {\n    return window2 !== null && typeof window2.AudioParam === \"function\" && anything instanceof window2.AudioParam;\n  };\n};\nconst createIsNativeContext = (isNativeAudioContext2, isNativeOfflineAudioContext2) => {\n  return (anything) => {\n    return isNativeAudioContext2(anything) || isNativeOfflineAudioContext2(anything);\n  };\n};\nconst createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor2) => {\n  return (anything) => {\n    return nativeOfflineAudioContextConstructor2 !== null && anything instanceof nativeOfflineAudioContextConstructor2;\n  };\n};\nconst createIsSecureContext = (window2) => window2 !== null && window2.isSecureContext;\nconst createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor2, createNativeMediaElementAudioSourceNode2, getNativeContext2, isNativeOfflineAudioContext2) => {\n  return class MediaElementAudioSourceNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode2(nativeContext, options);\n      if (isNativeOfflineAudioContext2(nativeContext)) {\n        throw TypeError();\n      }\n      super(context2, true, nativeMediaElementAudioSourceNode, null);\n      this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n    }\n    get mediaElement() {\n      return this._nativeMediaElementAudioSourceNode.mediaElement;\n    }\n  };\n};\nconst DEFAULT_OPTIONS$6 = {\n  channelCount: 2,\n  channelCountMode: \"explicit\",\n  channelInterpretation: \"speakers\"\n};\nconst createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor2, createNativeMediaStreamAudioDestinationNode2, getNativeContext2, isNativeOfflineAudioContext2) => {\n  return class MediaStreamAudioDestinationNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      if (isNativeOfflineAudioContext2(nativeContext)) {\n        throw new TypeError();\n      }\n      const mergedOptions = { ...DEFAULT_OPTIONS$6, ...options };\n      const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode2(nativeContext, mergedOptions);\n      super(context2, false, nativeMediaStreamAudioDestinationNode, null);\n      this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n    }\n    get stream() {\n      return this._nativeMediaStreamAudioDestinationNode.stream;\n    }\n  };\n};\nconst createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor2, createNativeMediaStreamAudioSourceNode2, getNativeContext2, isNativeOfflineAudioContext2) => {\n  return class MediaStreamAudioSourceNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode2(nativeContext, options);\n      if (isNativeOfflineAudioContext2(nativeContext)) {\n        throw new TypeError();\n      }\n      super(context2, true, nativeMediaStreamAudioSourceNode, null);\n      this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n    }\n    get mediaStream() {\n      return this._nativeMediaStreamAudioSourceNode.mediaStream;\n    }\n  };\n};\nconst createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor2, createNativeMediaStreamTrackAudioSourceNode2, getNativeContext2) => {\n  return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode2(nativeContext, options);\n      super(context2, true, nativeMediaStreamTrackAudioSourceNode, null);\n    }\n  };\n};\nconst createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor2, createAudioListener2, eventTargetConstructor2, isNativeOfflineAudioContext2, unrenderedAudioWorkletNodeStore2, wrapEventListener2) => {\n  return class MinimalBaseAudioContext extends eventTargetConstructor2 {\n    constructor(_nativeContext, numberOfChannels) {\n      super(_nativeContext);\n      this._nativeContext = _nativeContext;\n      CONTEXT_STORE.set(this, _nativeContext);\n      if (isNativeOfflineAudioContext2(_nativeContext)) {\n        unrenderedAudioWorkletNodeStore2.set(_nativeContext, /* @__PURE__ */ new Set());\n      }\n      this._destination = new audioDestinationNodeConstructor2(this, numberOfChannels);\n      this._listener = createAudioListener2(this, _nativeContext);\n      this._onstatechange = null;\n    }\n    get currentTime() {\n      return this._nativeContext.currentTime;\n    }\n    get destination() {\n      return this._destination;\n    }\n    get listener() {\n      return this._listener;\n    }\n    get onstatechange() {\n      return this._onstatechange;\n    }\n    set onstatechange(value) {\n      const wrappedListener = typeof value === \"function\" ? wrapEventListener2(this, value) : null;\n      this._nativeContext.onstatechange = wrappedListener;\n      const nativeOnStateChange = this._nativeContext.onstatechange;\n      this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n    }\n    get sampleRate() {\n      return this._nativeContext.sampleRate;\n    }\n    get state() {\n      return this._nativeContext.state;\n    }\n  };\n};\nconst testPromiseSupport = (nativeContext) => {\n  const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n  try {\n    const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n    });\n    if (promise === void 0) {\n      return false;\n    }\n    promise.catch(() => {\n    });\n    return true;\n  } catch {\n  }\n  return false;\n};\nconst createMonitorConnections = (insertElementInSet2, isNativeAudioNode2) => {\n  return (nativeAudioNode, whenConnected, whenDisconnected) => {\n    const connections = /* @__PURE__ */ new Set();\n    nativeAudioNode.connect = ((connect2) => {\n      return (destination, output = 0, input = 0) => {\n        const wasDisconnected = connections.size === 0;\n        if (isNativeAudioNode2(destination)) {\n          connect2.call(nativeAudioNode, destination, output, input);\n          insertElementInSet2(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n          if (wasDisconnected) {\n            whenConnected();\n          }\n          return destination;\n        }\n        connect2.call(nativeAudioNode, destination, output);\n        insertElementInSet2(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n        if (wasDisconnected) {\n          whenConnected();\n        }\n        return;\n      };\n    })(nativeAudioNode.connect);\n    nativeAudioNode.disconnect = ((disconnect2) => {\n      return (destinationOrOutput, output, input) => {\n        const wasConnected = connections.size > 0;\n        if (destinationOrOutput === void 0) {\n          disconnect2.apply(nativeAudioNode);\n          connections.clear();\n        } else if (typeof destinationOrOutput === \"number\") {\n          disconnect2.call(nativeAudioNode, destinationOrOutput);\n          for (const connection of connections) {\n            if (connection[1] === destinationOrOutput) {\n              connections.delete(connection);\n            }\n          }\n        } else {\n          if (isNativeAudioNode2(destinationOrOutput)) {\n            disconnect2.call(nativeAudioNode, destinationOrOutput, output, input);\n          } else {\n            disconnect2.call(nativeAudioNode, destinationOrOutput, output);\n          }\n          for (const connection of connections) {\n            if (connection[0] === destinationOrOutput && (output === void 0 || connection[1] === output) && (input === void 0 || connection[2] === input)) {\n              connections.delete(connection);\n            }\n          }\n        }\n        const isDisconnected = connections.size === 0;\n        if (wasConnected && isDisconnected) {\n          whenDisconnected();\n        }\n      };\n    })(nativeAudioNode.disconnect);\n    return nativeAudioNode;\n  };\n};\nconst assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n  const value = options[option];\n  if (value !== void 0 && value !== nativeAudioNode[option]) {\n    nativeAudioNode[option] = value;\n  }\n};\nconst assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n  assignNativeAudioNodeOption(nativeAudioNode, options, \"channelCount\");\n  assignNativeAudioNodeOption(nativeAudioNode, options, \"channelCountMode\");\n  assignNativeAudioNodeOption(nativeAudioNode, options, \"channelInterpretation\");\n};\nconst testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n  return typeof nativeAnalyserNode.getFloatTimeDomainData === \"function\";\n};\nconst wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n  nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n    const byteTimeDomainData = new Uint8Array(array.length);\n    nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n    const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n    for (let i = 0; i < length; i += 1) {\n      array[i] = (byteTimeDomainData[i] - 128) * 78125e-7;\n    }\n    return array;\n  };\n};\nconst createNativeAnalyserNodeFactory = (cacheTestResult2, createIndexSizeError2) => {\n  return (nativeContext, options) => {\n    const nativeAnalyserNode = nativeContext.createAnalyser();\n    assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n    if (!(options.maxDecibels > options.minDecibels)) {\n      throw createIndexSizeError2();\n    }\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, \"fftSize\");\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, \"maxDecibels\");\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, \"minDecibels\");\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, \"smoothingTimeConstant\");\n    if (!cacheTestResult2(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n      wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n    }\n    return nativeAnalyserNode;\n  };\n};\nconst createNativeAudioBufferConstructor = (window2) => {\n  if (window2 === null) {\n    return null;\n  }\n  if (window2.hasOwnProperty(\"AudioBuffer\")) {\n    return window2.AudioBuffer;\n  }\n  return null;\n};\nconst assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n  const value = options[audioParam];\n  if (value !== void 0 && value !== nativeAudioNode[audioParam].value) {\n    nativeAudioNode[audioParam].value = value;\n  }\n};\nconst wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n  nativeAudioBufferSourceNode.start = ((start2) => {\n    let isScheduled = false;\n    return (when = 0, offset = 0, duration) => {\n      if (isScheduled) {\n        throw createInvalidStateError();\n      }\n      start2.call(nativeAudioBufferSourceNode, when, offset, duration);\n      isScheduled = true;\n    };\n  })(nativeAudioBufferSourceNode.start);\n};\nconst wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n  nativeAudioScheduledSourceNode.start = ((start2) => {\n    return (when = 0, offset = 0, duration) => {\n      if (typeof duration === \"number\" && duration < 0 || offset < 0 || when < 0) {\n        throw new RangeError(\"The parameters can't be negative.\");\n      }\n      start2.call(nativeAudioScheduledSourceNode, when, offset, duration);\n    };\n  })(nativeAudioScheduledSourceNode.start);\n};\nconst wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n  nativeAudioScheduledSourceNode.stop = ((stop) => {\n    return (when = 0) => {\n      if (when < 0) {\n        throw new RangeError(\"The parameter can't be negative.\");\n      }\n      stop.call(nativeAudioScheduledSourceNode, when);\n    };\n  })(nativeAudioScheduledSourceNode.stop);\n};\nconst createNativeAudioBufferSourceNodeFactory = (addSilentConnection2, cacheTestResult2, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport2, testAudioBufferSourceNodeStartMethodOffsetClampingSupport2, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport2, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport2, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport2, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport2, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls2) => {\n  return (nativeContext, options) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, \"playbackRate\");\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, \"buffer\");\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, \"loop\");\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, \"loopEnd\");\n    assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, \"loopStart\");\n    if (!cacheTestResult2(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport2, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport2(nativeContext))) {\n      wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n    }\n    if (!cacheTestResult2(testAudioBufferSourceNodeStartMethodOffsetClampingSupport2, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport2(nativeContext))) {\n      wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n    }\n    if (!cacheTestResult2(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport2, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport2(nativeContext))) {\n      wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n    }\n    if (!cacheTestResult2(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport2, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport2(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n    }\n    if (!cacheTestResult2(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport2, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport2(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls2(nativeAudioBufferSourceNode, nativeContext);\n    }\n    if (!cacheTestResult2(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport2, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport2(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n    }\n    addSilentConnection2(nativeContext, nativeAudioBufferSourceNode);\n    return nativeAudioBufferSourceNode;\n  };\n};\nconst createNativeAudioContextConstructor = (window2) => {\n  if (window2 === null) {\n    return null;\n  }\n  if (window2.hasOwnProperty(\"AudioContext\")) {\n    return window2.AudioContext;\n  }\n  return window2.hasOwnProperty(\"webkitAudioContext\") ? window2.webkitAudioContext : null;\n};\nconst createNativeAudioDestinationNodeFactory = (createNativeGainNode2, overwriteAccessors2) => {\n  return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n    const nativeAudioDestinationNode = nativeContext.destination;\n    if (nativeAudioDestinationNode.channelCount !== channelCount) {\n      try {\n        nativeAudioDestinationNode.channelCount = channelCount;\n      } catch {\n      }\n    }\n    if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== \"explicit\") {\n      nativeAudioDestinationNode.channelCountMode = \"explicit\";\n    }\n    if (nativeAudioDestinationNode.maxChannelCount === 0) {\n      Object.defineProperty(nativeAudioDestinationNode, \"maxChannelCount\", {\n        value: channelCount\n      });\n    }\n    const gainNode = createNativeGainNode2(nativeContext, {\n      channelCount,\n      channelCountMode: nativeAudioDestinationNode.channelCountMode,\n      channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n      gain: 1\n    });\n    overwriteAccessors2(gainNode, \"channelCount\", (get) => () => get.call(gainNode), (set) => (value) => {\n      set.call(gainNode, value);\n      try {\n        nativeAudioDestinationNode.channelCount = value;\n      } catch (err) {\n        if (value > nativeAudioDestinationNode.maxChannelCount) {\n          throw err;\n        }\n      }\n    });\n    overwriteAccessors2(gainNode, \"channelCountMode\", (get) => () => get.call(gainNode), (set) => (value) => {\n      set.call(gainNode, value);\n      nativeAudioDestinationNode.channelCountMode = value;\n    });\n    overwriteAccessors2(gainNode, \"channelInterpretation\", (get) => () => get.call(gainNode), (set) => (value) => {\n      set.call(gainNode, value);\n      nativeAudioDestinationNode.channelInterpretation = value;\n    });\n    Object.defineProperty(gainNode, \"maxChannelCount\", {\n      get: () => nativeAudioDestinationNode.maxChannelCount\n    });\n    gainNode.connect(nativeAudioDestinationNode);\n    return gainNode;\n  };\n};\nconst createNativeAudioWorkletNodeConstructor = (window2) => {\n  if (window2 === null) {\n    return null;\n  }\n  return window2.hasOwnProperty(\"AudioWorkletNode\") ? window2.AudioWorkletNode : null;\n};\nconst testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n  const { port1 } = new MessageChannel();\n  try {\n    port1.postMessage(audioWorkletNodeOptions);\n  } finally {\n    port1.close();\n  }\n};\nconst createNativeAudioWorkletNodeFactory = (createInvalidStateError2, createNativeAudioWorkletNodeFaker2, createNativeGainNode2, createNotSupportedError2, monitorConnections2) => {\n  return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor2, name, processorConstructor, options) => {\n    if (nativeAudioWorkletNodeConstructor2 !== null) {\n      try {\n        const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor2(nativeContext, name, options);\n        const patchedEventListeners = /* @__PURE__ */ new Map();\n        let onprocessorerror = null;\n        Object.defineProperties(nativeAudioWorkletNode, {\n          channelCount: {\n            get: () => options.channelCount,\n            set: () => {\n              throw createInvalidStateError2();\n            }\n          },\n          channelCountMode: {\n            get: () => \"explicit\",\n            set: () => {\n              throw createInvalidStateError2();\n            }\n          },\n          onprocessorerror: {\n            get: () => onprocessorerror,\n            set: (value) => {\n              if (typeof onprocessorerror === \"function\") {\n                nativeAudioWorkletNode.removeEventListener(\"processorerror\", onprocessorerror);\n              }\n              onprocessorerror = typeof value === \"function\" ? value : null;\n              if (typeof onprocessorerror === \"function\") {\n                nativeAudioWorkletNode.addEventListener(\"processorerror\", onprocessorerror);\n              }\n            }\n          }\n        });\n        nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n          return (...args) => {\n            if (args[0] === \"processorerror\") {\n              const unpatchedEventListener = typeof args[1] === \"function\" ? args[1] : typeof args[1] === \"object\" && args[1] !== null && typeof args[1].handleEvent === \"function\" ? args[1].handleEvent : null;\n              if (unpatchedEventListener !== null) {\n                const patchedEventListener = patchedEventListeners.get(args[1]);\n                if (patchedEventListener !== void 0) {\n                  args[1] = patchedEventListener;\n                } else {\n                  args[1] = (event) => {\n                    if (event.type === \"error\") {\n                      Object.defineProperties(event, {\n                        type: { value: \"processorerror\" }\n                      });\n                      unpatchedEventListener(event);\n                    } else {\n                      unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                    }\n                  };\n                  patchedEventListeners.set(unpatchedEventListener, args[1]);\n                }\n              }\n            }\n            addEventListener.call(nativeAudioWorkletNode, \"error\", args[1], args[2]);\n            return addEventListener.call(nativeAudioWorkletNode, ...args);\n          };\n        })(nativeAudioWorkletNode.addEventListener);\n        nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n          return (...args) => {\n            if (args[0] === \"processorerror\") {\n              const patchedEventListener = patchedEventListeners.get(args[1]);\n              if (patchedEventListener !== void 0) {\n                patchedEventListeners.delete(args[1]);\n                args[1] = patchedEventListener;\n              }\n            }\n            removeEventListener.call(nativeAudioWorkletNode, \"error\", args[1], args[2]);\n            return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n          };\n        })(nativeAudioWorkletNode.removeEventListener);\n        if (options.numberOfOutputs !== 0) {\n          const nativeGainNode = createNativeGainNode2(nativeContext, {\n            channelCount: 1,\n            channelCountMode: \"explicit\",\n            channelInterpretation: \"discrete\",\n            gain: 0\n          });\n          nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n          const whenConnected = () => nativeGainNode.disconnect();\n          const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n          return monitorConnections2(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n        }\n        return nativeAudioWorkletNode;\n      } catch (err) {\n        if (err.code === 11) {\n          throw createNotSupportedError2();\n        }\n        throw err;\n      }\n    }\n    if (processorConstructor === void 0) {\n      throw createNotSupportedError2();\n    }\n    testClonabilityOfAudioWorkletNodeOptions(options);\n    return createNativeAudioWorkletNodeFaker2(nativeContext, baseLatency, processorConstructor, options);\n  };\n};\nconst computeBufferSize = (baseLatency, sampleRate) => {\n  if (baseLatency === null) {\n    return 512;\n  }\n  return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\nconst cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n  return new Promise((resolve, reject) => {\n    const { port1, port2 } = new MessageChannel();\n    port1.onmessage = ({ data }) => {\n      port1.close();\n      port2.close();\n      resolve(data);\n    };\n    port1.onmessageerror = ({ data }) => {\n      port1.close();\n      port2.close();\n      reject(data);\n    };\n    port2.postMessage(audioWorkletNodeOptions);\n  });\n};\nconst createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n  const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n  return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\nconst createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n  let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n  if (nodeToProcessorMap === void 0) {\n    nodeToProcessorMap = /* @__PURE__ */ new WeakMap();\n    NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n  }\n  const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n  nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n  return audioWorkletProcessorPromise;\n};\nconst createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs2, createIndexSizeError2, createInvalidStateError2, createNativeChannelMergerNode2, createNativeChannelSplitterNode2, createNativeConstantSourceNode2, createNativeGainNode2, createNativeScriptProcessorNode2, createNotSupportedError2, disconnectMultipleOutputs2, exposeCurrentFrameAndCurrentTime2, getActiveAudioWorkletNodeInputs2, monitorConnections2) => {\n  return (nativeContext, baseLatency, processorConstructor, options) => {\n    if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n      throw createNotSupportedError2();\n    }\n    const outputChannelCount = Array.isArray(options.outputChannelCount) ? options.outputChannelCount : Array.from(options.outputChannelCount);\n    if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n      throw createNotSupportedError2();\n    }\n    if (outputChannelCount.length !== options.numberOfOutputs) {\n      throw createIndexSizeError2();\n    }\n    if (options.channelCountMode !== \"explicit\") {\n      throw createNotSupportedError2();\n    }\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const numberOfParameters = processorConstructor.parameterDescriptors === void 0 ? 0 : processorConstructor.parameterDescriptors.length;\n    if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n      throw createNotSupportedError2();\n    }\n    const messageChannel = new MessageChannel();\n    const gainNodes = [];\n    const inputChannelSplitterNodes = [];\n    for (let i = 0; i < options.numberOfInputs; i += 1) {\n      gainNodes.push(createNativeGainNode2(nativeContext, {\n        channelCount: options.channelCount,\n        channelCountMode: options.channelCountMode,\n        channelInterpretation: options.channelInterpretation,\n        gain: 1\n      }));\n      inputChannelSplitterNodes.push(createNativeChannelSplitterNode2(nativeContext, {\n        channelCount: options.channelCount,\n        channelCountMode: \"explicit\",\n        channelInterpretation: \"discrete\",\n        numberOfOutputs: options.channelCount\n      }));\n    }\n    const constantSourceNodes = [];\n    if (processorConstructor.parameterDescriptors !== void 0) {\n      for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n        const constantSourceNode = createNativeConstantSourceNode2(nativeContext, {\n          channelCount: 1,\n          channelCountMode: \"explicit\",\n          channelInterpretation: \"discrete\",\n          offset: options.parameterData[name] !== void 0 ? options.parameterData[name] : defaultValue === void 0 ? 0 : defaultValue\n        });\n        Object.defineProperties(constantSourceNode.offset, {\n          defaultValue: {\n            get: () => defaultValue === void 0 ? 0 : defaultValue\n          },\n          maxValue: {\n            get: () => maxValue === void 0 ? MOST_POSITIVE_SINGLE_FLOAT : maxValue\n          },\n          minValue: {\n            get: () => minValue === void 0 ? MOST_NEGATIVE_SINGLE_FLOAT : minValue\n          }\n        });\n        constantSourceNodes.push(constantSourceNode);\n      }\n    }\n    const inputChannelMergerNode = createNativeChannelMergerNode2(nativeContext, {\n      channelCount: 1,\n      channelCountMode: \"explicit\",\n      channelInterpretation: \"speakers\",\n      numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n    });\n    const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n    const scriptProcessorNode = createNativeScriptProcessorNode2(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, Math.max(1, numberOfOutputChannels));\n    const outputChannelSplitterNode = createNativeChannelSplitterNode2(nativeContext, {\n      channelCount: Math.max(1, numberOfOutputChannels),\n      channelCountMode: \"explicit\",\n      channelInterpretation: \"discrete\",\n      numberOfOutputs: Math.max(1, numberOfOutputChannels)\n    });\n    const outputChannelMergerNodes = [];\n    for (let i = 0; i < options.numberOfOutputs; i += 1) {\n      outputChannelMergerNodes.push(createNativeChannelMergerNode2(nativeContext, {\n        channelCount: 1,\n        channelCountMode: \"explicit\",\n        channelInterpretation: \"speakers\",\n        numberOfInputs: outputChannelCount[i]\n      }));\n    }\n    for (let i = 0; i < options.numberOfInputs; i += 1) {\n      gainNodes[i].connect(inputChannelSplitterNodes[i]);\n      for (let j = 0; j < options.channelCount; j += 1) {\n        inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n      }\n    }\n    const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === void 0 ? [] : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n      const constantSourceNode = constantSourceNodes[index];\n      constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n      constantSourceNode.start(0);\n      return [name, constantSourceNode.offset];\n    }));\n    inputChannelMergerNode.connect(scriptProcessorNode);\n    let channelInterpretation = options.channelInterpretation;\n    let onprocessorerror = null;\n    const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n    const nativeAudioWorkletNodeFaker = {\n      get bufferSize() {\n        return bufferSize;\n      },\n      get channelCount() {\n        return options.channelCount;\n      },\n      set channelCount(_) {\n        throw createInvalidStateError2();\n      },\n      get channelCountMode() {\n        return options.channelCountMode;\n      },\n      set channelCountMode(_) {\n        throw createInvalidStateError2();\n      },\n      get channelInterpretation() {\n        return channelInterpretation;\n      },\n      set channelInterpretation(value) {\n        for (const gainNode of gainNodes) {\n          gainNode.channelInterpretation = value;\n        }\n        channelInterpretation = value;\n      },\n      get context() {\n        return scriptProcessorNode.context;\n      },\n      get inputs() {\n        return gainNodes;\n      },\n      get numberOfInputs() {\n        return options.numberOfInputs;\n      },\n      get numberOfOutputs() {\n        return options.numberOfOutputs;\n      },\n      get onprocessorerror() {\n        return onprocessorerror;\n      },\n      set onprocessorerror(value) {\n        if (typeof onprocessorerror === \"function\") {\n          nativeAudioWorkletNodeFaker.removeEventListener(\"processorerror\", onprocessorerror);\n        }\n        onprocessorerror = typeof value === \"function\" ? value : null;\n        if (typeof onprocessorerror === \"function\") {\n          nativeAudioWorkletNodeFaker.addEventListener(\"processorerror\", onprocessorerror);\n        }\n      },\n      get parameters() {\n        return parameterMap;\n      },\n      get port() {\n        return messageChannel.port2;\n      },\n      addEventListener(...args) {\n        return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n      },\n      connect: connectMultipleOutputs2.bind(null, outputAudioNodes),\n      disconnect: disconnectMultipleOutputs2.bind(null, outputAudioNodes),\n      dispatchEvent(...args) {\n        return scriptProcessorNode.dispatchEvent(args[0]);\n      },\n      removeEventListener(...args) {\n        return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n      }\n    };\n    const patchedEventListeners = /* @__PURE__ */ new Map();\n    messageChannel.port1.addEventListener = ((addEventListener) => {\n      return (...args) => {\n        if (args[0] === \"message\") {\n          const unpatchedEventListener = typeof args[1] === \"function\" ? args[1] : typeof args[1] === \"object\" && args[1] !== null && typeof args[1].handleEvent === \"function\" ? args[1].handleEvent : null;\n          if (unpatchedEventListener !== null) {\n            const patchedEventListener = patchedEventListeners.get(args[1]);\n            if (patchedEventListener !== void 0) {\n              args[1] = patchedEventListener;\n            } else {\n              args[1] = (event) => {\n                exposeCurrentFrameAndCurrentTime2(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n              };\n              patchedEventListeners.set(unpatchedEventListener, args[1]);\n            }\n          }\n        }\n        return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n      };\n    })(messageChannel.port1.addEventListener);\n    messageChannel.port1.removeEventListener = ((removeEventListener) => {\n      return (...args) => {\n        if (args[0] === \"message\") {\n          const patchedEventListener = patchedEventListeners.get(args[1]);\n          if (patchedEventListener !== void 0) {\n            patchedEventListeners.delete(args[1]);\n            args[1] = patchedEventListener;\n          }\n        }\n        return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n      };\n    })(messageChannel.port1.removeEventListener);\n    let onmessage = null;\n    Object.defineProperty(messageChannel.port1, \"onmessage\", {\n      get: () => onmessage,\n      set: (value) => {\n        if (typeof onmessage === \"function\") {\n          messageChannel.port1.removeEventListener(\"message\", onmessage);\n        }\n        onmessage = typeof value === \"function\" ? value : null;\n        if (typeof onmessage === \"function\") {\n          messageChannel.port1.addEventListener(\"message\", onmessage);\n          messageChannel.port1.start();\n        }\n      }\n    });\n    processorConstructor.prototype.port = messageChannel.port1;\n    let audioWorkletProcessor = null;\n    const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n    audioWorkletProcessorPromise.then((dWrkltPrcssr) => audioWorkletProcessor = dWrkltPrcssr);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = processorConstructor.parameterDescriptors === void 0 ? [] : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    let isActive = true;\n    const disconnectOutputsGraph = () => {\n      if (options.numberOfOutputs > 0) {\n        scriptProcessorNode.disconnect(outputChannelSplitterNode);\n      }\n      for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n        const outputChannelMergerNode = outputChannelMergerNodes[i];\n        for (let j = 0; j < outputChannelCount[i]; j += 1) {\n          outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n        }\n        outputChannelSplitterNodeOutput += outputChannelCount[i];\n      }\n    };\n    const activeInputIndexes = /* @__PURE__ */ new Map();\n    scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n      if (audioWorkletProcessor !== null) {\n        const activeInputs = getActiveAudioWorkletNodeInputs2(nativeAudioWorkletNodeFaker);\n        for (let i = 0; i < bufferSize; i += 128) {\n          for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.channelCount; k += 1) {\n              copyFromChannel(inputBuffer, inputs[j], k, k, i);\n            }\n          }\n          if (processorConstructor.parameterDescriptors !== void 0) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n              copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n          }\n          for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n              if (outputs[j][k].byteLength === 0) {\n                outputs[j][k] = new Float32Array(128);\n              }\n            }\n          }\n          try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n              const activeInput = activeInputs[index];\n              if (activeInput.size > 0) {\n                activeInputIndexes.set(index, bufferSize / 128);\n                return input;\n              }\n              const count = activeInputIndexes.get(index);\n              if (count === void 0) {\n                return [];\n              }\n              if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                if (count === 1) {\n                  activeInputIndexes.delete(index);\n                } else {\n                  activeInputIndexes.set(index, count - 1);\n                }\n              }\n              return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime2(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            isActive = activeSourceFlag;\n            for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n              for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n              }\n              outputChannelSplitterNodeOutput += outputChannelCount[j];\n            }\n          } catch (error) {\n            isActive = false;\n            nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent(\"processorerror\", {\n              colno: error.colno,\n              filename: error.filename,\n              lineno: error.lineno,\n              message: error.message\n            }));\n          }\n          if (!isActive) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n              gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n              for (let k = 0; k < options.channelCount; k += 1) {\n                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n              }\n            }\n            if (processorConstructor.parameterDescriptors !== void 0) {\n              const length = processorConstructor.parameterDescriptors.length;\n              for (let j = 0; j < length; j += 1) {\n                const constantSourceNode = constantSourceNodes[j];\n                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                constantSourceNode.stop();\n              }\n            }\n            inputChannelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.onaudioprocess = null;\n            if (isConnected) {\n              disconnectOutputsGraph();\n            } else {\n              disconnectFakeGraph();\n            }\n            break;\n          }\n        }\n      }\n    };\n    let isConnected = false;\n    const nativeGainNode = createNativeGainNode2(nativeContext, {\n      channelCount: 1,\n      channelCountMode: \"explicit\",\n      channelInterpretation: \"discrete\",\n      gain: 0\n    });\n    const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n    const disconnectFakeGraph = () => {\n      scriptProcessorNode.disconnect(nativeGainNode);\n      nativeGainNode.disconnect();\n    };\n    const whenConnected = () => {\n      if (isActive) {\n        disconnectFakeGraph();\n        if (options.numberOfOutputs > 0) {\n          scriptProcessorNode.connect(outputChannelSplitterNode);\n        }\n        for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n          const outputChannelMergerNode = outputChannelMergerNodes[i];\n          for (let j = 0; j < outputChannelCount[i]; j += 1) {\n            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n          }\n          outputChannelSplitterNodeOutput += outputChannelCount[i];\n        }\n      }\n      isConnected = true;\n    };\n    const whenDisconnected = () => {\n      if (isActive) {\n        connectFakeGraph();\n        disconnectOutputsGraph();\n      }\n      isConnected = false;\n    };\n    connectFakeGraph();\n    return monitorConnections2(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n  };\n};\nconst createNativeBiquadFilterNode = (nativeContext, options) => {\n  const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n  assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, \"Q\");\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, \"detune\");\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, \"frequency\");\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, \"gain\");\n  assignNativeAudioNodeOption(nativeBiquadFilterNode, options, \"type\");\n  return nativeBiquadFilterNode;\n};\nconst createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor2, wrapChannelMergerNode2) => {\n  return (nativeContext, options) => {\n    const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n    if (nativeAudioContextConstructor2 !== null && nativeAudioContextConstructor2.name === \"webkitAudioContext\") {\n      wrapChannelMergerNode2(nativeContext, nativeChannelMergerNode);\n    }\n    assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n    return nativeChannelMergerNode;\n  };\n};\nconst wrapChannelSplitterNode = (channelSplitterNode) => {\n  const channelCount = channelSplitterNode.numberOfOutputs;\n  Object.defineProperty(channelSplitterNode, \"channelCount\", {\n    get: () => channelCount,\n    set: (value) => {\n      if (value !== channelCount) {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  Object.defineProperty(channelSplitterNode, \"channelCountMode\", {\n    get: () => \"explicit\",\n    set: (value) => {\n      if (value !== \"explicit\") {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  Object.defineProperty(channelSplitterNode, \"channelInterpretation\", {\n    get: () => \"discrete\",\n    set: (value) => {\n      if (value !== \"discrete\") {\n        throw createInvalidStateError();\n      }\n    }\n  });\n};\nconst createNativeChannelSplitterNode = (nativeContext, options) => {\n  const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n  assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n  wrapChannelSplitterNode(nativeChannelSplitterNode);\n  return nativeChannelSplitterNode;\n};\nconst createNativeConstantSourceNodeFactory = (addSilentConnection2, cacheTestResult2, createNativeConstantSourceNodeFaker2, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport2, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport2) => {\n  return (nativeContext, options) => {\n    if (nativeContext.createConstantSource === void 0) {\n      return createNativeConstantSourceNodeFaker2(nativeContext, options);\n    }\n    const nativeConstantSourceNode = nativeContext.createConstantSource();\n    assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, \"offset\");\n    if (!cacheTestResult2(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport2, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport2(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n    }\n    if (!cacheTestResult2(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport2, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport2(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n    }\n    addSilentConnection2(nativeContext, nativeConstantSourceNode);\n    return nativeConstantSourceNode;\n  };\n};\nconst interceptConnections = (original, interceptor) => {\n  original.connect = interceptor.connect.bind(interceptor);\n  original.disconnect = interceptor.disconnect.bind(interceptor);\n  return original;\n};\nconst createNativeConstantSourceNodeFakerFactory = (addSilentConnection2, createNativeAudioBufferSourceNode2, createNativeGainNode2, monitorConnections2) => {\n  return (nativeContext, { offset, ...audioNodeOptions }) => {\n    const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n    const audioBufferSourceNode = createNativeAudioBufferSourceNode2(nativeContext, {\n      buffer: null,\n      channelCount: 2,\n      channelCountMode: \"max\",\n      channelInterpretation: \"speakers\",\n      loop: false,\n      loopEnd: 0,\n      loopStart: 0,\n      playbackRate: 1\n    });\n    const gainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: offset });\n    const channelData = audioBuffer.getChannelData(0);\n    channelData[0] = 1;\n    channelData[1] = 1;\n    audioBufferSourceNode.buffer = audioBuffer;\n    audioBufferSourceNode.loop = true;\n    const nativeConstantSourceNodeFaker = {\n      get bufferSize() {\n        return void 0;\n      },\n      get channelCount() {\n        return gainNode.channelCount;\n      },\n      set channelCount(value) {\n        gainNode.channelCount = value;\n      },\n      get channelCountMode() {\n        return gainNode.channelCountMode;\n      },\n      set channelCountMode(value) {\n        gainNode.channelCountMode = value;\n      },\n      get channelInterpretation() {\n        return gainNode.channelInterpretation;\n      },\n      set channelInterpretation(value) {\n        gainNode.channelInterpretation = value;\n      },\n      get context() {\n        return gainNode.context;\n      },\n      get inputs() {\n        return [];\n      },\n      get numberOfInputs() {\n        return audioBufferSourceNode.numberOfInputs;\n      },\n      get numberOfOutputs() {\n        return gainNode.numberOfOutputs;\n      },\n      get offset() {\n        return gainNode.gain;\n      },\n      get onended() {\n        return audioBufferSourceNode.onended;\n      },\n      set onended(value) {\n        audioBufferSourceNode.onended = value;\n      },\n      addEventListener(...args) {\n        return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n      },\n      dispatchEvent(...args) {\n        return audioBufferSourceNode.dispatchEvent(args[0]);\n      },\n      removeEventListener(...args) {\n        return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n      },\n      start(when = 0) {\n        audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n      },\n      stop(when = 0) {\n        audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n      }\n    };\n    const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n    const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n    addSilentConnection2(nativeContext, audioBufferSourceNode);\n    return monitorConnections2(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n  };\n};\nconst createNativeConvolverNodeFactory = (createNotSupportedError2, overwriteAccessors2) => {\n  return (nativeContext, options) => {\n    const nativeConvolverNode = nativeContext.createConvolver();\n    assignNativeAudioNodeOptions(nativeConvolverNode, options);\n    if (options.disableNormalization === nativeConvolverNode.normalize) {\n      nativeConvolverNode.normalize = !options.disableNormalization;\n    }\n    assignNativeAudioNodeOption(nativeConvolverNode, options, \"buffer\");\n    if (options.channelCount > 2) {\n      throw createNotSupportedError2();\n    }\n    overwriteAccessors2(nativeConvolverNode, \"channelCount\", (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n      if (value > 2) {\n        throw createNotSupportedError2();\n      }\n      return set.call(nativeConvolverNode, value);\n    });\n    if (options.channelCountMode === \"max\") {\n      throw createNotSupportedError2();\n    }\n    overwriteAccessors2(nativeConvolverNode, \"channelCountMode\", (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n      if (value === \"max\") {\n        throw createNotSupportedError2();\n      }\n      return set.call(nativeConvolverNode, value);\n    });\n    return nativeConvolverNode;\n  };\n};\nconst createNativeDelayNode = (nativeContext, options) => {\n  const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n  assignNativeAudioNodeOptions(nativeDelayNode, options);\n  assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, \"delayTime\");\n  return nativeDelayNode;\n};\nconst createNativeDynamicsCompressorNodeFactory = (createNotSupportedError2) => {\n  return (nativeContext, options) => {\n    const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n    assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n    if (options.channelCount > 2) {\n      throw createNotSupportedError2();\n    }\n    if (options.channelCountMode === \"max\") {\n      throw createNotSupportedError2();\n    }\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, \"attack\");\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, \"knee\");\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, \"ratio\");\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, \"release\");\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, \"threshold\");\n    return nativeDynamicsCompressorNode;\n  };\n};\nconst createNativeGainNode = (nativeContext, options) => {\n  const nativeGainNode = nativeContext.createGain();\n  assignNativeAudioNodeOptions(nativeGainNode, options);\n  assignNativeAudioNodeAudioParamValue(nativeGainNode, options, \"gain\");\n  return nativeGainNode;\n};\nconst createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker2) => {\n  return (nativeContext, baseLatency, options) => {\n    if (nativeContext.createIIRFilter === void 0) {\n      return createNativeIIRFilterNodeFaker2(nativeContext, baseLatency, options);\n    }\n    const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n    assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n    return nativeIIRFilterNode;\n  };\n};\nfunction divide(a, b) {\n  const denominator = b[0] * b[0] + b[1] * b[1];\n  return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n  return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n  let result = [0, 0];\n  for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n    result = multiply(result, z);\n    result[0] += coefficient[i];\n  }\n  return result;\n}\nconst createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError2, createInvalidStateError2, createNativeScriptProcessorNode2, createNotSupportedError2) => {\n  return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n    const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (feedbackLength === 0 || feedbackLength > 20) {\n      throw createNotSupportedError2();\n    }\n    if (convertedFeedback[0] === 0) {\n      throw createInvalidStateError2();\n    }\n    if (feedforwardLength === 0 || feedforwardLength > 20) {\n      throw createNotSupportedError2();\n    }\n    if (convertedFeedforward[0] === 0) {\n      throw createInvalidStateError2();\n    }\n    if (convertedFeedback[0] !== 1) {\n      for (let i = 0; i < feedforwardLength; i += 1) {\n        convertedFeedforward[i] /= convertedFeedback[0];\n      }\n      for (let i = 1; i < feedbackLength; i += 1) {\n        convertedFeedback[i] /= convertedFeedback[0];\n      }\n    }\n    const scriptProcessorNode = createNativeScriptProcessorNode2(nativeContext, bufferSize, channelCount, channelCount);\n    scriptProcessorNode.channelCount = channelCount;\n    scriptProcessorNode.channelCountMode = channelCountMode;\n    scriptProcessorNode.channelInterpretation = channelInterpretation;\n    const bufferLength = 32;\n    const bufferIndexes = [];\n    const xBuffers = [];\n    const yBuffers = [];\n    for (let i = 0; i < channelCount; i += 1) {\n      bufferIndexes.push(0);\n      const xBuffer = new Float32Array(bufferLength);\n      const yBuffer = new Float32Array(bufferLength);\n      xBuffer.fill(0);\n      yBuffer.fill(0);\n      xBuffers.push(xBuffer);\n      yBuffers.push(yBuffer);\n    }\n    scriptProcessorNode.onaudioprocess = (event) => {\n      const inputBuffer = event.inputBuffer;\n      const outputBuffer = event.outputBuffer;\n      const numberOfChannels = inputBuffer.numberOfChannels;\n      for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = inputBuffer.getChannelData(i);\n        const output = outputBuffer.getChannelData(i);\n        bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n      }\n    };\n    const nyquist = nativeContext.sampleRate / 2;\n    const nativeIIRFilterNodeFaker = {\n      get bufferSize() {\n        return bufferSize;\n      },\n      get channelCount() {\n        return scriptProcessorNode.channelCount;\n      },\n      set channelCount(value) {\n        scriptProcessorNode.channelCount = value;\n      },\n      get channelCountMode() {\n        return scriptProcessorNode.channelCountMode;\n      },\n      set channelCountMode(value) {\n        scriptProcessorNode.channelCountMode = value;\n      },\n      get channelInterpretation() {\n        return scriptProcessorNode.channelInterpretation;\n      },\n      set channelInterpretation(value) {\n        scriptProcessorNode.channelInterpretation = value;\n      },\n      get context() {\n        return scriptProcessorNode.context;\n      },\n      get inputs() {\n        return [scriptProcessorNode];\n      },\n      get numberOfInputs() {\n        return scriptProcessorNode.numberOfInputs;\n      },\n      get numberOfOutputs() {\n        return scriptProcessorNode.numberOfOutputs;\n      },\n      addEventListener(...args) {\n        return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n      },\n      dispatchEvent(...args) {\n        return scriptProcessorNode.dispatchEvent(args[0]);\n      },\n      getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n        if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n          throw createInvalidAccessError2();\n        }\n        const length = frequencyHz.length;\n        for (let i = 0; i < length; i += 1) {\n          const omega = -Math.PI * (frequencyHz[i] / nyquist);\n          const z = [Math.cos(omega), Math.sin(omega)];\n          const numerator = evaluatePolynomial(convertedFeedforward, z);\n          const denominator = evaluatePolynomial(convertedFeedback, z);\n          const response = divide(numerator, denominator);\n          magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n          phaseResponse[i] = Math.atan2(response[1], response[0]);\n        }\n      },\n      removeEventListener(...args) {\n        return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n      }\n    };\n    return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n  };\n};\nconst createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n  return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\nconst createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n  const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n  assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n  if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n    Object.defineProperty(nativeMediaStreamAudioDestinationNode, \"numberOfOutputs\", { get: () => 0 });\n  }\n  return nativeMediaStreamAudioDestinationNode;\n};\nconst createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n  const audioStreamTracks = mediaStream.getAudioTracks();\n  audioStreamTracks.sort((a, b) => a.id < b.id ? -1 : a.id > b.id ? 1 : 0);\n  const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n  const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n  Object.defineProperty(nativeMediaStreamAudioSourceNode, \"mediaStream\", { value: mediaStream });\n  return nativeMediaStreamAudioSourceNode;\n};\nconst createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError2, isNativeOfflineAudioContext2) => {\n  return (nativeAudioContext, { mediaStreamTrack }) => {\n    if (typeof nativeAudioContext.createMediaStreamTrackSource === \"function\") {\n      return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n    }\n    const mediaStream = new MediaStream([mediaStreamTrack]);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n    if (mediaStreamTrack.kind !== \"audio\") {\n      throw createInvalidStateError2();\n    }\n    if (isNativeOfflineAudioContext2(nativeAudioContext)) {\n      throw new TypeError();\n    }\n    return nativeMediaStreamAudioSourceNode;\n  };\n};\nconst createNativeOfflineAudioContextConstructor = (window2) => {\n  if (window2 === null) {\n    return null;\n  }\n  if (window2.hasOwnProperty(\"OfflineAudioContext\")) {\n    return window2.OfflineAudioContext;\n  }\n  return window2.hasOwnProperty(\"webkitOfflineAudioContext\") ? window2.webkitOfflineAudioContext : null;\n};\nconst createNativeOscillatorNodeFactory = (addSilentConnection2, cacheTestResult2, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport2, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport2, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport2, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls2) => {\n  return (nativeContext, options) => {\n    const nativeOscillatorNode = nativeContext.createOscillator();\n    assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, \"detune\");\n    assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, \"frequency\");\n    if (options.periodicWave !== void 0) {\n      nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n    } else {\n      assignNativeAudioNodeOption(nativeOscillatorNode, options, \"type\");\n    }\n    if (!cacheTestResult2(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport2, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport2(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n    }\n    if (!cacheTestResult2(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport2, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport2(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls2(nativeOscillatorNode, nativeContext);\n    }\n    if (!cacheTestResult2(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport2, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport2(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n    }\n    addSilentConnection2(nativeContext, nativeOscillatorNode);\n    return nativeOscillatorNode;\n  };\n};\nconst createNativePannerNodeFactory = (createNativePannerNodeFaker2) => {\n  return (nativeContext, options) => {\n    const nativePannerNode = nativeContext.createPanner();\n    if (nativePannerNode.orientationX === void 0) {\n      return createNativePannerNodeFaker2(nativeContext, options);\n    }\n    assignNativeAudioNodeOptions(nativePannerNode, options);\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, \"orientationX\");\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, \"orientationY\");\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, \"orientationZ\");\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, \"positionX\");\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, \"positionY\");\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, \"positionZ\");\n    assignNativeAudioNodeOption(nativePannerNode, options, \"coneInnerAngle\");\n    assignNativeAudioNodeOption(nativePannerNode, options, \"coneOuterAngle\");\n    assignNativeAudioNodeOption(nativePannerNode, options, \"coneOuterGain\");\n    assignNativeAudioNodeOption(nativePannerNode, options, \"distanceModel\");\n    assignNativeAudioNodeOption(nativePannerNode, options, \"maxDistance\");\n    assignNativeAudioNodeOption(nativePannerNode, options, \"panningModel\");\n    assignNativeAudioNodeOption(nativePannerNode, options, \"refDistance\");\n    assignNativeAudioNodeOption(nativePannerNode, options, \"rolloffFactor\");\n    return nativePannerNode;\n  };\n};\nconst createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode2, createInvalidStateError2, createNativeChannelMergerNode2, createNativeGainNode2, createNativeScriptProcessorNode2, createNativeWaveShaperNode2, createNotSupportedError2, disconnectNativeAudioNodeFromNativeAudioNode2, getFirstSample2, monitorConnections2) => {\n  return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n    const pannerNode = nativeContext.createPanner();\n    if (audioNodeOptions.channelCount > 2) {\n      throw createNotSupportedError2();\n    }\n    if (audioNodeOptions.channelCountMode === \"max\") {\n      throw createNotSupportedError2();\n    }\n    assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n    const SINGLE_CHANNEL_OPTIONS = {\n      channelCount: 1,\n      channelCountMode: \"explicit\",\n      channelInterpretation: \"discrete\"\n    };\n    const channelMergerNode = createNativeChannelMergerNode2(nativeContext, {\n      ...SINGLE_CHANNEL_OPTIONS,\n      channelInterpretation: \"speakers\",\n      numberOfInputs: 6\n    });\n    const inputGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: 1 });\n    const orientationXGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n    const orientationYGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const orientationZGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const positionXGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const positionYGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const positionZGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const scriptProcessorNode = createNativeScriptProcessorNode2(nativeContext, 256, 6, 1);\n    const waveShaperNode = createNativeWaveShaperNode2(nativeContext, {\n      ...SINGLE_CHANNEL_OPTIONS,\n      curve: new Float32Array([1, 1]),\n      oversample: \"none\"\n    });\n    let lastOrientation = [orientationX, orientationY, orientationZ];\n    let lastPosition = [positionX, positionY, positionZ];\n    const buffer = new Float32Array(1);\n    scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n      const orientation = [\n        getFirstSample2(inputBuffer, buffer, 0),\n        getFirstSample2(inputBuffer, buffer, 1),\n        getFirstSample2(inputBuffer, buffer, 2)\n      ];\n      if (orientation.some((value, index) => value !== lastOrientation[index])) {\n        pannerNode.setOrientation(...orientation);\n        lastOrientation = orientation;\n      }\n      const positon = [\n        getFirstSample2(inputBuffer, buffer, 3),\n        getFirstSample2(inputBuffer, buffer, 4),\n        getFirstSample2(inputBuffer, buffer, 5)\n      ];\n      if (positon.some((value, index) => value !== lastPosition[index])) {\n        pannerNode.setPosition(...positon);\n        lastPosition = positon;\n      }\n    };\n    Object.defineProperty(orientationYGainNode.gain, \"defaultValue\", { get: () => 0 });\n    Object.defineProperty(orientationZGainNode.gain, \"defaultValue\", { get: () => 0 });\n    Object.defineProperty(positionXGainNode.gain, \"defaultValue\", { get: () => 0 });\n    Object.defineProperty(positionYGainNode.gain, \"defaultValue\", { get: () => 0 });\n    Object.defineProperty(positionZGainNode.gain, \"defaultValue\", { get: () => 0 });\n    const nativePannerNodeFaker = {\n      get bufferSize() {\n        return void 0;\n      },\n      get channelCount() {\n        return pannerNode.channelCount;\n      },\n      set channelCount(value) {\n        if (value > 2) {\n          throw createNotSupportedError2();\n        }\n        inputGainNode.channelCount = value;\n        pannerNode.channelCount = value;\n      },\n      get channelCountMode() {\n        return pannerNode.channelCountMode;\n      },\n      set channelCountMode(value) {\n        if (value === \"max\") {\n          throw createNotSupportedError2();\n        }\n        inputGainNode.channelCountMode = value;\n        pannerNode.channelCountMode = value;\n      },\n      get channelInterpretation() {\n        return pannerNode.channelInterpretation;\n      },\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n        pannerNode.channelInterpretation = value;\n      },\n      get coneInnerAngle() {\n        return pannerNode.coneInnerAngle;\n      },\n      set coneInnerAngle(value) {\n        pannerNode.coneInnerAngle = value;\n      },\n      get coneOuterAngle() {\n        return pannerNode.coneOuterAngle;\n      },\n      set coneOuterAngle(value) {\n        pannerNode.coneOuterAngle = value;\n      },\n      get coneOuterGain() {\n        return pannerNode.coneOuterGain;\n      },\n      set coneOuterGain(value) {\n        if (value < 0 || value > 1) {\n          throw createInvalidStateError2();\n        }\n        pannerNode.coneOuterGain = value;\n      },\n      get context() {\n        return pannerNode.context;\n      },\n      get distanceModel() {\n        return pannerNode.distanceModel;\n      },\n      set distanceModel(value) {\n        pannerNode.distanceModel = value;\n      },\n      get inputs() {\n        return [inputGainNode];\n      },\n      get maxDistance() {\n        return pannerNode.maxDistance;\n      },\n      set maxDistance(value) {\n        if (value < 0) {\n          throw new RangeError();\n        }\n        pannerNode.maxDistance = value;\n      },\n      get numberOfInputs() {\n        return pannerNode.numberOfInputs;\n      },\n      get numberOfOutputs() {\n        return pannerNode.numberOfOutputs;\n      },\n      get orientationX() {\n        return orientationXGainNode.gain;\n      },\n      get orientationY() {\n        return orientationYGainNode.gain;\n      },\n      get orientationZ() {\n        return orientationZGainNode.gain;\n      },\n      get panningModel() {\n        return pannerNode.panningModel;\n      },\n      set panningModel(value) {\n        pannerNode.panningModel = value;\n      },\n      get positionX() {\n        return positionXGainNode.gain;\n      },\n      get positionY() {\n        return positionYGainNode.gain;\n      },\n      get positionZ() {\n        return positionZGainNode.gain;\n      },\n      get refDistance() {\n        return pannerNode.refDistance;\n      },\n      set refDistance(value) {\n        if (value < 0) {\n          throw new RangeError();\n        }\n        pannerNode.refDistance = value;\n      },\n      get rolloffFactor() {\n        return pannerNode.rolloffFactor;\n      },\n      set rolloffFactor(value) {\n        if (value < 0) {\n          throw new RangeError();\n        }\n        pannerNode.rolloffFactor = value;\n      },\n      addEventListener(...args) {\n        return inputGainNode.addEventListener(args[0], args[1], args[2]);\n      },\n      dispatchEvent(...args) {\n        return inputGainNode.dispatchEvent(args[0]);\n      },\n      removeEventListener(...args) {\n        return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n      }\n    };\n    if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n      nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n    }\n    if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n      nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n    }\n    if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n      nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n    }\n    if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n      nativePannerNodeFaker.distanceModel = distanceModel;\n    }\n    if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n      nativePannerNodeFaker.maxDistance = maxDistance;\n    }\n    if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n      nativePannerNodeFaker.orientationX.value = orientationX;\n    }\n    if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n      nativePannerNodeFaker.orientationY.value = orientationY;\n    }\n    if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n      nativePannerNodeFaker.orientationZ.value = orientationZ;\n    }\n    if (panningModel !== nativePannerNodeFaker.panningModel) {\n      nativePannerNodeFaker.panningModel = panningModel;\n    }\n    if (positionX !== nativePannerNodeFaker.positionX.value) {\n      nativePannerNodeFaker.positionX.value = positionX;\n    }\n    if (positionY !== nativePannerNodeFaker.positionY.value) {\n      nativePannerNodeFaker.positionY.value = positionY;\n    }\n    if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n      nativePannerNodeFaker.positionZ.value = positionZ;\n    }\n    if (refDistance !== nativePannerNodeFaker.refDistance) {\n      nativePannerNodeFaker.refDistance = refDistance;\n    }\n    if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n      nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n    }\n    if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n      pannerNode.setOrientation(...lastOrientation);\n    }\n    if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n      pannerNode.setPosition(...lastPosition);\n    }\n    const whenConnected = () => {\n      inputGainNode.connect(pannerNode);\n      connectNativeAudioNodeToNativeAudioNode2(inputGainNode, waveShaperNode, 0, 0);\n      waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n      waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n      waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n      waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n      waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n      waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n      channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n    };\n    const whenDisconnected = () => {\n      inputGainNode.disconnect(pannerNode);\n      disconnectNativeAudioNodeFromNativeAudioNode2(inputGainNode, waveShaperNode, 0, 0);\n      waveShaperNode.disconnect(orientationXGainNode);\n      orientationXGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(orientationYGainNode);\n      orientationYGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(orientationZGainNode);\n      orientationZGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionXGainNode);\n      positionXGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionYGainNode);\n      positionYGainNode.disconnect(channelMergerNode);\n      waveShaperNode.disconnect(positionZGainNode);\n      positionZGainNode.disconnect(channelMergerNode);\n      channelMergerNode.disconnect(scriptProcessorNode);\n      scriptProcessorNode.disconnect(nativeContext.destination);\n    };\n    return monitorConnections2(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n  };\n};\nconst createNativePeriodicWaveFactory = (createIndexSizeError2) => {\n  return (nativeContext, { disableNormalization, imag, real }) => {\n    const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n    const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n    const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n    if (Array.from(imag).length < 2) {\n      throw createIndexSizeError2();\n    }\n    return nativePeriodicWave;\n  };\n};\nconst createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n  return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n};\nconst createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError2) => {\n  return (nativeContext, options) => {\n    const channelCountMode = options.channelCountMode;\n    if (channelCountMode === \"clamped-max\") {\n      throw createNotSupportedError2();\n    }\n    if (nativeContext.createStereoPanner === void 0) {\n      return createNativeStereoPannerNodeFaker(nativeContext, options);\n    }\n    const nativeStereoPannerNode = nativeContext.createStereoPanner();\n    assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, \"pan\");\n    Object.defineProperty(nativeStereoPannerNode, \"channelCountMode\", {\n      get: () => channelCountMode,\n      set: (value) => {\n        if (value !== channelCountMode) {\n          throw createNotSupportedError2();\n        }\n      }\n    });\n    return nativeStereoPannerNode;\n  };\n};\nconst createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode2, createNativeChannelSplitterNode2, createNativeGainNode2, createNativeWaveShaperNode2, createNotSupportedError2, monitorConnections2) => {\n  const CURVE_SIZE = 16385;\n  const DC_CURVE = new Float32Array([1, 1]);\n  const HALF_PI = Math.PI / 2;\n  const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: \"explicit\", channelInterpretation: \"discrete\" };\n  const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: \"none\" };\n  const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n    const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    for (let i = 0; i < CURVE_SIZE; i += 1) {\n      const x = i / (CURVE_SIZE - 1) * HALF_PI;\n      leftWaveShaperCurve[i] = Math.cos(x);\n      rightWaveShaperCurve[i] = Math.sin(x);\n    }\n    const leftGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const leftWaveShaperNode = createNativeWaveShaperNode2(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve });\n    const panWaveShaperNode = createNativeWaveShaperNode2(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });\n    const rightGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const rightWaveShaperNode = createNativeWaveShaperNode2(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve });\n    return {\n      connectGraph() {\n        inputGainNode.connect(leftGainNode);\n        inputGainNode.connect(panWaveShaperNode.inputs === void 0 ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n        inputGainNode.connect(rightGainNode);\n        panWaveShaperNode.connect(panGainNode);\n        panGainNode.connect(leftWaveShaperNode.inputs === void 0 ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightWaveShaperNode.inputs === void 0 ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n        leftWaveShaperNode.connect(leftGainNode.gain);\n        rightWaveShaperNode.connect(rightGainNode.gain);\n        leftGainNode.connect(channelMergerNode, 0, 0);\n        rightGainNode.connect(channelMergerNode, 0, 1);\n      },\n      disconnectGraph() {\n        inputGainNode.disconnect(leftGainNode);\n        inputGainNode.disconnect(panWaveShaperNode.inputs === void 0 ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n        inputGainNode.disconnect(rightGainNode);\n        panWaveShaperNode.disconnect(panGainNode);\n        panGainNode.disconnect(leftWaveShaperNode.inputs === void 0 ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(rightWaveShaperNode.inputs === void 0 ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n        leftWaveShaperNode.disconnect(leftGainNode.gain);\n        rightWaveShaperNode.disconnect(rightGainNode.gain);\n        leftGainNode.disconnect(channelMergerNode, 0, 0);\n        rightGainNode.disconnect(channelMergerNode, 0, 1);\n      }\n    };\n  };\n  const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n    const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n    const centerIndex = Math.floor(CURVE_SIZE / 2);\n    for (let i = 0; i < CURVE_SIZE; i += 1) {\n      if (i > centerIndex) {\n        const x = (i - centerIndex) / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;\n        leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n        leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n        rightInputForLeftOutputWaveShaperCurve[i] = 0;\n        rightInputForRightOutputWaveShaperCurve[i] = 1;\n      } else {\n        const x = i / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;\n        leftInputForLeftOutputWaveShaperCurve[i] = 1;\n        leftInputForRightOutputWaveShaperCurve[i] = 0;\n        rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n        rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n      }\n    }\n    const channelSplitterNode = createNativeChannelSplitterNode2(nativeContext, {\n      channelCount: 2,\n      channelCountMode: \"explicit\",\n      channelInterpretation: \"discrete\",\n      numberOfOutputs: 2\n    });\n    const leftInputForLeftOutputGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode2(nativeContext, {\n      ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: leftInputForLeftOutputWaveShaperCurve\n    });\n    const leftInputForRightOutputGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode2(nativeContext, {\n      ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: leftInputForRightOutputWaveShaperCurve\n    });\n    const panWaveShaperNode = createNativeWaveShaperNode2(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });\n    const rightInputForLeftOutputGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode2(nativeContext, {\n      ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: rightInputForLeftOutputWaveShaperCurve\n    });\n    const rightInputForRightOutputGainNode = createNativeGainNode2(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n    const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode2(nativeContext, {\n      ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n      curve: rightInputForRightOutputWaveShaperCurve\n    });\n    return {\n      connectGraph() {\n        inputGainNode.connect(channelSplitterNode);\n        inputGainNode.connect(panWaveShaperNode.inputs === void 0 ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n        channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n        channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n        channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n        channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n        panWaveShaperNode.connect(panGainNode);\n        panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === void 0 ? leftInputForLeftOutputWaveShaperNode : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === void 0 ? leftInputForRightOutputWaveShaperNode : leftInputForRightOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === void 0 ? rightInputForLeftOutputWaveShaperNode : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === void 0 ? rightInputForRightOutputWaveShaperNode : rightInputForRightOutputWaveShaperNode.inputs[0]);\n        leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n        leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n        rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n        rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n        leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n        rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n        leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n        rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n      },\n      disconnectGraph() {\n        inputGainNode.disconnect(channelSplitterNode);\n        inputGainNode.disconnect(panWaveShaperNode.inputs === void 0 ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n        channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n        channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n        channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n        channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n        panWaveShaperNode.disconnect(panGainNode);\n        panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === void 0 ? leftInputForLeftOutputWaveShaperNode : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === void 0 ? leftInputForRightOutputWaveShaperNode : leftInputForRightOutputWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === void 0 ? rightInputForLeftOutputWaveShaperNode : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === void 0 ? rightInputForRightOutputWaveShaperNode : rightInputForRightOutputWaveShaperNode.inputs[0]);\n        leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n        leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n        rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n        rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n        leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n        rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n        leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n        rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n      }\n    };\n  };\n  const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n    if (channelCount === 1) {\n      return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n    }\n    if (channelCount === 2) {\n      return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n    }\n    throw createNotSupportedError2();\n  };\n  return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n    if (channelCountMode === \"max\") {\n      throw createNotSupportedError2();\n    }\n    const channelMergerNode = createNativeChannelMergerNode2(nativeContext, {\n      ...audioNodeOptions,\n      channelCount: 1,\n      channelCountMode,\n      numberOfInputs: 2\n    });\n    const inputGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n    const panGainNode = createNativeGainNode2(nativeContext, {\n      channelCount: 1,\n      channelCountMode: \"explicit\",\n      channelInterpretation: \"discrete\",\n      gain: pan\n    });\n    let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n    Object.defineProperty(panGainNode.gain, \"defaultValue\", { get: () => 0 });\n    Object.defineProperty(panGainNode.gain, \"maxValue\", { get: () => 1 });\n    Object.defineProperty(panGainNode.gain, \"minValue\", { get: () => -1 });\n    const nativeStereoPannerNodeFakerFactory2 = {\n      get bufferSize() {\n        return void 0;\n      },\n      get channelCount() {\n        return inputGainNode.channelCount;\n      },\n      set channelCount(value) {\n        if (inputGainNode.channelCount !== value) {\n          if (isConnected) {\n            disconnectGraph();\n          }\n          ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n          if (isConnected) {\n            connectGraph();\n          }\n        }\n        inputGainNode.channelCount = value;\n      },\n      get channelCountMode() {\n        return inputGainNode.channelCountMode;\n      },\n      set channelCountMode(value) {\n        if (value === \"clamped-max\" || value === \"max\") {\n          throw createNotSupportedError2();\n        }\n        inputGainNode.channelCountMode = value;\n      },\n      get channelInterpretation() {\n        return inputGainNode.channelInterpretation;\n      },\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n      },\n      get context() {\n        return inputGainNode.context;\n      },\n      get inputs() {\n        return [inputGainNode];\n      },\n      get numberOfInputs() {\n        return inputGainNode.numberOfInputs;\n      },\n      get numberOfOutputs() {\n        return inputGainNode.numberOfOutputs;\n      },\n      get pan() {\n        return panGainNode.gain;\n      },\n      addEventListener(...args) {\n        return inputGainNode.addEventListener(args[0], args[1], args[2]);\n      },\n      dispatchEvent(...args) {\n        return inputGainNode.dispatchEvent(args[0]);\n      },\n      removeEventListener(...args) {\n        return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n      }\n    };\n    let isConnected = false;\n    const whenConnected = () => {\n      connectGraph();\n      isConnected = true;\n    };\n    const whenDisconnected = () => {\n      disconnectGraph();\n      isConnected = false;\n    };\n    return monitorConnections2(interceptConnections(nativeStereoPannerNodeFakerFactory2, channelMergerNode), whenConnected, whenDisconnected);\n  };\n};\nconst createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode2, createInvalidStateError2, createNativeWaveShaperNodeFaker2, isDCCurve2, monitorConnections2, nativeAudioContextConstructor2, overwriteAccessors2) => {\n  return (nativeContext, options) => {\n    const nativeWaveShaperNode = nativeContext.createWaveShaper();\n    if (nativeAudioContextConstructor2 !== null && nativeAudioContextConstructor2.name === \"webkitAudioContext\" && nativeContext.createGain().gain.automationRate === void 0) {\n      return createNativeWaveShaperNodeFaker2(nativeContext, options);\n    }\n    assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n    const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n    if (curve !== null && curve.length < 2) {\n      throw createInvalidStateError2();\n    }\n    assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, \"curve\");\n    assignNativeAudioNodeOption(nativeWaveShaperNode, options, \"oversample\");\n    let disconnectNativeAudioBufferSourceNode = null;\n    let isConnected = false;\n    overwriteAccessors2(nativeWaveShaperNode, \"curve\", (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n      set.call(nativeWaveShaperNode, value);\n      if (isConnected) {\n        if (isDCCurve2(value) && disconnectNativeAudioBufferSourceNode === null) {\n          disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode2(nativeContext, nativeWaveShaperNode);\n        } else if (!isDCCurve2(value) && disconnectNativeAudioBufferSourceNode !== null) {\n          disconnectNativeAudioBufferSourceNode();\n          disconnectNativeAudioBufferSourceNode = null;\n        }\n      }\n      return value;\n    });\n    const whenConnected = () => {\n      isConnected = true;\n      if (isDCCurve2(nativeWaveShaperNode.curve)) {\n        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode2(nativeContext, nativeWaveShaperNode);\n      }\n    };\n    const whenDisconnected = () => {\n      isConnected = false;\n      if (disconnectNativeAudioBufferSourceNode !== null) {\n        disconnectNativeAudioBufferSourceNode();\n        disconnectNativeAudioBufferSourceNode = null;\n      }\n    };\n    return monitorConnections2(nativeWaveShaperNode, whenConnected, whenDisconnected);\n  };\n};\nconst createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode2, createInvalidStateError2, createNativeGainNode2, isDCCurve2, monitorConnections2) => {\n  return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n    const negativeWaveShaperNode = nativeContext.createWaveShaper();\n    const positiveWaveShaperNode = nativeContext.createWaveShaper();\n    assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n    assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n    const inputGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: 1 });\n    const invertGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: -1 });\n    const outputGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: 1 });\n    const revertGainNode = createNativeGainNode2(nativeContext, { ...audioNodeOptions, gain: -1 });\n    let disconnectNativeAudioBufferSourceNode = null;\n    let isConnected = false;\n    let unmodifiedCurve = null;\n    const nativeWaveShaperNodeFaker = {\n      get bufferSize() {\n        return void 0;\n      },\n      get channelCount() {\n        return negativeWaveShaperNode.channelCount;\n      },\n      set channelCount(value) {\n        inputGainNode.channelCount = value;\n        invertGainNode.channelCount = value;\n        negativeWaveShaperNode.channelCount = value;\n        outputGainNode.channelCount = value;\n        positiveWaveShaperNode.channelCount = value;\n        revertGainNode.channelCount = value;\n      },\n      get channelCountMode() {\n        return negativeWaveShaperNode.channelCountMode;\n      },\n      set channelCountMode(value) {\n        inputGainNode.channelCountMode = value;\n        invertGainNode.channelCountMode = value;\n        negativeWaveShaperNode.channelCountMode = value;\n        outputGainNode.channelCountMode = value;\n        positiveWaveShaperNode.channelCountMode = value;\n        revertGainNode.channelCountMode = value;\n      },\n      get channelInterpretation() {\n        return negativeWaveShaperNode.channelInterpretation;\n      },\n      set channelInterpretation(value) {\n        inputGainNode.channelInterpretation = value;\n        invertGainNode.channelInterpretation = value;\n        negativeWaveShaperNode.channelInterpretation = value;\n        outputGainNode.channelInterpretation = value;\n        positiveWaveShaperNode.channelInterpretation = value;\n        revertGainNode.channelInterpretation = value;\n      },\n      get context() {\n        return negativeWaveShaperNode.context;\n      },\n      get curve() {\n        return unmodifiedCurve;\n      },\n      set curve(value) {\n        if (value !== null && value.length < 2) {\n          throw createInvalidStateError2();\n        }\n        if (value === null) {\n          negativeWaveShaperNode.curve = value;\n          positiveWaveShaperNode.curve = value;\n        } else {\n          const curveLength = value.length;\n          const negativeCurve = new Float32Array(curveLength + 2 - curveLength % 2);\n          const positiveCurve = new Float32Array(curveLength + 2 - curveLength % 2);\n          negativeCurve[0] = value[0];\n          positiveCurve[0] = -value[curveLength - 1];\n          const length = Math.ceil((curveLength + 1) / 2);\n          const centerIndex = (curveLength + 1) / 2 - 1;\n          for (let i = 1; i < length; i += 1) {\n            const theoreticIndex = i / length * centerIndex;\n            const lowerIndex = Math.floor(theoreticIndex);\n            const upperIndex = Math.ceil(theoreticIndex);\n            negativeCurve[i] = lowerIndex === upperIndex ? value[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n            positiveCurve[i] = lowerIndex === upperIndex ? -value[curveLength - 1 - lowerIndex] : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) - (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n          }\n          negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n          negativeWaveShaperNode.curve = negativeCurve;\n          positiveWaveShaperNode.curve = positiveCurve;\n        }\n        unmodifiedCurve = value;\n        if (isConnected) {\n          if (isDCCurve2(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n            disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode2(nativeContext, inputGainNode);\n          } else if (disconnectNativeAudioBufferSourceNode !== null) {\n            disconnectNativeAudioBufferSourceNode();\n            disconnectNativeAudioBufferSourceNode = null;\n          }\n        }\n      },\n      get inputs() {\n        return [inputGainNode];\n      },\n      get numberOfInputs() {\n        return negativeWaveShaperNode.numberOfInputs;\n      },\n      get numberOfOutputs() {\n        return negativeWaveShaperNode.numberOfOutputs;\n      },\n      get oversample() {\n        return negativeWaveShaperNode.oversample;\n      },\n      set oversample(value) {\n        negativeWaveShaperNode.oversample = value;\n        positiveWaveShaperNode.oversample = value;\n      },\n      addEventListener(...args) {\n        return inputGainNode.addEventListener(args[0], args[1], args[2]);\n      },\n      dispatchEvent(...args) {\n        return inputGainNode.dispatchEvent(args[0]);\n      },\n      removeEventListener(...args) {\n        return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n      }\n    };\n    if (curve !== null) {\n      nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n    }\n    if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n      nativeWaveShaperNodeFaker.oversample = oversample;\n    }\n    const whenConnected = () => {\n      inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n      inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n      isConnected = true;\n      if (isDCCurve2(unmodifiedCurve)) {\n        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode2(nativeContext, inputGainNode);\n      }\n    };\n    const whenDisconnected = () => {\n      inputGainNode.disconnect(negativeWaveShaperNode);\n      negativeWaveShaperNode.disconnect(outputGainNode);\n      inputGainNode.disconnect(invertGainNode);\n      invertGainNode.disconnect(positiveWaveShaperNode);\n      positiveWaveShaperNode.disconnect(revertGainNode);\n      revertGainNode.disconnect(outputGainNode);\n      isConnected = false;\n      if (disconnectNativeAudioBufferSourceNode !== null) {\n        disconnectNativeAudioBufferSourceNode();\n        disconnectNativeAudioBufferSourceNode = null;\n      }\n    };\n    return monitorConnections2(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n  };\n};\nconst createNotSupportedError = () => new DOMException(\"\", \"NotSupportedError\");\nconst DEFAULT_OPTIONS$5 = {\n  numberOfChannels: 1\n};\nconst createOfflineAudioContextConstructor = (baseAudioContextConstructor2, cacheTestResult2, createInvalidStateError2, createNativeOfflineAudioContext2, startRendering2) => {\n  return class OfflineAudioContext extends baseAudioContextConstructor2 {\n    constructor(a, b, c) {\n      let options;\n      if (typeof a === \"number\" && b !== void 0 && c !== void 0) {\n        options = { length: b, numberOfChannels: a, sampleRate: c };\n      } else if (typeof a === \"object\") {\n        options = a;\n      } else {\n        throw new Error(\"The given parameters are not valid.\");\n      }\n      const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS$5, ...options };\n      const nativeOfflineAudioContext = createNativeOfflineAudioContext2(numberOfChannels, length, sampleRate);\n      if (!cacheTestResult2(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n        nativeOfflineAudioContext.addEventListener(\"statechange\", (() => {\n          let i = 0;\n          const delayStateChangeEvent = (event) => {\n            if (this._state === \"running\") {\n              if (i > 0) {\n                nativeOfflineAudioContext.removeEventListener(\"statechange\", delayStateChangeEvent);\n                event.stopImmediatePropagation();\n                this._waitForThePromiseToSettle(event);\n              } else {\n                i += 1;\n              }\n            }\n          };\n          return delayStateChangeEvent;\n        })());\n      }\n      super(nativeOfflineAudioContext, numberOfChannels);\n      this._length = length;\n      this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n      this._state = null;\n    }\n    get length() {\n      if (this._nativeOfflineAudioContext.length === void 0) {\n        return this._length;\n      }\n      return this._nativeOfflineAudioContext.length;\n    }\n    get state() {\n      return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n    }\n    startRendering() {\n      if (this._state === \"running\") {\n        return Promise.reject(createInvalidStateError2());\n      }\n      this._state = \"running\";\n      return startRendering2(this.destination, this._nativeOfflineAudioContext).finally(() => {\n        this._state = null;\n        deactivateAudioGraph(this);\n      });\n    }\n    _waitForThePromiseToSettle(event) {\n      if (this._state === null) {\n        this._nativeOfflineAudioContext.dispatchEvent(event);\n      } else {\n        setTimeout(() => this._waitForThePromiseToSettle(event));\n      }\n    }\n  };\n};\nconst DEFAULT_OPTIONS$4 = {\n  channelCount: 2,\n  channelCountMode: \"max\",\n  channelInterpretation: \"speakers\",\n  detune: 0,\n  frequency: 440,\n  periodicWave: void 0,\n  type: \"sine\"\n};\nconst createOscillatorNodeConstructor = (audioNodeConstructor2, createAudioParam2, createNativeOscillatorNode2, createOscillatorNodeRenderer2, getNativeContext2, isNativeOfflineAudioContext2, wrapEventListener2) => {\n  return class OscillatorNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$4, ...options };\n      const nativeOscillatorNode = createNativeOscillatorNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer2() : null;\n      const nyquist = context2.sampleRate / 2;\n      super(context2, false, nativeOscillatorNode, oscillatorNodeRenderer);\n      this._detune = createAudioParam2(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n      this._frequency = createAudioParam2(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n      this._nativeOscillatorNode = nativeOscillatorNode;\n      this._onended = null;\n      this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n      if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== void 0) {\n        this._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;\n      }\n    }\n    get detune() {\n      return this._detune;\n    }\n    get frequency() {\n      return this._frequency;\n    }\n    get onended() {\n      return this._onended;\n    }\n    set onended(value) {\n      const wrappedListener = typeof value === \"function\" ? wrapEventListener2(this, value) : null;\n      this._nativeOscillatorNode.onended = wrappedListener;\n      const nativeOnEnded = this._nativeOscillatorNode.onended;\n      this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n    }\n    get type() {\n      return this._nativeOscillatorNode.type;\n    }\n    set type(value) {\n      this._nativeOscillatorNode.type = value;\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = null;\n      }\n    }\n    setPeriodicWave(periodicWave) {\n      this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.periodicWave = periodicWave;\n      }\n    }\n    start(when = 0) {\n      this._nativeOscillatorNode.start(when);\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.start = when;\n      }\n      if (this.context.state !== \"closed\") {\n        setInternalStateToActive(this);\n        const resetInternalStateToPassive = () => {\n          this._nativeOscillatorNode.removeEventListener(\"ended\", resetInternalStateToPassive);\n          if (isActiveAudioNode(this)) {\n            setInternalStateToPassive(this);\n          }\n        };\n        this._nativeOscillatorNode.addEventListener(\"ended\", resetInternalStateToPassive);\n      }\n    }\n    stop(when = 0) {\n      this._nativeOscillatorNode.stop(when);\n      if (this._oscillatorNodeRenderer !== null) {\n        this._oscillatorNodeRenderer.stop = when;\n      }\n    }\n  };\n};\nconst createOscillatorNodeRendererFactory = (connectAudioParam2, createNativeOscillatorNode2, getNativeAudioNode2, renderAutomation2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeOscillatorNodes = /* @__PURE__ */ new WeakMap();\n    let periodicWave = null;\n    let start2 = null;\n    let stop = null;\n    const createOscillatorNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeOscillatorNode = getNativeAudioNode2(proxy);\n      const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n      if (!nativeOscillatorNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeOscillatorNode.channelCount,\n          channelCountMode: nativeOscillatorNode.channelCountMode,\n          channelInterpretation: nativeOscillatorNode.channelInterpretation,\n          detune: nativeOscillatorNode.detune.value,\n          frequency: nativeOscillatorNode.frequency.value,\n          periodicWave: periodicWave === null ? void 0 : periodicWave,\n          type: nativeOscillatorNode.type\n        };\n        nativeOscillatorNode = createNativeOscillatorNode2(nativeOfflineAudioContext, options);\n        if (start2 !== null) {\n          nativeOscillatorNode.start(start2);\n        }\n        if (stop !== null) {\n          nativeOscillatorNode.stop(stop);\n        }\n      }\n      renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n      if (!nativeOscillatorNodeIsOwnedByContext) {\n        await renderAutomation2(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n      } else {\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n      }\n      await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n      return nativeOscillatorNode;\n    };\n    return {\n      set periodicWave(value) {\n        periodicWave = value;\n      },\n      set start(value) {\n        start2 = value;\n      },\n      set stop(value) {\n        stop = value;\n      },\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeOscillatorNode !== void 0) {\n          return Promise.resolve(renderedNativeOscillatorNode);\n        }\n        return createOscillatorNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst DEFAULT_OPTIONS$3 = {\n  channelCount: 2,\n  channelCountMode: \"clamped-max\",\n  channelInterpretation: \"speakers\",\n  coneInnerAngle: 360,\n  coneOuterAngle: 360,\n  coneOuterGain: 0,\n  distanceModel: \"inverse\",\n  maxDistance: 1e4,\n  orientationX: 1,\n  orientationY: 0,\n  orientationZ: 0,\n  panningModel: \"equalpower\",\n  positionX: 0,\n  positionY: 0,\n  positionZ: 0,\n  refDistance: 1,\n  rolloffFactor: 1\n};\nconst createPannerNodeConstructor = (audioNodeConstructor2, createAudioParam2, createNativePannerNode2, createPannerNodeRenderer2, getNativeContext2, isNativeOfflineAudioContext2, setAudioNodeTailTime2) => {\n  return class PannerNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$3, ...options };\n      const nativePannerNode = createNativePannerNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const pannerNodeRenderer = isOffline ? createPannerNodeRenderer2() : null;\n      super(context2, false, nativePannerNode, pannerNodeRenderer);\n      this._nativePannerNode = nativePannerNode;\n      this._orientationX = createAudioParam2(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._orientationY = createAudioParam2(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._orientationZ = createAudioParam2(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionX = createAudioParam2(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionY = createAudioParam2(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionZ = createAudioParam2(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      setAudioNodeTailTime2(this, 1);\n    }\n    get coneInnerAngle() {\n      return this._nativePannerNode.coneInnerAngle;\n    }\n    set coneInnerAngle(value) {\n      this._nativePannerNode.coneInnerAngle = value;\n    }\n    get coneOuterAngle() {\n      return this._nativePannerNode.coneOuterAngle;\n    }\n    set coneOuterAngle(value) {\n      this._nativePannerNode.coneOuterAngle = value;\n    }\n    get coneOuterGain() {\n      return this._nativePannerNode.coneOuterGain;\n    }\n    set coneOuterGain(value) {\n      this._nativePannerNode.coneOuterGain = value;\n    }\n    get distanceModel() {\n      return this._nativePannerNode.distanceModel;\n    }\n    set distanceModel(value) {\n      this._nativePannerNode.distanceModel = value;\n    }\n    get maxDistance() {\n      return this._nativePannerNode.maxDistance;\n    }\n    set maxDistance(value) {\n      this._nativePannerNode.maxDistance = value;\n    }\n    get orientationX() {\n      return this._orientationX;\n    }\n    get orientationY() {\n      return this._orientationY;\n    }\n    get orientationZ() {\n      return this._orientationZ;\n    }\n    get panningModel() {\n      return this._nativePannerNode.panningModel;\n    }\n    set panningModel(value) {\n      this._nativePannerNode.panningModel = value;\n    }\n    get positionX() {\n      return this._positionX;\n    }\n    get positionY() {\n      return this._positionY;\n    }\n    get positionZ() {\n      return this._positionZ;\n    }\n    get refDistance() {\n      return this._nativePannerNode.refDistance;\n    }\n    set refDistance(value) {\n      this._nativePannerNode.refDistance = value;\n    }\n    get rolloffFactor() {\n      return this._nativePannerNode.rolloffFactor;\n    }\n    set rolloffFactor(value) {\n      this._nativePannerNode.rolloffFactor = value;\n    }\n  };\n};\nconst createPannerNodeRendererFactory = (connectAudioParam2, createNativeChannelMergerNode2, createNativeConstantSourceNode2, createNativeGainNode2, createNativePannerNode2, getNativeAudioNode2, nativeOfflineAudioContextConstructor2, renderAutomation2, renderInputsOfAudioNode2, renderNativeOfflineAudioContext2) => {\n  return () => {\n    const renderedNativeAudioNodes = /* @__PURE__ */ new WeakMap();\n    let renderedBufferPromise = null;\n    const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeGainNode = null;\n      let nativePannerNode = getNativeAudioNode2(proxy);\n      const commonAudioNodeOptions = {\n        channelCount: nativePannerNode.channelCount,\n        channelCountMode: nativePannerNode.channelCountMode,\n        channelInterpretation: nativePannerNode.channelInterpretation\n      };\n      const commonNativePannerNodeOptions = {\n        ...commonAudioNodeOptions,\n        coneInnerAngle: nativePannerNode.coneInnerAngle,\n        coneOuterAngle: nativePannerNode.coneOuterAngle,\n        coneOuterGain: nativePannerNode.coneOuterGain,\n        distanceModel: nativePannerNode.distanceModel,\n        maxDistance: nativePannerNode.maxDistance,\n        panningModel: nativePannerNode.panningModel,\n        refDistance: nativePannerNode.refDistance,\n        rolloffFactor: nativePannerNode.rolloffFactor\n      };\n      const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n      if (\"bufferSize\" in nativePannerNode) {\n        nativeGainNode = createNativeGainNode2(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n      } else if (!nativePannerNodeIsOwnedByContext) {\n        const options = {\n          ...commonNativePannerNodeOptions,\n          orientationX: nativePannerNode.orientationX.value,\n          orientationY: nativePannerNode.orientationY.value,\n          orientationZ: nativePannerNode.orientationZ.value,\n          positionX: nativePannerNode.positionX.value,\n          positionY: nativePannerNode.positionY.value,\n          positionZ: nativePannerNode.positionZ.value\n        };\n        nativePannerNode = createNativePannerNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n      if (nativeGainNode !== null) {\n        if (renderedBufferPromise === null) {\n          if (nativeOfflineAudioContextConstructor2 === null) {\n            throw new Error(\"Missing the native OfflineAudioContext constructor.\");\n          }\n          const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor2(6, proxy.context.length, nativeOfflineAudioContext.sampleRate);\n          const nativeChannelMergerNode = createNativeChannelMergerNode2(partialOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: \"explicit\",\n            channelInterpretation: \"speakers\",\n            numberOfInputs: 6\n          });\n          nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n          renderedBufferPromise = (async () => {\n            const nativeConstantSourceNodes = await Promise.all([\n              proxy.orientationX,\n              proxy.orientationY,\n              proxy.orientationZ,\n              proxy.positionX,\n              proxy.positionY,\n              proxy.positionZ\n            ].map(async (audioParam, index) => {\n              const nativeConstantSourceNode = createNativeConstantSourceNode2(partialOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: \"explicit\",\n                channelInterpretation: \"discrete\",\n                offset: index === 0 ? 1 : 0\n              });\n              await renderAutomation2(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n              return nativeConstantSourceNode;\n            }));\n            for (let i = 0; i < 6; i += 1) {\n              nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n              nativeConstantSourceNodes[i].start(0);\n            }\n            return renderNativeOfflineAudioContext2(partialOfflineAudioContext);\n          })();\n        }\n        const renderedBuffer = await renderedBufferPromise;\n        const inputGainNode = createNativeGainNode2(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n        await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, inputGainNode);\n        const channelDatas = [];\n        for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n          channelDatas.push(renderedBuffer.getChannelData(i));\n        }\n        let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n        let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n        let gateGainNode = createNativeGainNode2(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n        let partialPannerNode = createNativePannerNode2(nativeOfflineAudioContext, {\n          ...commonNativePannerNodeOptions,\n          orientationX: lastOrientation[0],\n          orientationY: lastOrientation[1],\n          orientationZ: lastOrientation[2],\n          positionX: lastPosition[0],\n          positionY: lastPosition[1],\n          positionZ: lastPosition[2]\n        });\n        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n        partialPannerNode.connect(nativeGainNode);\n        for (let i = 128; i < renderedBuffer.length; i += 128) {\n          const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n          const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n          if (orientation.some((value, index) => value !== lastOrientation[index]) || positon.some((value, index) => value !== lastPosition[index])) {\n            lastOrientation = orientation;\n            lastPosition = positon;\n            const currentTime = i / nativeOfflineAudioContext.sampleRate;\n            gateGainNode.gain.setValueAtTime(0, currentTime);\n            gateGainNode = createNativeGainNode2(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n            partialPannerNode = createNativePannerNode2(nativeOfflineAudioContext, {\n              ...commonNativePannerNodeOptions,\n              orientationX: lastOrientation[0],\n              orientationY: lastOrientation[1],\n              orientationZ: lastOrientation[2],\n              positionX: lastPosition[0],\n              positionY: lastPosition[1],\n              positionZ: lastPosition[2]\n            });\n            gateGainNode.gain.setValueAtTime(1, currentTime);\n            inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n            partialPannerNode.connect(nativeGainNode);\n          }\n        }\n        return nativeGainNode;\n      }\n      if (!nativePannerNodeIsOwnedByContext) {\n        await renderAutomation2(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n        await renderAutomation2(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n      } else {\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n      }\n      if (isNativeAudioNodeFaker(nativePannerNode)) {\n        await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n      } else {\n        await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativePannerNode);\n      }\n      return nativePannerNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeGainNodeOrNativePannerNode !== void 0) {\n          return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n        }\n        return createAudioNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst DEFAULT_OPTIONS$2 = {\n  disableNormalization: false\n};\nconst createPeriodicWaveConstructor = (createNativePeriodicWave2, getNativeContext2, periodicWaveStore, sanitizePeriodicWaveOptions2) => {\n  return class PeriodicWave {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = sanitizePeriodicWaveOptions2({ ...DEFAULT_OPTIONS$2, ...options });\n      const periodicWave = createNativePeriodicWave2(nativeContext, mergedOptions);\n      periodicWaveStore.add(periodicWave);\n      return periodicWave;\n    }\n    static [Symbol.hasInstance](instance) {\n      return instance !== null && typeof instance === \"object\" && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);\n    }\n  };\n};\nconst createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam2) => {\n  return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n    const audioParamRenderer = getAudioParamRenderer(audioParam);\n    audioParamRenderer.replay(nativeAudioParam);\n    return renderInputsOfAudioParam2(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n  };\n};\nconst createRenderInputsOfAudioNode = (getAudioNodeConnections2, getAudioNodeRenderer2, isPartOfACycle2) => {\n  return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n    const audioNodeConnections = getAudioNodeConnections2(audioNode);\n    await Promise.all(audioNodeConnections.activeInputs.map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n      const audioNodeRenderer = getAudioNodeRenderer2(source);\n      const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n      const destination = audioNode.context.destination;\n      if (!isPartOfACycle2(source) && (audioNode !== destination || !isPartOfACycle2(audioNode))) {\n        renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n      }\n    })).reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n  };\n};\nconst createRenderInputsOfAudioParam = (getAudioNodeRenderer2, getAudioParamConnections2, isPartOfACycle2) => {\n  return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n    const audioParamConnections = getAudioParamConnections2(audioParam);\n    await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n      const audioNodeRenderer = getAudioNodeRenderer2(source);\n      const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n      if (!isPartOfACycle2(source)) {\n        renderedNativeAudioNode.connect(nativeAudioParam, output);\n      }\n    }));\n  };\n};\nconst createRenderNativeOfflineAudioContext = (cacheTestResult2, createNativeGainNode2, createNativeScriptProcessorNode2, testOfflineAudioContextCurrentTimeSupport) => {\n  return (nativeOfflineAudioContext) => {\n    if (cacheTestResult2(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n      return Promise.resolve(cacheTestResult2(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n        if (!isOfflineAudioContextCurrentTimeSupported) {\n          const scriptProcessorNode = createNativeScriptProcessorNode2(nativeOfflineAudioContext, 512, 0, 1);\n          nativeOfflineAudioContext.oncomplete = () => {\n            scriptProcessorNode.onaudioprocess = null;\n            scriptProcessorNode.disconnect();\n          };\n          scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime;\n          scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n        }\n        return nativeOfflineAudioContext.startRendering();\n      });\n    }\n    return new Promise((resolve) => {\n      const gainNode = createNativeGainNode2(nativeOfflineAudioContext, {\n        channelCount: 1,\n        channelCountMode: \"explicit\",\n        channelInterpretation: \"discrete\",\n        gain: 0\n      });\n      nativeOfflineAudioContext.oncomplete = (event) => {\n        gainNode.disconnect();\n        resolve(event.renderedBuffer);\n      };\n      gainNode.connect(nativeOfflineAudioContext.destination);\n      nativeOfflineAudioContext.startRendering();\n    });\n  };\n};\nconst createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore2) => {\n  return (nativeAudioWorkletNode, activeInputs) => {\n    activeAudioWorkletNodeInputsStore2.set(nativeAudioWorkletNode, activeInputs);\n  };\n};\nconst createSetAudioNodeTailTime = (audioNodeTailTimeStore2) => {\n  return (audioNode, tailTime) => audioNodeTailTimeStore2.set(audioNode, tailTime);\n};\nconst createStartRendering = (audioBufferStore2, cacheTestResult2, getAudioNodeRenderer2, getUnrenderedAudioWorkletNodes2, renderNativeOfflineAudioContext2, testAudioBufferCopyChannelMethodsOutOfBoundsSupport2, wrapAudioBufferCopyChannelMethods2, wrapAudioBufferCopyChannelMethodsOutOfBounds2) => {\n  return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer2(destination).render(destination, nativeOfflineAudioContext).then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes2(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer2(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext)))).then(() => renderNativeOfflineAudioContext2(nativeOfflineAudioContext)).then((audioBuffer) => {\n    if (typeof audioBuffer.copyFromChannel !== \"function\") {\n      wrapAudioBufferCopyChannelMethods2(audioBuffer);\n      wrapAudioBufferGetChannelDataMethod(audioBuffer);\n    } else if (!cacheTestResult2(testAudioBufferCopyChannelMethodsOutOfBoundsSupport2, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport2(audioBuffer))) {\n      wrapAudioBufferCopyChannelMethodsOutOfBounds2(audioBuffer);\n    }\n    audioBufferStore2.add(audioBuffer);\n    return audioBuffer;\n  });\n};\nconst DEFAULT_OPTIONS$1 = {\n  channelCount: 2,\n  channelCountMode: \"explicit\",\n  channelInterpretation: \"speakers\",\n  pan: 0\n};\nconst createStereoPannerNodeConstructor = (audioNodeConstructor2, createAudioParam2, createNativeStereoPannerNode2, createStereoPannerNodeRenderer2, getNativeContext2, isNativeOfflineAudioContext2) => {\n  return class StereoPannerNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS$1, ...options };\n      const nativeStereoPannerNode = createNativeStereoPannerNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer2() : null;\n      super(context2, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n      this._pan = createAudioParam2(this, isOffline, nativeStereoPannerNode.pan);\n    }\n    get pan() {\n      return this._pan;\n    }\n  };\n};\nconst createStereoPannerNodeRendererFactory = (connectAudioParam2, createNativeStereoPannerNode2, getNativeAudioNode2, renderAutomation2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeStereoPannerNodes = /* @__PURE__ */ new WeakMap();\n    const createStereoPannerNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeStereoPannerNode = getNativeAudioNode2(proxy);\n      const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n      if (!nativeStereoPannerNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeStereoPannerNode.channelCount,\n          channelCountMode: nativeStereoPannerNode.channelCountMode,\n          channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n          pan: nativeStereoPannerNode.pan.value\n        };\n        nativeStereoPannerNode = createNativeStereoPannerNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n      if (!nativeStereoPannerNodeIsOwnedByContext) {\n        await renderAutomation2(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n      } else {\n        await connectAudioParam2(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n      }\n      if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n        await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n      } else {\n        await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n      }\n      return nativeStereoPannerNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeStereoPannerNode !== void 0) {\n          return Promise.resolve(renderedNativeStereoPannerNode);\n        }\n        return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor2) => {\n  return () => {\n    if (nativeAudioBufferConstructor2 === null) {\n      return false;\n    }\n    try {\n      new nativeAudioBufferConstructor2({ length: 1, sampleRate: 44100 });\n    } catch {\n      return false;\n    }\n    return true;\n  };\n};\nconst createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor2, nativeOfflineAudioContextConstructor2) => {\n  return async () => {\n    if (nativeAudioWorkletNodeConstructor2 === null) {\n      return true;\n    }\n    if (nativeOfflineAudioContextConstructor2 === null) {\n      return false;\n    }\n    const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n      type: \"application/javascript; charset=utf-8\"\n    });\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor2(1, 128, 44100);\n    const url = URL.createObjectURL(blob);\n    let isEmittingMessageEvents = false;\n    let isEmittingProcessorErrorEvents = false;\n    try {\n      await offlineAudioContext.audioWorklet.addModule(url);\n      const audioWorkletNode = new nativeAudioWorkletNodeConstructor2(offlineAudioContext, \"a\", { numberOfOutputs: 0 });\n      const oscillator = offlineAudioContext.createOscillator();\n      audioWorkletNode.port.onmessage = () => isEmittingMessageEvents = true;\n      audioWorkletNode.onprocessorerror = () => isEmittingProcessorErrorEvents = true;\n      oscillator.connect(audioWorkletNode);\n      oscillator.start(0);\n      await offlineAudioContext.startRendering();\n    } catch {\n    } finally {\n      URL.revokeObjectURL(url);\n    }\n    return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n  };\n};\nconst createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode2, nativeOfflineAudioContextConstructor2) => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor2 === null) {\n      return Promise.resolve(false);\n    }\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor2(1, 1, 44100);\n    const gainNode = createNativeGainNode2(nativeOfflineAudioContext, {\n      channelCount: 1,\n      channelCountMode: \"explicit\",\n      channelInterpretation: \"discrete\",\n      gain: 0\n    });\n    return new Promise((resolve) => {\n      nativeOfflineAudioContext.oncomplete = () => {\n        gainNode.disconnect();\n        resolve(nativeOfflineAudioContext.currentTime !== 0);\n      };\n      nativeOfflineAudioContext.startRendering();\n    });\n  };\n};\nconst createUnknownError = () => new DOMException(\"\", \"UnknownError\");\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: \"max\",\n  channelInterpretation: \"speakers\",\n  curve: null,\n  oversample: \"none\"\n};\nconst createWaveShaperNodeConstructor = (audioNodeConstructor2, createInvalidStateError2, createNativeWaveShaperNode2, createWaveShaperNodeRenderer2, getNativeContext2, isNativeOfflineAudioContext2, setAudioNodeTailTime2) => {\n  return class WaveShaperNode extends audioNodeConstructor2 {\n    constructor(context2, options) {\n      const nativeContext = getNativeContext2(context2);\n      const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n      const nativeWaveShaperNode = createNativeWaveShaperNode2(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext2(nativeContext);\n      const waveShaperNodeRenderer = isOffline ? createWaveShaperNodeRenderer2() : null;\n      super(context2, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n      this._isCurveNullified = false;\n      this._nativeWaveShaperNode = nativeWaveShaperNode;\n      setAudioNodeTailTime2(this, 1);\n    }\n    get curve() {\n      if (this._isCurveNullified) {\n        return null;\n      }\n      return this._nativeWaveShaperNode.curve;\n    }\n    set curve(value) {\n      if (value === null) {\n        this._isCurveNullified = true;\n        this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n      } else {\n        if (value.length < 2) {\n          throw createInvalidStateError2();\n        }\n        this._isCurveNullified = false;\n        this._nativeWaveShaperNode.curve = value;\n      }\n    }\n    get oversample() {\n      return this._nativeWaveShaperNode.oversample;\n    }\n    set oversample(value) {\n      this._nativeWaveShaperNode.oversample = value;\n    }\n  };\n};\nconst createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode2, getNativeAudioNode2, renderInputsOfAudioNode2) => {\n  return () => {\n    const renderedNativeWaveShaperNodes = /* @__PURE__ */ new WeakMap();\n    const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {\n      let nativeWaveShaperNode = getNativeAudioNode2(proxy);\n      const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n      if (!nativeWaveShaperNodeIsOwnedByContext) {\n        const options = {\n          channelCount: nativeWaveShaperNode.channelCount,\n          channelCountMode: nativeWaveShaperNode.channelCountMode,\n          channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n          curve: nativeWaveShaperNode.curve,\n          oversample: nativeWaveShaperNode.oversample\n        };\n        nativeWaveShaperNode = createNativeWaveShaperNode2(nativeOfflineAudioContext, options);\n      }\n      renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n      if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n        await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n      } else {\n        await renderInputsOfAudioNode2(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n      }\n      return nativeWaveShaperNode;\n    };\n    return {\n      render(proxy, nativeOfflineAudioContext) {\n        const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n        if (renderedNativeWaveShaperNode !== void 0) {\n          return Promise.resolve(renderedNativeWaveShaperNode);\n        }\n        return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n      }\n    };\n  };\n};\nconst createWindow = () => typeof window === \"undefined\" ? null : window;\nconst createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong2, createIndexSizeError2) => {\n  return (audioBuffer) => {\n    audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n      const bufferOffset = convertNumberToUnsignedLong2(bufferOffsetAsNumber);\n      const channelNumber = convertNumberToUnsignedLong2(channelNumberAsNumber);\n      if (channelNumber >= audioBuffer.numberOfChannels) {\n        throw createIndexSizeError2();\n      }\n      const audioBufferLength = audioBuffer.length;\n      const channelData = audioBuffer.getChannelData(channelNumber);\n      const destinationLength = destination.length;\n      for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n        destination[i] = channelData[i + bufferOffset];\n      }\n    };\n    audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n      const bufferOffset = convertNumberToUnsignedLong2(bufferOffsetAsNumber);\n      const channelNumber = convertNumberToUnsignedLong2(channelNumberAsNumber);\n      if (channelNumber >= audioBuffer.numberOfChannels) {\n        throw createIndexSizeError2();\n      }\n      const audioBufferLength = audioBuffer.length;\n      const channelData = audioBuffer.getChannelData(channelNumber);\n      const sourceLength = source.length;\n      for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n        channelData[i + bufferOffset] = source[i];\n      }\n    };\n  };\n};\nconst createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong2) => {\n  return (audioBuffer) => {\n    audioBuffer.copyFromChannel = ((copyFromChannel2) => {\n      return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n        const bufferOffset = convertNumberToUnsignedLong2(bufferOffsetAsNumber);\n        const channelNumber = convertNumberToUnsignedLong2(channelNumberAsNumber);\n        if (bufferOffset < audioBuffer.length) {\n          return copyFromChannel2.call(audioBuffer, destination, channelNumber, bufferOffset);\n        }\n      };\n    })(audioBuffer.copyFromChannel);\n    audioBuffer.copyToChannel = ((copyToChannel2) => {\n      return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n        const bufferOffset = convertNumberToUnsignedLong2(bufferOffsetAsNumber);\n        const channelNumber = convertNumberToUnsignedLong2(channelNumberAsNumber);\n        if (bufferOffset < audioBuffer.length) {\n          return copyToChannel2.call(audioBuffer, source, channelNumber, bufferOffset);\n        }\n      };\n    })(audioBuffer.copyToChannel);\n  };\n};\nconst createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors2) => {\n  return (nativeAudioBufferSourceNode, nativeContext) => {\n    const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n    if (nativeAudioBufferSourceNode.buffer === null) {\n      nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n    }\n    overwriteAccessors2(nativeAudioBufferSourceNode, \"buffer\", (get) => () => {\n      const value = get.call(nativeAudioBufferSourceNode);\n      return value === nullifiedBuffer ? null : value;\n    }, (set) => (value) => {\n      return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n    });\n  };\n};\nconst createWrapChannelMergerNode = (createInvalidStateError2, monitorConnections2) => {\n  return (nativeContext, channelMergerNode) => {\n    channelMergerNode.channelCount = 1;\n    channelMergerNode.channelCountMode = \"explicit\";\n    Object.defineProperty(channelMergerNode, \"channelCount\", {\n      get: () => 1,\n      set: () => {\n        throw createInvalidStateError2();\n      }\n    });\n    Object.defineProperty(channelMergerNode, \"channelCountMode\", {\n      get: () => \"explicit\",\n      set: () => {\n        throw createInvalidStateError2();\n      }\n    });\n    const audioBufferSourceNode = nativeContext.createBufferSource();\n    const whenConnected = () => {\n      const length = channelMergerNode.numberOfInputs;\n      for (let i = 0; i < length; i += 1) {\n        audioBufferSourceNode.connect(channelMergerNode, 0, i);\n      }\n    };\n    const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n    monitorConnections2(channelMergerNode, whenConnected, whenDisconnected);\n  };\n};\nconst getFirstSample = (audioBuffer, buffer, channelNumber) => {\n  if (audioBuffer.copyFromChannel === void 0) {\n    return audioBuffer.getChannelData(channelNumber)[0];\n  }\n  audioBuffer.copyFromChannel(buffer, channelNumber);\n  return buffer[0];\n};\nconst isDCCurve = (curve) => {\n  if (curve === null) {\n    return false;\n  }\n  const length = curve.length;\n  if (length % 2 !== 0) {\n    return curve[Math.floor(length / 2)] !== 0;\n  }\n  return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\nconst overwriteAccessors = (object, property, createGetter, createSetter) => {\n  let prototype = object;\n  while (!prototype.hasOwnProperty(property)) {\n    prototype = Object.getPrototypeOf(prototype);\n  }\n  const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n  Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\nconst sanitizeAudioWorkletNodeOptions = (options) => {\n  return {\n    ...options,\n    outputChannelCount: options.outputChannelCount !== void 0 ? options.outputChannelCount : options.numberOfInputs === 1 && options.numberOfOutputs === 1 ? [options.channelCount] : Array.from({ length: options.numberOfOutputs }, () => 1)\n  };\n};\nconst sanitizeChannelSplitterOptions = (options) => {\n  return { ...options, channelCount: options.numberOfOutputs };\n};\nconst sanitizePeriodicWaveOptions = (options) => {\n  const { imag, real } = options;\n  if (imag === void 0) {\n    if (real === void 0) {\n      return { ...options, imag: [0, 0], real: [0, 0] };\n    }\n    return { ...options, imag: Array.from(real, () => 0), real };\n  }\n  if (real === void 0) {\n    return { ...options, imag, real: Array.from(imag, () => 0) };\n  }\n  return { ...options, imag, real };\n};\nconst setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n  try {\n    audioParam.setValueAtTime(value, startTime);\n  } catch (err) {\n    if (err.code !== 9) {\n      throw err;\n    }\n    setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n  }\n};\nconst testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n  const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n  nativeAudioBufferSourceNode.start();\n  try {\n    nativeAudioBufferSourceNode.start();\n  } catch {\n    return true;\n  }\n  return false;\n};\nconst testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n  const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n  const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n  nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n  try {\n    nativeAudioBufferSourceNode.start(0, 1);\n  } catch {\n    return false;\n  }\n  return true;\n};\nconst testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n  const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n  nativeAudioBufferSourceNode.start();\n  try {\n    nativeAudioBufferSourceNode.stop();\n  } catch {\n    return false;\n  }\n  return true;\n};\nconst testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n  const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n  try {\n    nativeAudioBufferSourceNode.start(-1);\n  } catch (err) {\n    return err instanceof RangeError;\n  }\n  return false;\n};\nconst testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n  const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n  const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n  nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n  nativeAudioBufferSourceNode.start();\n  nativeAudioBufferSourceNode.stop();\n  try {\n    nativeAudioBufferSourceNode.stop();\n    return true;\n  } catch {\n    return false;\n  }\n};\nconst testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n  const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n  try {\n    nativeAudioBufferSourceNode.stop(-1);\n  } catch (err) {\n    return err instanceof RangeError;\n  }\n  return false;\n};\nconst testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n  const { port1, port2 } = new MessageChannel();\n  try {\n    port1.postMessage(audioWorkletNodeOptions);\n  } finally {\n    port1.close();\n    port2.close();\n  }\n};\nconst wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n  nativeAudioBufferSourceNode.start = ((start2) => {\n    return (when = 0, offset = 0, duration) => {\n      const buffer = nativeAudioBufferSourceNode.buffer;\n      const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n      if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n        start2.call(nativeAudioBufferSourceNode, when, 0, 0);\n      } else {\n        start2.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n      }\n    };\n  })(nativeAudioBufferSourceNode.start);\n};\nconst wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n  const nativeGainNode = nativeContext.createGain();\n  nativeAudioScheduledSourceNode.connect(nativeGainNode);\n  const disconnectGainNode = ((disconnect2) => {\n    return () => {\n      disconnect2.call(nativeAudioScheduledSourceNode, nativeGainNode);\n      nativeAudioScheduledSourceNode.removeEventListener(\"ended\", disconnectGainNode);\n    };\n  })(nativeAudioScheduledSourceNode.disconnect);\n  nativeAudioScheduledSourceNode.addEventListener(\"ended\", disconnectGainNode);\n  interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n  nativeAudioScheduledSourceNode.stop = ((stop) => {\n    let isStopped = false;\n    return (when = 0) => {\n      if (isStopped) {\n        try {\n          stop.call(nativeAudioScheduledSourceNode, when);\n        } catch {\n          nativeGainNode.gain.setValueAtTime(0, when);\n        }\n      } else {\n        stop.call(nativeAudioScheduledSourceNode, when);\n        isStopped = true;\n      }\n    };\n  })(nativeAudioScheduledSourceNode.stop);\n};\nconst wrapEventListener = (target, eventListener) => {\n  return (event) => {\n    const descriptor = { value: target };\n    Object.defineProperties(event, {\n      currentTarget: descriptor,\n      target: descriptor\n    });\n    if (typeof eventListener === \"function\") {\n      return eventListener.call(target, event);\n    }\n    return eventListener.handleEvent.call(target, event);\n  };\n};\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = /* @__PURE__ */ new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(/* @__PURE__ */ new Map(), /* @__PURE__ */ new WeakMap());\nconst window$1 = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window$1);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = /* @__PURE__ */ new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window$1);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window$1);\nconst isNativeAudioParam = createIsNativeAudioParam(window$1);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window$1);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nconst audioBufferStore = /* @__PURE__ */ new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window$1);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = /* @__PURE__ */ new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, /* @__PURE__ */ new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window$1);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window$1);\nconst backupOfflineAudioContextStore = /* @__PURE__ */ new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\nconst addAudioWorkletModule = isSecureContext ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window$1), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, /* @__PURE__ */ new WeakMap(), /* @__PURE__ */ new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), window$1) : void 0;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nconst decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, /* @__PURE__ */ new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = /* @__PURE__ */ new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\nconst audioWorkletNodeConstructor = isSecureContext ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) : void 0;\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nconst isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nconst isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nconst isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nconst isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nfunction isUndef(arg) {\n  return typeof arg === \"undefined\";\n}\nfunction isDefined(arg) {\n  return !isUndef(arg);\n}\nfunction isFunction(arg) {\n  return typeof arg === \"function\";\n}\nfunction isNumber(arg) {\n  return typeof arg === \"number\";\n}\nfunction isObject(arg) {\n  return Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object;\n}\nfunction isBoolean(arg) {\n  return typeof arg === \"boolean\";\n}\nfunction isArray(arg) {\n  return Array.isArray(arg);\n}\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\nfunction isNote(arg) {\n  return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\nfunction assert(statement, error) {\n  if (!statement) {\n    throw new Error(error);\n  }\n}\nfunction assertRange(value, gte, lte = Infinity) {\n  if (!(gte <= value && value <= lte)) {\n    throw new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);\n  }\n}\nfunction assertContextRunning(context2) {\n  if (!context2.isOffline && context2.state !== \"running\") {\n    warn('The AudioContext is \"suspended\". Invoke Tone.start() from a user action to start the audio.');\n  }\n}\nlet isInsideScheduledCallback = false;\nlet printedScheduledWarning = false;\nfunction enterScheduledCallback(insideCallback) {\n  isInsideScheduledCallback = insideCallback;\n}\nfunction assertUsedScheduleTime(time) {\n  if (isUndef(time) && isInsideScheduledCallback && !printedScheduledWarning) {\n    printedScheduledWarning = true;\n    warn(\"Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing\");\n  }\n}\nlet defaultLogger = console;\nfunction log(...args) {\n  defaultLogger.log(...args);\n}\nfunction warn(...args) {\n  defaultLogger.warn(...args);\n}\nfunction createAudioContext(options) {\n  return new audioContextConstructor(options);\n}\nfunction createOfflineAudioContext(channels, length, sampleRate) {\n  return new offlineAudioContextConstructor(channels, length, sampleRate);\n}\nconst theWindow = typeof self === \"object\" ? self : null;\nconst hasAudioContext = theWindow && (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nfunction createAudioWorkletNode(context2, name, options) {\n  assert(isDefined(audioWorkletNodeConstructor), \"This node only works in a secure context (https or localhost)\");\n  return new audioWorkletNodeConstructor(context2, name, options);\n}\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function(resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function(resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nclass Ticker {\n  constructor(callback, type, updateInterval, contextSampleRate) {\n    this._callback = callback;\n    this._type = type;\n    this._minimumUpdateInterval = Math.max(128 / (contextSampleRate || 44100), 1e-3);\n    this.updateInterval = updateInterval;\n    this._createClock();\n  }\n  _createWorker() {\n    const blob = new Blob([\n      `\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1e3).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n    ], { type: \"text/javascript\" });\n    const blobUrl = URL.createObjectURL(blob);\n    const worker = new Worker(blobUrl);\n    worker.onmessage = this._callback.bind(this);\n    this._worker = worker;\n  }\n  _createTimeout() {\n    this._timeout = setTimeout(() => {\n      this._createTimeout();\n      this._callback();\n    }, this._updateInterval * 1e3);\n  }\n  _createClock() {\n    if (this._type === \"worker\") {\n      try {\n        this._createWorker();\n      } catch (e) {\n        this._type = \"timeout\";\n        this._createClock();\n      }\n    } else if (this._type === \"timeout\") {\n      this._createTimeout();\n    }\n  }\n  _disposeClock() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n    if (this._worker) {\n      this._worker.terminate();\n      this._worker.onmessage = null;\n    }\n  }\n  get updateInterval() {\n    return this._updateInterval;\n  }\n  set updateInterval(interval) {\n    var _a;\n    this._updateInterval = Math.max(interval, this._minimumUpdateInterval);\n    if (this._type === \"worker\") {\n      (_a = this._worker) === null || _a === void 0 ? void 0 : _a.postMessage(this._updateInterval * 1e3);\n    }\n  }\n  get type() {\n    return this._type;\n  }\n  set type(type) {\n    this._disposeClock();\n    this._type = type;\n    this._createClock();\n  }\n  dispose() {\n    this._disposeClock();\n  }\n}\nfunction isAudioParam(arg) {\n  return isAnyAudioParam(arg);\n}\nfunction isAudioNode(arg) {\n  return isAnyAudioNode(arg);\n}\nfunction isOfflineAudioContext(arg) {\n  return isAnyOfflineAudioContext(arg);\n}\nfunction isAudioContext(arg) {\n  return isAnyAudioContext(arg);\n}\nfunction isAudioBuffer(arg) {\n  return arg instanceof audioBufferConstructor;\n}\nfunction noCopy(key, arg) {\n  return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\nfunction deepMerge(target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (noCopy(key, source[key])) {\n        target[key] = source[key];\n      } else if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, { [key]: {} });\n        }\n        deepMerge(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n  return deepMerge(target, ...sources);\n}\nfunction deepEquals(arrayA, arrayB) {\n  return arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\nfunction optionsFromArguments(defaults, argsArray, keys = [], objKey) {\n  const opts = {};\n  const args = Array.from(argsArray);\n  if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n    const partOfDefaults = Object.keys(args[0]).some((key) => Reflect.has(defaults, key));\n    if (!partOfDefaults) {\n      deepMerge(opts, { [objKey]: args[0] });\n      keys.splice(keys.indexOf(objKey), 1);\n      args.shift();\n    }\n  }\n  if (args.length === 1 && isObject(args[0])) {\n    deepMerge(opts, args[0]);\n  } else {\n    for (let i = 0; i < keys.length; i++) {\n      if (isDefined(args[i])) {\n        opts[keys[i]] = args[i];\n      }\n    }\n  }\n  return deepMerge(defaults, opts);\n}\nfunction getDefaultsFromInstance(instance) {\n  return instance.constructor.getDefaults();\n}\nfunction defaultArg(given, fallback) {\n  if (isUndef(given)) {\n    return fallback;\n  } else {\n    return given;\n  }\n}\nfunction omitFromObject(obj, omit) {\n  omit.forEach((prop) => {\n    if (Reflect.has(obj, prop)) {\n      delete obj[prop];\n    }\n  });\n  return obj;\n}\n/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nclass Tone {\n  constructor() {\n    this.debug = false;\n    this._wasDisposed = false;\n  }\n  static getDefaults() {\n    return {};\n  }\n  log(...args) {\n    if (this.debug || theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS) {\n      log(this, ...args);\n    }\n  }\n  dispose() {\n    this._wasDisposed = true;\n    return this;\n  }\n  get disposed() {\n    return this._wasDisposed;\n  }\n  toString() {\n    return this.name;\n  }\n}\nTone.version = version;\nconst EPSILON = 1e-6;\nfunction GT(a, b) {\n  return a > b + EPSILON;\n}\nfunction GTE(a, b) {\n  return GT(a, b) || EQ(a, b);\n}\nfunction LT(a, b) {\n  return a + EPSILON < b;\n}\nfunction EQ(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\nfunction clamp(value, min, max) {\n  return Math.max(Math.min(value, max), min);\n}\nclass Timeline extends Tone {\n  constructor() {\n    super();\n    this.name = \"Timeline\";\n    this._timeline = [];\n    const options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n    this.memory = options.memory;\n    this.increasing = options.increasing;\n  }\n  static getDefaults() {\n    return {\n      memory: Infinity,\n      increasing: false\n    };\n  }\n  get length() {\n    return this._timeline.length;\n  }\n  add(event) {\n    assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n    event.time = event.time.valueOf();\n    if (this.increasing && this.length) {\n      const lastValue = this._timeline[this.length - 1];\n      assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n      this._timeline.push(event);\n    } else {\n      const index = this._search(event.time);\n      this._timeline.splice(index + 1, 0, event);\n    }\n    if (this.length > this.memory) {\n      const diff = this.length - this.memory;\n      this._timeline.splice(0, diff);\n    }\n    return this;\n  }\n  remove(event) {\n    const index = this._timeline.indexOf(event);\n    if (index !== -1) {\n      this._timeline.splice(index, 1);\n    }\n    return this;\n  }\n  get(time, param = \"time\") {\n    const index = this._search(time, param);\n    if (index !== -1) {\n      return this._timeline[index];\n    } else {\n      return null;\n    }\n  }\n  peek() {\n    return this._timeline[0];\n  }\n  shift() {\n    return this._timeline.shift();\n  }\n  getAfter(time, param = \"time\") {\n    const index = this._search(time, param);\n    if (index + 1 < this._timeline.length) {\n      return this._timeline[index + 1];\n    } else {\n      return null;\n    }\n  }\n  getBefore(time) {\n    const len = this._timeline.length;\n    if (len > 0 && this._timeline[len - 1].time < time) {\n      return this._timeline[len - 1];\n    }\n    const index = this._search(time);\n    if (index - 1 >= 0) {\n      return this._timeline[index - 1];\n    } else {\n      return null;\n    }\n  }\n  cancel(after) {\n    if (this._timeline.length > 1) {\n      let index = this._search(after);\n      if (index >= 0) {\n        if (EQ(this._timeline[index].time, after)) {\n          for (let i = index; i >= 0; i--) {\n            if (EQ(this._timeline[i].time, after)) {\n              index = i;\n            } else {\n              break;\n            }\n          }\n          this._timeline = this._timeline.slice(0, index);\n        } else {\n          this._timeline = this._timeline.slice(0, index + 1);\n        }\n      } else {\n        this._timeline = [];\n      }\n    } else if (this._timeline.length === 1) {\n      if (GTE(this._timeline[0].time, after)) {\n        this._timeline = [];\n      }\n    }\n    return this;\n  }\n  cancelBefore(time) {\n    const index = this._search(time);\n    if (index >= 0) {\n      this._timeline = this._timeline.slice(index + 1);\n    }\n    return this;\n  }\n  previousEvent(event) {\n    const index = this._timeline.indexOf(event);\n    if (index > 0) {\n      return this._timeline[index - 1];\n    } else {\n      return null;\n    }\n  }\n  _search(time, param = \"time\") {\n    if (this._timeline.length === 0) {\n      return -1;\n    }\n    let beginning = 0;\n    const len = this._timeline.length;\n    let end = len;\n    if (len > 0 && this._timeline[len - 1][param] <= time) {\n      return len - 1;\n    }\n    while (beginning < end) {\n      let midPoint = Math.floor(beginning + (end - beginning) / 2);\n      const event = this._timeline[midPoint];\n      const nextEvent = this._timeline[midPoint + 1];\n      if (EQ(event[param], time)) {\n        for (let i = midPoint; i < this._timeline.length; i++) {\n          const testEvent = this._timeline[i];\n          if (EQ(testEvent[param], time)) {\n            midPoint = i;\n          } else {\n            break;\n          }\n        }\n        return midPoint;\n      } else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n        return midPoint;\n      } else if (GT(event[param], time)) {\n        end = midPoint;\n      } else {\n        beginning = midPoint + 1;\n      }\n    }\n    return -1;\n  }\n  _iterate(callback, lowerBound = 0, upperBound = this._timeline.length - 1) {\n    this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n  }\n  forEach(callback) {\n    this._iterate(callback);\n    return this;\n  }\n  forEachBefore(time, callback) {\n    const upperBound = this._search(time);\n    if (upperBound !== -1) {\n      this._iterate(callback, 0, upperBound);\n    }\n    return this;\n  }\n  forEachAfter(time, callback) {\n    const lowerBound = this._search(time);\n    this._iterate(callback, lowerBound + 1);\n    return this;\n  }\n  forEachBetween(startTime, endTime, callback) {\n    let lowerBound = this._search(startTime);\n    let upperBound = this._search(endTime);\n    if (lowerBound !== -1 && upperBound !== -1) {\n      if (this._timeline[lowerBound].time !== startTime) {\n        lowerBound += 1;\n      }\n      if (this._timeline[upperBound].time === endTime) {\n        upperBound -= 1;\n      }\n      this._iterate(callback, lowerBound, upperBound);\n    } else if (lowerBound === -1) {\n      this._iterate(callback, 0, upperBound);\n    }\n    return this;\n  }\n  forEachFrom(time, callback) {\n    let lowerBound = this._search(time);\n    while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n      lowerBound--;\n    }\n    this._iterate(callback, lowerBound + 1);\n    return this;\n  }\n  forEachAtTime(time, callback) {\n    const upperBound = this._search(time);\n    if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n      let lowerBound = upperBound;\n      for (let i = upperBound; i >= 0; i--) {\n        if (EQ(this._timeline[i].time, time)) {\n          lowerBound = i;\n        } else {\n          break;\n        }\n      }\n      this._iterate((event) => {\n        callback(event);\n      }, lowerBound, upperBound);\n    }\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._timeline = [];\n    return this;\n  }\n}\nconst notifyNewContext = [];\nfunction onContextInit(cb) {\n  notifyNewContext.push(cb);\n}\nfunction initializeContext(ctx) {\n  notifyNewContext.forEach((cb) => cb(ctx));\n}\nconst notifyCloseContext = [];\nfunction onContextClose(cb) {\n  notifyCloseContext.push(cb);\n}\nfunction closeContext(ctx) {\n  notifyCloseContext.forEach((cb) => cb(ctx));\n}\nclass Emitter extends Tone {\n  constructor() {\n    super(...arguments);\n    this.name = \"Emitter\";\n  }\n  on(event, callback) {\n    const events = event.split(/\\W+/);\n    events.forEach((eventName) => {\n      if (isUndef(this._events)) {\n        this._events = {};\n      }\n      if (!this._events.hasOwnProperty(eventName)) {\n        this._events[eventName] = [];\n      }\n      this._events[eventName].push(callback);\n    });\n    return this;\n  }\n  once(event, callback) {\n    const boundCallback = (...args) => {\n      callback(...args);\n      this.off(event, boundCallback);\n    };\n    this.on(event, boundCallback);\n    return this;\n  }\n  off(event, callback) {\n    const events = event.split(/\\W+/);\n    events.forEach((eventName) => {\n      if (isUndef(this._events)) {\n        this._events = {};\n      }\n      if (this._events.hasOwnProperty(eventName)) {\n        if (isUndef(callback)) {\n          this._events[eventName] = [];\n        } else {\n          const eventList = this._events[eventName];\n          for (let i = eventList.length - 1; i >= 0; i--) {\n            if (eventList[i] === callback) {\n              eventList.splice(i, 1);\n            }\n          }\n        }\n      }\n    });\n    return this;\n  }\n  emit(event, ...args) {\n    if (this._events) {\n      if (this._events.hasOwnProperty(event)) {\n        const eventList = this._events[event].slice(0);\n        for (let i = 0, len = eventList.length; i < len; i++) {\n          eventList[i].apply(this, args);\n        }\n      }\n    }\n    return this;\n  }\n  static mixin(constr) {\n    [\"on\", \"once\", \"off\", \"emit\"].forEach((name) => {\n      const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n      Object.defineProperty(constr.prototype, name, property);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._events = void 0;\n    return this;\n  }\n}\nclass BaseContext extends Emitter {\n  constructor() {\n    super(...arguments);\n    this.isOffline = false;\n  }\n  toJSON() {\n    return {};\n  }\n}\nclass Context extends BaseContext {\n  constructor() {\n    var _a, _b;\n    super();\n    this.name = \"Context\";\n    this._constants = /* @__PURE__ */ new Map();\n    this._timeouts = new Timeline();\n    this._timeoutIds = 0;\n    this._initialized = false;\n    this.isOffline = false;\n    this._workletPromise = null;\n    const options = optionsFromArguments(Context.getDefaults(), arguments, [\n      \"context\"\n    ]);\n    if (options.context) {\n      this._context = options.context;\n      this._latencyHint = ((_a = arguments[0]) === null || _a === void 0 ? void 0 : _a.latencyHint) || \"\";\n    } else {\n      this._context = createAudioContext({\n        latencyHint: options.latencyHint\n      });\n      this._latencyHint = options.latencyHint;\n    }\n    this._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval, this._context.sampleRate);\n    this.on(\"tick\", this._timeoutLoop.bind(this));\n    this._context.onstatechange = () => {\n      this.emit(\"statechange\", this.state);\n    };\n    this[((_b = arguments[0]) === null || _b === void 0 ? void 0 : _b.hasOwnProperty(\"updateInterval\")) ? \"_lookAhead\" : \"lookAhead\"] = options.lookAhead;\n  }\n  static getDefaults() {\n    return {\n      clockSource: \"worker\",\n      latencyHint: \"interactive\",\n      lookAhead: 0.1,\n      updateInterval: 0.05\n    };\n  }\n  initialize() {\n    if (!this._initialized) {\n      initializeContext(this);\n      this._initialized = true;\n    }\n    return this;\n  }\n  createAnalyser() {\n    return this._context.createAnalyser();\n  }\n  createOscillator() {\n    return this._context.createOscillator();\n  }\n  createBufferSource() {\n    return this._context.createBufferSource();\n  }\n  createBiquadFilter() {\n    return this._context.createBiquadFilter();\n  }\n  createBuffer(numberOfChannels, length, sampleRate) {\n    return this._context.createBuffer(numberOfChannels, length, sampleRate);\n  }\n  createChannelMerger(numberOfInputs) {\n    return this._context.createChannelMerger(numberOfInputs);\n  }\n  createChannelSplitter(numberOfOutputs) {\n    return this._context.createChannelSplitter(numberOfOutputs);\n  }\n  createConstantSource() {\n    return this._context.createConstantSource();\n  }\n  createConvolver() {\n    return this._context.createConvolver();\n  }\n  createDelay(maxDelayTime) {\n    return this._context.createDelay(maxDelayTime);\n  }\n  createDynamicsCompressor() {\n    return this._context.createDynamicsCompressor();\n  }\n  createGain() {\n    return this._context.createGain();\n  }\n  createIIRFilter(feedForward, feedback) {\n    return this._context.createIIRFilter(feedForward, feedback);\n  }\n  createPanner() {\n    return this._context.createPanner();\n  }\n  createPeriodicWave(real, imag, constraints) {\n    return this._context.createPeriodicWave(real, imag, constraints);\n  }\n  createStereoPanner() {\n    return this._context.createStereoPanner();\n  }\n  createWaveShaper() {\n    return this._context.createWaveShaper();\n  }\n  createMediaStreamSource(stream) {\n    assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n    const context2 = this._context;\n    return context2.createMediaStreamSource(stream);\n  }\n  createMediaElementSource(element) {\n    assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n    const context2 = this._context;\n    return context2.createMediaElementSource(element);\n  }\n  createMediaStreamDestination() {\n    assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n    const context2 = this._context;\n    return context2.createMediaStreamDestination();\n  }\n  decodeAudioData(audioData) {\n    return this._context.decodeAudioData(audioData);\n  }\n  get currentTime() {\n    return this._context.currentTime;\n  }\n  get state() {\n    return this._context.state;\n  }\n  get sampleRate() {\n    return this._context.sampleRate;\n  }\n  get listener() {\n    this.initialize();\n    return this._listener;\n  }\n  set listener(l) {\n    assert(!this._initialized, \"The listener cannot be set after initialization.\");\n    this._listener = l;\n  }\n  get transport() {\n    this.initialize();\n    return this._transport;\n  }\n  set transport(t) {\n    assert(!this._initialized, \"The transport cannot be set after initialization.\");\n    this._transport = t;\n  }\n  get draw() {\n    this.initialize();\n    return this._draw;\n  }\n  set draw(d) {\n    assert(!this._initialized, \"Draw cannot be set after initialization.\");\n    this._draw = d;\n  }\n  get destination() {\n    this.initialize();\n    return this._destination;\n  }\n  set destination(d) {\n    assert(!this._initialized, \"The destination cannot be set after initialization.\");\n    this._destination = d;\n  }\n  createAudioWorkletNode(name, options) {\n    return createAudioWorkletNode(this.rawContext, name, options);\n  }\n  addAudioWorkletModule(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n      assert(isDefined(this.rawContext.audioWorklet), \"AudioWorkletNode is only available in a secure context (https or localhost)\");\n      if (!this._workletPromise) {\n        this._workletPromise = this.rawContext.audioWorklet.addModule(url);\n      }\n      yield this._workletPromise;\n    });\n  }\n  workletsAreReady() {\n    return __awaiter(this, void 0, void 0, function* () {\n      (yield this._workletPromise) ? this._workletPromise : Promise.resolve();\n    });\n  }\n  get updateInterval() {\n    return this._ticker.updateInterval;\n  }\n  set updateInterval(interval) {\n    this._ticker.updateInterval = interval;\n  }\n  get clockSource() {\n    return this._ticker.type;\n  }\n  set clockSource(type) {\n    this._ticker.type = type;\n  }\n  get lookAhead() {\n    return this._lookAhead;\n  }\n  set lookAhead(time) {\n    this._lookAhead = time;\n    this.updateInterval = time ? time / 2 : 0.01;\n  }\n  get latencyHint() {\n    return this._latencyHint;\n  }\n  get rawContext() {\n    return this._context;\n  }\n  now() {\n    return this._context.currentTime + this._lookAhead;\n  }\n  immediate() {\n    return this._context.currentTime;\n  }\n  resume() {\n    if (isAudioContext(this._context)) {\n      return this._context.resume();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  close() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (isAudioContext(this._context)) {\n        yield this._context.close();\n      }\n      if (this._initialized) {\n        closeContext(this);\n      }\n    });\n  }\n  getConstant(val) {\n    if (this._constants.has(val)) {\n      return this._constants.get(val);\n    } else {\n      const buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n      const arr = buffer.getChannelData(0);\n      for (let i = 0; i < arr.length; i++) {\n        arr[i] = val;\n      }\n      const constant = this._context.createBufferSource();\n      constant.channelCount = 1;\n      constant.channelCountMode = \"explicit\";\n      constant.buffer = buffer;\n      constant.loop = true;\n      constant.start(0);\n      this._constants.set(val, constant);\n      return constant;\n    }\n  }\n  dispose() {\n    super.dispose();\n    this._ticker.dispose();\n    this._timeouts.dispose();\n    Object.keys(this._constants).map((val) => this._constants[val].disconnect());\n    return this;\n  }\n  _timeoutLoop() {\n    const now2 = this.now();\n    let firstEvent = this._timeouts.peek();\n    while (this._timeouts.length && firstEvent && firstEvent.time <= now2) {\n      firstEvent.callback();\n      this._timeouts.shift();\n      firstEvent = this._timeouts.peek();\n    }\n  }\n  setTimeout(fn, timeout) {\n    this._timeoutIds++;\n    const now2 = this.now();\n    this._timeouts.add({\n      callback: fn,\n      id: this._timeoutIds,\n      time: now2 + timeout\n    });\n    return this._timeoutIds;\n  }\n  clearTimeout(id) {\n    this._timeouts.forEach((event) => {\n      if (event.id === id) {\n        this._timeouts.remove(event);\n      }\n    });\n    return this;\n  }\n  clearInterval(id) {\n    return this.clearTimeout(id);\n  }\n  setInterval(fn, interval) {\n    const id = ++this._timeoutIds;\n    const intervalFn = () => {\n      const now2 = this.now();\n      this._timeouts.add({\n        callback: () => {\n          fn();\n          intervalFn();\n        },\n        id,\n        time: now2 + interval\n      });\n    };\n    intervalFn();\n    return id;\n  }\n}\nclass DummyContext extends BaseContext {\n  constructor() {\n    super(...arguments);\n    this.lookAhead = 0;\n    this.latencyHint = 0;\n    this.isOffline = false;\n  }\n  createAnalyser() {\n    return {};\n  }\n  createOscillator() {\n    return {};\n  }\n  createBufferSource() {\n    return {};\n  }\n  createBiquadFilter() {\n    return {};\n  }\n  createBuffer(_numberOfChannels, _length, _sampleRate) {\n    return {};\n  }\n  createChannelMerger(_numberOfInputs) {\n    return {};\n  }\n  createChannelSplitter(_numberOfOutputs) {\n    return {};\n  }\n  createConstantSource() {\n    return {};\n  }\n  createConvolver() {\n    return {};\n  }\n  createDelay(_maxDelayTime) {\n    return {};\n  }\n  createDynamicsCompressor() {\n    return {};\n  }\n  createGain() {\n    return {};\n  }\n  createIIRFilter(_feedForward, _feedback) {\n    return {};\n  }\n  createPanner() {\n    return {};\n  }\n  createPeriodicWave(_real, _imag, _constraints) {\n    return {};\n  }\n  createStereoPanner() {\n    return {};\n  }\n  createWaveShaper() {\n    return {};\n  }\n  createMediaStreamSource(_stream) {\n    return {};\n  }\n  createMediaElementSource(_element) {\n    return {};\n  }\n  createMediaStreamDestination() {\n    return {};\n  }\n  decodeAudioData(_audioData) {\n    return Promise.resolve({});\n  }\n  createAudioWorkletNode(_name, _options) {\n    return {};\n  }\n  get rawContext() {\n    return {};\n  }\n  addAudioWorkletModule(_url) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Promise.resolve();\n    });\n  }\n  resume() {\n    return Promise.resolve();\n  }\n  setTimeout(_fn, _timeout) {\n    return 0;\n  }\n  clearTimeout(_id) {\n    return this;\n  }\n  setInterval(_fn, _interval) {\n    return 0;\n  }\n  clearInterval(_id) {\n    return this;\n  }\n  getConstant(_val) {\n    return {};\n  }\n  get currentTime() {\n    return 0;\n  }\n  get state() {\n    return {};\n  }\n  get sampleRate() {\n    return 0;\n  }\n  get listener() {\n    return {};\n  }\n  get transport() {\n    return {};\n  }\n  get draw() {\n    return {};\n  }\n  set draw(_d) {\n  }\n  get destination() {\n    return {};\n  }\n  set destination(_d) {\n  }\n  now() {\n    return 0;\n  }\n  immediate() {\n    return 0;\n  }\n}\nfunction readOnly(target, property) {\n  if (isArray(property)) {\n    property.forEach((str) => readOnly(target, str));\n  } else {\n    Object.defineProperty(target, property, {\n      enumerable: true,\n      writable: false\n    });\n  }\n}\nfunction writable(target, property) {\n  if (isArray(property)) {\n    property.forEach((str) => writable(target, str));\n  } else {\n    Object.defineProperty(target, property, {\n      writable: true\n    });\n  }\n}\nconst noOp = () => {\n};\nclass ToneAudioBuffer extends Tone {\n  constructor() {\n    super();\n    this.name = \"ToneAudioBuffer\";\n    this.onload = noOp;\n    const options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n    this.reverse = options.reverse;\n    this.onload = options.onload;\n    if (isString(options.url)) {\n      this.load(options.url).catch(options.onerror);\n    } else if (options.url) {\n      this.set(options.url);\n    }\n  }\n  static getDefaults() {\n    return {\n      onerror: noOp,\n      onload: noOp,\n      reverse: false\n    };\n  }\n  get sampleRate() {\n    if (this._buffer) {\n      return this._buffer.sampleRate;\n    } else {\n      return getContext().sampleRate;\n    }\n  }\n  set(buffer) {\n    if (buffer instanceof ToneAudioBuffer) {\n      if (buffer.loaded) {\n        this._buffer = buffer.get();\n      } else {\n        buffer.onload = () => {\n          this.set(buffer);\n          this.onload(this);\n        };\n      }\n    } else {\n      this._buffer = buffer;\n    }\n    if (this._reversed) {\n      this._reverse();\n    }\n    return this;\n  }\n  get() {\n    return this._buffer;\n  }\n  load(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const doneLoading = ToneAudioBuffer.load(url).then((audioBuffer) => {\n        this.set(audioBuffer);\n        this.onload(this);\n      });\n      ToneAudioBuffer.downloads.push(doneLoading);\n      try {\n        yield doneLoading;\n      } finally {\n        const index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n        ToneAudioBuffer.downloads.splice(index, 1);\n      }\n      return this;\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._buffer = void 0;\n    return this;\n  }\n  fromArray(array) {\n    const isMultidimensional = isArray(array) && array[0].length > 0;\n    const channels = isMultidimensional ? array.length : 1;\n    const len = isMultidimensional ? array[0].length : array.length;\n    const context2 = getContext();\n    const buffer = context2.createBuffer(channels, len, context2.sampleRate);\n    const multiChannelArray = !isMultidimensional && channels === 1 ? [array] : array;\n    for (let c = 0; c < channels; c++) {\n      buffer.copyToChannel(multiChannelArray[c], c);\n    }\n    this._buffer = buffer;\n    return this;\n  }\n  toMono(chanNum) {\n    if (isNumber(chanNum)) {\n      this.fromArray(this.toArray(chanNum));\n    } else {\n      let outputArray = new Float32Array(this.length);\n      const numChannels = this.numberOfChannels;\n      for (let channel = 0; channel < numChannels; channel++) {\n        const channelArray = this.toArray(channel);\n        for (let i = 0; i < channelArray.length; i++) {\n          outputArray[i] += channelArray[i];\n        }\n      }\n      outputArray = outputArray.map((sample) => sample / numChannels);\n      this.fromArray(outputArray);\n    }\n    return this;\n  }\n  toArray(channel) {\n    if (isNumber(channel)) {\n      return this.getChannelData(channel);\n    } else if (this.numberOfChannels === 1) {\n      return this.toArray(0);\n    } else {\n      const ret = [];\n      for (let c = 0; c < this.numberOfChannels; c++) {\n        ret[c] = this.getChannelData(c);\n      }\n      return ret;\n    }\n  }\n  getChannelData(channel) {\n    if (this._buffer) {\n      return this._buffer.getChannelData(channel);\n    } else {\n      return new Float32Array(0);\n    }\n  }\n  slice(start2, end = this.duration) {\n    assert(this.loaded, \"Buffer is not loaded\");\n    const startSamples = Math.floor(start2 * this.sampleRate);\n    const endSamples = Math.floor(end * this.sampleRate);\n    assert(startSamples < endSamples, \"The start time must be less than the end time\");\n    const length = endSamples - startSamples;\n    const retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n    for (let channel = 0; channel < this.numberOfChannels; channel++) {\n      retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n    }\n    return new ToneAudioBuffer(retBuffer);\n  }\n  _reverse() {\n    if (this.loaded) {\n      for (let i = 0; i < this.numberOfChannels; i++) {\n        this.getChannelData(i).reverse();\n      }\n    }\n    return this;\n  }\n  get loaded() {\n    return this.length > 0;\n  }\n  get duration() {\n    if (this._buffer) {\n      return this._buffer.duration;\n    } else {\n      return 0;\n    }\n  }\n  get length() {\n    if (this._buffer) {\n      return this._buffer.length;\n    } else {\n      return 0;\n    }\n  }\n  get numberOfChannels() {\n    if (this._buffer) {\n      return this._buffer.numberOfChannels;\n    } else {\n      return 0;\n    }\n  }\n  get reverse() {\n    return this._reversed;\n  }\n  set reverse(rev) {\n    if (this._reversed !== rev) {\n      this._reversed = rev;\n      this._reverse();\n    }\n  }\n  static fromArray(array) {\n    return new ToneAudioBuffer().fromArray(array);\n  }\n  static fromUrl(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const buffer = new ToneAudioBuffer();\n      return yield buffer.load(url);\n    });\n  }\n  static load(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const matches = url.match(/\\[([^\\]\\[]+\\|.+)\\]$/);\n      if (matches) {\n        const extensions = matches[1].split(\"|\");\n        let extension = extensions[0];\n        for (const ext of extensions) {\n          if (ToneAudioBuffer.supportsType(ext)) {\n            extension = ext;\n            break;\n          }\n        }\n        url = url.replace(matches[0], extension);\n      }\n      const baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n      const location = document.createElement(\"a\");\n      location.href = baseUrl + url;\n      location.pathname = (location.pathname + location.hash).split(\"/\").map(encodeURIComponent).join(\"/\");\n      const response = yield fetch(location.href);\n      if (!response.ok) {\n        throw new Error(`could not load url: ${url}`);\n      }\n      const arrayBuffer = yield response.arrayBuffer();\n      const audioBuffer = yield getContext().decodeAudioData(arrayBuffer);\n      return audioBuffer;\n    });\n  }\n  static supportsType(url) {\n    const extensions = url.split(\".\");\n    const extension = extensions[extensions.length - 1];\n    const response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n    return response !== \"\";\n  }\n  static loaded() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield Promise.resolve();\n      while (ToneAudioBuffer.downloads.length) {\n        yield ToneAudioBuffer.downloads[0];\n      }\n    });\n  }\n}\nToneAudioBuffer.baseUrl = \"\";\nToneAudioBuffer.downloads = [];\nclass OfflineContext extends Context {\n  constructor() {\n    super({\n      clockSource: \"offline\",\n      context: isOfflineAudioContext(arguments[0]) ? arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n      lookAhead: 0,\n      updateInterval: isOfflineAudioContext(arguments[0]) ? 128 / arguments[0].sampleRate : 128 / arguments[2]\n    });\n    this.name = \"OfflineContext\";\n    this._currentTime = 0;\n    this.isOffline = true;\n    this._duration = isOfflineAudioContext(arguments[0]) ? arguments[0].length / arguments[0].sampleRate : arguments[1];\n  }\n  now() {\n    return this._currentTime;\n  }\n  get currentTime() {\n    return this._currentTime;\n  }\n  _renderClock(asynchronous) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let index = 0;\n      while (this._duration - this._currentTime >= 0) {\n        this.emit(\"tick\");\n        this._currentTime += 128 / this.sampleRate;\n        index++;\n        const yieldEvery = Math.floor(this.sampleRate / 128);\n        if (asynchronous && index % yieldEvery === 0) {\n          yield new Promise((done) => setTimeout(done, 1));\n        }\n      }\n    });\n  }\n  render(asynchronous = true) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.workletsAreReady();\n      yield this._renderClock(asynchronous);\n      const buffer = yield this._context.startRendering();\n      return new ToneAudioBuffer(buffer);\n    });\n  }\n  close() {\n    return Promise.resolve();\n  }\n}\nconst dummyContext = new DummyContext();\nlet globalContext = dummyContext;\nfunction getContext() {\n  if (globalContext === dummyContext && hasAudioContext) {\n    setContext(new Context());\n  }\n  return globalContext;\n}\nfunction setContext(context2, disposeOld = false) {\n  if (disposeOld) {\n    globalContext.dispose();\n  }\n  if (isAudioContext(context2)) {\n    globalContext = new Context(context2);\n  } else if (isOfflineAudioContext(context2)) {\n    globalContext = new OfflineContext(context2);\n  } else {\n    globalContext = context2;\n  }\n}\nfunction start() {\n  return globalContext.resume();\n}\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n  let prefix = \"v\";\n  const printString = ` * Tone.js ${prefix}${version} * `;\n  console.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\nfunction dbToGain(db) {\n  return Math.pow(10, db / 20);\n}\nfunction gainToDb(gain) {\n  return 20 * (Math.log(gain) / Math.LN10);\n}\nfunction intervalToFrequencyRatio(interval) {\n  return Math.pow(2, interval / 12);\n}\nlet A4 = 440;\nfunction getA4() {\n  return A4;\n}\nfunction setA4(freq) {\n  A4 = freq;\n}\nfunction ftom(frequency) {\n  return Math.round(ftomf(frequency));\n}\nfunction ftomf(frequency) {\n  return 69 + 12 * Math.log2(frequency / A4);\n}\nfunction mtof(midi) {\n  return A4 * Math.pow(2, (midi - 69) / 12);\n}\nclass TimeBaseClass extends Tone {\n  constructor(context2, value, units) {\n    super();\n    this.defaultUnits = \"s\";\n    this._val = value;\n    this._units = units;\n    this.context = context2;\n    this._expressions = this._getExpressions();\n  }\n  _getExpressions() {\n    return {\n      hz: {\n        method: (value) => {\n          return this._frequencyToUnits(parseFloat(value));\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?)hz$/i\n      },\n      i: {\n        method: (value) => {\n          return this._ticksToUnits(parseInt(value, 10));\n        },\n        regexp: /^(\\d+)i$/i\n      },\n      m: {\n        method: (value) => {\n          return this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n        },\n        regexp: /^(\\d+)m$/i\n      },\n      n: {\n        method: (value, dot) => {\n          const numericValue = parseInt(value, 10);\n          const scalar = dot === \".\" ? 1.5 : 1;\n          if (numericValue === 1) {\n            return this._beatsToUnits(this._getTimeSignature()) * scalar;\n          } else {\n            return this._beatsToUnits(4 / numericValue) * scalar;\n          }\n        },\n        regexp: /^(\\d+)n(\\.?)$/i\n      },\n      number: {\n        method: (value) => {\n          return this._expressions[this.defaultUnits].method.call(this, value);\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?)$/\n      },\n      s: {\n        method: (value) => {\n          return this._secondsToUnits(parseFloat(value));\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?)s$/\n      },\n      samples: {\n        method: (value) => {\n          return parseInt(value, 10) / this.context.sampleRate;\n        },\n        regexp: /^(\\d+)samples$/\n      },\n      t: {\n        method: (value) => {\n          const numericValue = parseInt(value, 10);\n          return this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n        },\n        regexp: /^(\\d+)t$/i\n      },\n      tr: {\n        method: (m, q, s) => {\n          let total = 0;\n          if (m && m !== \"0\") {\n            total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n          }\n          if (q && q !== \"0\") {\n            total += this._beatsToUnits(parseFloat(q));\n          }\n          if (s && s !== \"0\") {\n            total += this._beatsToUnits(parseFloat(s) / 4);\n          }\n          return total;\n        },\n        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/\n      }\n    };\n  }\n  valueOf() {\n    if (this._val instanceof TimeBaseClass) {\n      this.fromType(this._val);\n    }\n    if (isUndef(this._val)) {\n      return this._noArg();\n    } else if (isString(this._val) && isUndef(this._units)) {\n      for (const units in this._expressions) {\n        if (this._expressions[units].regexp.test(this._val.trim())) {\n          this._units = units;\n          break;\n        }\n      }\n    } else if (isObject(this._val)) {\n      let total = 0;\n      for (const typeName in this._val) {\n        if (isDefined(this._val[typeName])) {\n          const quantity = this._val[typeName];\n          const time = new this.constructor(this.context, typeName).valueOf() * quantity;\n          total += time;\n        }\n      }\n      return total;\n    }\n    if (isDefined(this._units)) {\n      const expr = this._expressions[this._units];\n      const matching = this._val.toString().trim().match(expr.regexp);\n      if (matching) {\n        return expr.method.apply(this, matching.slice(1));\n      } else {\n        return expr.method.call(this, this._val);\n      }\n    } else if (isString(this._val)) {\n      return parseFloat(this._val);\n    } else {\n      return this._val;\n    }\n  }\n  _frequencyToUnits(freq) {\n    return 1 / freq;\n  }\n  _beatsToUnits(beats) {\n    return 60 / this._getBpm() * beats;\n  }\n  _secondsToUnits(seconds) {\n    return seconds;\n  }\n  _ticksToUnits(ticks) {\n    return ticks * this._beatsToUnits(1) / this._getPPQ();\n  }\n  _noArg() {\n    return this._now();\n  }\n  _getBpm() {\n    return this.context.transport.bpm.value;\n  }\n  _getTimeSignature() {\n    return this.context.transport.timeSignature;\n  }\n  _getPPQ() {\n    return this.context.transport.PPQ;\n  }\n  fromType(type) {\n    this._units = void 0;\n    switch (this.defaultUnits) {\n      case \"s\":\n        this._val = type.toSeconds();\n        break;\n      case \"i\":\n        this._val = type.toTicks();\n        break;\n      case \"hz\":\n        this._val = type.toFrequency();\n        break;\n      case \"midi\":\n        this._val = type.toMidi();\n        break;\n    }\n    return this;\n  }\n  toFrequency() {\n    return 1 / this.toSeconds();\n  }\n  toSamples() {\n    return this.toSeconds() * this.context.sampleRate;\n  }\n  toMilliseconds() {\n    return this.toSeconds() * 1e3;\n  }\n}\nclass TimeClass extends TimeBaseClass {\n  constructor() {\n    super(...arguments);\n    this.name = \"TimeClass\";\n  }\n  _getExpressions() {\n    return Object.assign(super._getExpressions(), {\n      now: {\n        method: (capture) => {\n          return this._now() + new this.constructor(this.context, capture).valueOf();\n        },\n        regexp: /^\\+(.+)/\n      },\n      quantize: {\n        method: (capture) => {\n          const quantTo = new TimeClass(this.context, capture).valueOf();\n          return this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n        },\n        regexp: /^@(.+)/\n      }\n    });\n  }\n  quantize(subdiv, percent = 1) {\n    const subdivision = new this.constructor(this.context, subdiv).valueOf();\n    const value = this.valueOf();\n    const multiple = Math.round(value / subdivision);\n    const ideal = multiple * subdivision;\n    const diff = ideal - value;\n    return value + diff * percent;\n  }\n  toNotation() {\n    const time = this.toSeconds();\n    const testNotations = [\"1m\"];\n    for (let power = 1; power < 9; power++) {\n      const subdiv = Math.pow(2, power);\n      testNotations.push(subdiv + \"n.\");\n      testNotations.push(subdiv + \"n\");\n      testNotations.push(subdiv + \"t\");\n    }\n    testNotations.push(\"0\");\n    let closest = testNotations[0];\n    let closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n    testNotations.forEach((notation) => {\n      const notationSeconds = new TimeClass(this.context, notation).toSeconds();\n      if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n        closest = notation;\n        closestSeconds = notationSeconds;\n      }\n    });\n    return closest;\n  }\n  toBarsBeatsSixteenths() {\n    const quarterTime = this._beatsToUnits(1);\n    let quarters = this.valueOf() / quarterTime;\n    quarters = parseFloat(quarters.toFixed(4));\n    const measures = Math.floor(quarters / this._getTimeSignature());\n    let sixteenths = quarters % 1 * 4;\n    quarters = Math.floor(quarters) % this._getTimeSignature();\n    const sixteenthString = sixteenths.toString();\n    if (sixteenthString.length > 3) {\n      sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n    }\n    const progress = [measures, quarters, sixteenths];\n    return progress.join(\":\");\n  }\n  toTicks() {\n    const quarterTime = this._beatsToUnits(1);\n    const quarters = this.valueOf() / quarterTime;\n    return quarters * this._getPPQ();\n  }\n  toSeconds() {\n    return this.valueOf();\n  }\n  toMidi() {\n    return ftom(this.toFrequency());\n  }\n  _now() {\n    return this.context.now();\n  }\n}\nfunction Time(value, units) {\n  return new TimeClass(getContext(), value, units);\n}\nclass FrequencyClass extends TimeClass {\n  constructor() {\n    super(...arguments);\n    this.name = \"Frequency\";\n    this.defaultUnits = \"hz\";\n  }\n  static get A4() {\n    return getA4();\n  }\n  static set A4(freq) {\n    setA4(freq);\n  }\n  _getExpressions() {\n    return Object.assign({}, super._getExpressions(), {\n      midi: {\n        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n        method(value) {\n          if (this.defaultUnits === \"midi\") {\n            return value;\n          } else {\n            return FrequencyClass.mtof(value);\n          }\n        }\n      },\n      note: {\n        regexp: /^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,\n        method(pitch, octave) {\n          const index = noteToScaleIndex[pitch.toLowerCase()];\n          const noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n          if (this.defaultUnits === \"midi\") {\n            return noteNumber;\n          } else {\n            return FrequencyClass.mtof(noteNumber);\n          }\n        }\n      },\n      tr: {\n        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n        method(m, q, s) {\n          let total = 1;\n          if (m && m !== \"0\") {\n            total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n          }\n          if (q && q !== \"0\") {\n            total *= this._beatsToUnits(parseFloat(q));\n          }\n          if (s && s !== \"0\") {\n            total *= this._beatsToUnits(parseFloat(s) / 4);\n          }\n          return total;\n        }\n      }\n    });\n  }\n  transpose(interval) {\n    return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n  }\n  harmonize(intervals) {\n    return intervals.map((interval) => {\n      return this.transpose(interval);\n    });\n  }\n  toMidi() {\n    return ftom(this.valueOf());\n  }\n  toNote() {\n    const freq = this.toFrequency();\n    const log2 = Math.log2(freq / FrequencyClass.A4);\n    let noteNumber = Math.round(12 * log2) + 57;\n    const octave = Math.floor(noteNumber / 12);\n    if (octave < 0) {\n      noteNumber += -12 * octave;\n    }\n    const noteName = scaleIndexToNote[noteNumber % 12];\n    return noteName + octave.toString();\n  }\n  toSeconds() {\n    return 1 / super.toSeconds();\n  }\n  toTicks() {\n    const quarterTime = this._beatsToUnits(1);\n    const quarters = this.valueOf() / quarterTime;\n    return Math.floor(quarters * this._getPPQ());\n  }\n  _noArg() {\n    return 0;\n  }\n  _frequencyToUnits(freq) {\n    return freq;\n  }\n  _ticksToUnits(ticks) {\n    return 1 / (ticks * 60 / (this._getBpm() * this._getPPQ()));\n  }\n  _beatsToUnits(beats) {\n    return 1 / super._beatsToUnits(beats);\n  }\n  _secondsToUnits(seconds) {\n    return 1 / seconds;\n  }\n  static mtof(midi) {\n    return mtof(midi);\n  }\n  static ftom(frequency) {\n    return ftom(frequency);\n  }\n}\nconst noteToScaleIndex = {\n  cbbb: -3,\n  cbb: -2,\n  cb: -1,\n  c: 0,\n  \"c#\": 1,\n  cx: 2,\n  \"c##\": 2,\n  \"c###\": 3,\n  \"cx#\": 3,\n  \"c#x\": 3,\n  dbbb: -1,\n  dbb: 0,\n  db: 1,\n  d: 2,\n  \"d#\": 3,\n  dx: 4,\n  \"d##\": 4,\n  \"d###\": 5,\n  \"dx#\": 5,\n  \"d#x\": 5,\n  ebbb: 1,\n  ebb: 2,\n  eb: 3,\n  e: 4,\n  \"e#\": 5,\n  ex: 6,\n  \"e##\": 6,\n  \"e###\": 7,\n  \"ex#\": 7,\n  \"e#x\": 7,\n  fbbb: 2,\n  fbb: 3,\n  fb: 4,\n  f: 5,\n  \"f#\": 6,\n  fx: 7,\n  \"f##\": 7,\n  \"f###\": 8,\n  \"fx#\": 8,\n  \"f#x\": 8,\n  gbbb: 4,\n  gbb: 5,\n  gb: 6,\n  g: 7,\n  \"g#\": 8,\n  gx: 9,\n  \"g##\": 9,\n  \"g###\": 10,\n  \"gx#\": 10,\n  \"g#x\": 10,\n  abbb: 6,\n  abb: 7,\n  ab: 8,\n  a: 9,\n  \"a#\": 10,\n  ax: 11,\n  \"a##\": 11,\n  \"a###\": 12,\n  \"ax#\": 12,\n  \"a#x\": 12,\n  bbbb: 8,\n  bbb: 9,\n  bb: 10,\n  b: 11,\n  \"b#\": 12,\n  bx: 13,\n  \"b##\": 13,\n  \"b###\": 14,\n  \"bx#\": 14,\n  \"b#x\": 14\n};\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\nfunction Frequency(value, units) {\n  return new FrequencyClass(getContext(), value, units);\n}\nclass TransportTimeClass extends TimeClass {\n  constructor() {\n    super(...arguments);\n    this.name = \"TransportTime\";\n  }\n  _now() {\n    return this.context.transport.seconds;\n  }\n}\nclass ToneWithContext extends Tone {\n  constructor() {\n    super();\n    const options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n    if (this.defaultContext) {\n      this.context = this.defaultContext;\n    } else {\n      this.context = options.context;\n    }\n  }\n  static getDefaults() {\n    return {\n      context: getContext()\n    };\n  }\n  now() {\n    return this.context.currentTime + this.context.lookAhead;\n  }\n  immediate() {\n    return this.context.currentTime;\n  }\n  get sampleTime() {\n    return 1 / this.context.sampleRate;\n  }\n  get blockTime() {\n    return 128 / this.context.sampleRate;\n  }\n  toSeconds(time) {\n    assertUsedScheduleTime(time);\n    return new TimeClass(this.context, time).toSeconds();\n  }\n  toFrequency(freq) {\n    return new FrequencyClass(this.context, freq).toFrequency();\n  }\n  toTicks(time) {\n    return new TransportTimeClass(this.context, time).toTicks();\n  }\n  _getPartialProperties(props) {\n    const options = this.get();\n    Object.keys(options).forEach((name) => {\n      if (isUndef(props[name])) {\n        delete options[name];\n      }\n    });\n    return options;\n  }\n  get() {\n    const defaults = getDefaultsFromInstance(this);\n    Object.keys(defaults).forEach((attribute) => {\n      if (Reflect.has(this, attribute)) {\n        const member = this[attribute];\n        if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n          defaults[attribute] = member.value;\n        } else if (member instanceof ToneWithContext) {\n          defaults[attribute] = member._getPartialProperties(defaults[attribute]);\n        } else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n          defaults[attribute] = member;\n        } else {\n          delete defaults[attribute];\n        }\n      }\n    });\n    return defaults;\n  }\n  set(props) {\n    Object.keys(props).forEach((attribute) => {\n      if (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n        if (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n          if (this[attribute].value !== props[attribute]) {\n            this[attribute].value = props[attribute];\n          }\n        } else if (this[attribute] instanceof ToneWithContext) {\n          this[attribute].set(props[attribute]);\n        } else {\n          this[attribute] = props[attribute];\n        }\n      }\n    });\n    return this;\n  }\n}\nclass StateTimeline extends Timeline {\n  constructor(initial = \"stopped\") {\n    super();\n    this.name = \"StateTimeline\";\n    this._initial = initial;\n    this.setStateAtTime(this._initial, 0);\n  }\n  getValueAtTime(time) {\n    const event = this.get(time);\n    if (event !== null) {\n      return event.state;\n    } else {\n      return this._initial;\n    }\n  }\n  setStateAtTime(state, time, options) {\n    assertRange(time, 0);\n    this.add(Object.assign({}, options, {\n      state,\n      time\n    }));\n    return this;\n  }\n  getLastState(state, time) {\n    const index = this._search(time);\n    for (let i = index; i >= 0; i--) {\n      const event = this._timeline[i];\n      if (event.state === state) {\n        return event;\n      }\n    }\n  }\n  getNextState(state, time) {\n    const index = this._search(time);\n    if (index !== -1) {\n      for (let i = index; i < this._timeline.length; i++) {\n        const event = this._timeline[i];\n        if (event.state === state) {\n          return event;\n        }\n      }\n    }\n  }\n}\nclass Param extends ToneWithContext {\n  constructor() {\n    super(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n    this.name = \"Param\";\n    this.overridden = false;\n    this._minOutput = 1e-7;\n    const options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n    assert(isDefined(options.param) && (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n    while (!isAudioParam(options.param)) {\n      options.param = options.param._param;\n    }\n    this._swappable = isDefined(options.swappable) ? options.swappable : false;\n    if (this._swappable) {\n      this.input = this.context.createGain();\n      this._param = options.param;\n      this.input.connect(this._param);\n    } else {\n      this._param = this.input = options.param;\n    }\n    this._events = new Timeline(1e3);\n    this._initialValue = this._param.defaultValue;\n    this.units = options.units;\n    this.convert = options.convert;\n    this._minValue = options.minValue;\n    this._maxValue = options.maxValue;\n    if (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n      this.setValueAtTime(options.value, 0);\n    }\n  }\n  static getDefaults() {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      convert: true,\n      units: \"number\"\n    });\n  }\n  get value() {\n    const now2 = this.now();\n    return this.getValueAtTime(now2);\n  }\n  set value(value) {\n    this.cancelScheduledValues(this.now());\n    this.setValueAtTime(value, this.now());\n  }\n  get minValue() {\n    if (isDefined(this._minValue)) {\n      return this._minValue;\n    } else if (this.units === \"time\" || this.units === \"frequency\" || this.units === \"normalRange\" || this.units === \"positive\" || this.units === \"transportTime\" || this.units === \"ticks\" || this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n      return 0;\n    } else if (this.units === \"audioRange\") {\n      return -1;\n    } else if (this.units === \"decibels\") {\n      return -Infinity;\n    } else {\n      return this._param.minValue;\n    }\n  }\n  get maxValue() {\n    if (isDefined(this._maxValue)) {\n      return this._maxValue;\n    } else if (this.units === \"normalRange\" || this.units === \"audioRange\") {\n      return 1;\n    } else {\n      return this._param.maxValue;\n    }\n  }\n  _is(arg, type) {\n    return this.units === type;\n  }\n  _assertRange(value) {\n    if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n      assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n    }\n    return value;\n  }\n  _fromType(val) {\n    if (this.convert && !this.overridden) {\n      if (this._is(val, \"time\")) {\n        return this.toSeconds(val);\n      } else if (this._is(val, \"decibels\")) {\n        return dbToGain(val);\n      } else if (this._is(val, \"frequency\")) {\n        return this.toFrequency(val);\n      } else {\n        return val;\n      }\n    } else if (this.overridden) {\n      return 0;\n    } else {\n      return val;\n    }\n  }\n  _toType(val) {\n    if (this.convert && this.units === \"decibels\") {\n      return gainToDb(val);\n    } else {\n      return val;\n    }\n  }\n  setValueAtTime(value, time) {\n    const computedTime = this.toSeconds(time);\n    const numericValue = this._fromType(value);\n    assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n    this._assertRange(numericValue);\n    this.log(this.units, \"setValueAtTime\", value, computedTime);\n    this._events.add({\n      time: computedTime,\n      type: \"setValueAtTime\",\n      value: numericValue\n    });\n    this._param.setValueAtTime(numericValue, computedTime);\n    return this;\n  }\n  getValueAtTime(time) {\n    const computedTime = Math.max(this.toSeconds(time), 0);\n    const after = this._events.getAfter(computedTime);\n    const before = this._events.get(computedTime);\n    let value = this._initialValue;\n    if (before === null) {\n      value = this._initialValue;\n    } else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n      const previous = this._events.getBefore(before.time);\n      let previousVal;\n      if (previous === null) {\n        previousVal = this._initialValue;\n      } else {\n        previousVal = previous.value;\n      }\n      if (before.type === \"setTargetAtTime\") {\n        value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n      }\n    } else if (after === null) {\n      value = before.value;\n    } else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n      let beforeValue = before.value;\n      if (before.type === \"setTargetAtTime\") {\n        const previous = this._events.getBefore(before.time);\n        if (previous === null) {\n          beforeValue = this._initialValue;\n        } else {\n          beforeValue = previous.value;\n        }\n      }\n      if (after.type === \"linearRampToValueAtTime\") {\n        value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n      } else {\n        value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n      }\n    } else {\n      value = before.value;\n    }\n    return this._toType(value);\n  }\n  setRampPoint(time) {\n    time = this.toSeconds(time);\n    let currentVal = this.getValueAtTime(time);\n    this.cancelAndHoldAtTime(time);\n    if (this._fromType(currentVal) === 0) {\n      currentVal = this._toType(this._minOutput);\n    }\n    this.setValueAtTime(currentVal, time);\n    return this;\n  }\n  linearRampToValueAtTime(value, endTime) {\n    const numericValue = this._fromType(value);\n    const computedTime = this.toSeconds(endTime);\n    assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n    this._assertRange(numericValue);\n    this._events.add({\n      time: computedTime,\n      type: \"linearRampToValueAtTime\",\n      value: numericValue\n    });\n    this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n    this._param.linearRampToValueAtTime(numericValue, computedTime);\n    return this;\n  }\n  exponentialRampToValueAtTime(value, endTime) {\n    let numericValue = this._fromType(value);\n    numericValue = EQ(numericValue, 0) ? this._minOutput : numericValue;\n    this._assertRange(numericValue);\n    const computedTime = this.toSeconds(endTime);\n    assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n    this._events.add({\n      time: computedTime,\n      type: \"exponentialRampToValueAtTime\",\n      value: numericValue\n    });\n    this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n    this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n    return this;\n  }\n  exponentialRampTo(value, rampTime, startTime) {\n    startTime = this.toSeconds(startTime);\n    this.setRampPoint(startTime);\n    this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n    return this;\n  }\n  linearRampTo(value, rampTime, startTime) {\n    startTime = this.toSeconds(startTime);\n    this.setRampPoint(startTime);\n    this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n    return this;\n  }\n  targetRampTo(value, rampTime, startTime) {\n    startTime = this.toSeconds(startTime);\n    this.setRampPoint(startTime);\n    this.exponentialApproachValueAtTime(value, startTime, rampTime);\n    return this;\n  }\n  exponentialApproachValueAtTime(value, time, rampTime) {\n    time = this.toSeconds(time);\n    rampTime = this.toSeconds(rampTime);\n    const timeConstant = Math.log(rampTime + 1) / Math.log(200);\n    this.setTargetAtTime(value, time, timeConstant);\n    this.cancelAndHoldAtTime(time + rampTime * 0.9);\n    this.linearRampToValueAtTime(value, time + rampTime);\n    return this;\n  }\n  setTargetAtTime(value, startTime, timeConstant) {\n    const numericValue = this._fromType(value);\n    assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n    const computedTime = this.toSeconds(startTime);\n    this._assertRange(numericValue);\n    assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n    this._events.add({\n      constant: timeConstant,\n      time: computedTime,\n      type: \"setTargetAtTime\",\n      value: numericValue\n    });\n    this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n    this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n    return this;\n  }\n  setValueCurveAtTime(values, startTime, duration, scaling = 1) {\n    duration = this.toSeconds(duration);\n    startTime = this.toSeconds(startTime);\n    const startingValue = this._fromType(values[0]) * scaling;\n    this.setValueAtTime(this._toType(startingValue), startTime);\n    const segTime = duration / (values.length - 1);\n    for (let i = 1; i < values.length; i++) {\n      const numericValue = this._fromType(values[i]) * scaling;\n      this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n    }\n    return this;\n  }\n  cancelScheduledValues(time) {\n    const computedTime = this.toSeconds(time);\n    assert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n    this._events.cancel(computedTime);\n    this._param.cancelScheduledValues(computedTime);\n    this.log(this.units, \"cancelScheduledValues\", computedTime);\n    return this;\n  }\n  cancelAndHoldAtTime(time) {\n    const computedTime = this.toSeconds(time);\n    const valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n    assert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n    this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n    const before = this._events.get(computedTime);\n    const after = this._events.getAfter(computedTime);\n    if (before && EQ(before.time, computedTime)) {\n      if (after) {\n        this._param.cancelScheduledValues(after.time);\n        this._events.cancel(after.time);\n      } else {\n        this._param.cancelAndHoldAtTime(computedTime);\n        this._events.cancel(computedTime + this.sampleTime);\n      }\n    } else if (after) {\n      this._param.cancelScheduledValues(after.time);\n      this._events.cancel(after.time);\n      if (after.type === \"linearRampToValueAtTime\") {\n        this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n      } else if (after.type === \"exponentialRampToValueAtTime\") {\n        this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n      }\n    }\n    this._events.add({\n      time: computedTime,\n      type: \"setValueAtTime\",\n      value: valueAtTime\n    });\n    this._param.setValueAtTime(valueAtTime, computedTime);\n    return this;\n  }\n  rampTo(value, rampTime = 0.1, startTime) {\n    if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n      this.exponentialRampTo(value, rampTime, startTime);\n    } else {\n      this.linearRampTo(value, rampTime, startTime);\n    }\n    return this;\n  }\n  apply(param) {\n    const now2 = this.context.currentTime;\n    param.setValueAtTime(this.getValueAtTime(now2), now2);\n    const previousEvent = this._events.get(now2);\n    if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n      const nextEvent = this._events.getAfter(previousEvent.time);\n      const endTime = nextEvent ? nextEvent.time : now2 + 2;\n      const subdivisions = (endTime - now2) / 10;\n      for (let i = now2; i < endTime; i += subdivisions) {\n        param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n      }\n    }\n    this._events.forEachAfter(this.context.currentTime, (event) => {\n      if (event.type === \"cancelScheduledValues\") {\n        param.cancelScheduledValues(event.time);\n      } else if (event.type === \"setTargetAtTime\") {\n        param.setTargetAtTime(event.value, event.time, event.constant);\n      } else {\n        param[event.type](event.value, event.time);\n      }\n    });\n    return this;\n  }\n  setParam(param) {\n    assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n    const input = this.input;\n    input.disconnect(this._param);\n    this.apply(param);\n    this._param = param;\n    input.connect(this._param);\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._events.dispose();\n    return this;\n  }\n  get defaultValue() {\n    return this._toType(this._param.defaultValue);\n  }\n  _exponentialApproach(t0, v0, v1, timeConstant, t) {\n    return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n  }\n  _linearInterpolate(t0, v0, t1, v1, t) {\n    return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n  }\n  _exponentialInterpolate(t0, v0, t1, v1, t) {\n    return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n  }\n}\nclass ToneAudioNode extends ToneWithContext {\n  constructor() {\n    super(...arguments);\n    this._internalChannels = [];\n  }\n  get numberOfInputs() {\n    if (isDefined(this.input)) {\n      if (isAudioParam(this.input) || this.input instanceof Param) {\n        return 1;\n      } else {\n        return this.input.numberOfInputs;\n      }\n    } else {\n      return 0;\n    }\n  }\n  get numberOfOutputs() {\n    if (isDefined(this.output)) {\n      return this.output.numberOfOutputs;\n    } else {\n      return 0;\n    }\n  }\n  _isAudioNode(node) {\n    return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n  }\n  _getInternalNodes() {\n    const nodeList = this._internalChannels.slice(0);\n    if (this._isAudioNode(this.input)) {\n      nodeList.push(this.input);\n    }\n    if (this._isAudioNode(this.output)) {\n      if (this.input !== this.output) {\n        nodeList.push(this.output);\n      }\n    }\n    return nodeList;\n  }\n  _setChannelProperties(options) {\n    const nodeList = this._getInternalNodes();\n    nodeList.forEach((node) => {\n      node.channelCount = options.channelCount;\n      node.channelCountMode = options.channelCountMode;\n      node.channelInterpretation = options.channelInterpretation;\n    });\n  }\n  _getChannelProperties() {\n    const nodeList = this._getInternalNodes();\n    assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n    const node = nodeList[0];\n    return {\n      channelCount: node.channelCount,\n      channelCountMode: node.channelCountMode,\n      channelInterpretation: node.channelInterpretation\n    };\n  }\n  get channelCount() {\n    return this._getChannelProperties().channelCount;\n  }\n  set channelCount(channelCount) {\n    const props = this._getChannelProperties();\n    this._setChannelProperties(Object.assign(props, { channelCount }));\n  }\n  get channelCountMode() {\n    return this._getChannelProperties().channelCountMode;\n  }\n  set channelCountMode(channelCountMode) {\n    const props = this._getChannelProperties();\n    this._setChannelProperties(Object.assign(props, { channelCountMode }));\n  }\n  get channelInterpretation() {\n    return this._getChannelProperties().channelInterpretation;\n  }\n  set channelInterpretation(channelInterpretation) {\n    const props = this._getChannelProperties();\n    this._setChannelProperties(Object.assign(props, { channelInterpretation }));\n  }\n  connect(destination, outputNum = 0, inputNum = 0) {\n    connect(this, destination, outputNum, inputNum);\n    return this;\n  }\n  toDestination() {\n    this.connect(this.context.destination);\n    return this;\n  }\n  toMaster() {\n    warn(\"toMaster() has been renamed toDestination()\");\n    return this.toDestination();\n  }\n  disconnect(destination, outputNum = 0, inputNum = 0) {\n    disconnect(this, destination, outputNum, inputNum);\n    return this;\n  }\n  chain(...nodes) {\n    connectSeries(this, ...nodes);\n    return this;\n  }\n  fan(...nodes) {\n    nodes.forEach((node) => this.connect(node));\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    if (isDefined(this.input)) {\n      if (this.input instanceof ToneAudioNode) {\n        this.input.dispose();\n      } else if (isAudioNode(this.input)) {\n        this.input.disconnect();\n      }\n    }\n    if (isDefined(this.output)) {\n      if (this.output instanceof ToneAudioNode) {\n        this.output.dispose();\n      } else if (isAudioNode(this.output)) {\n        this.output.disconnect();\n      }\n    }\n    this._internalChannels = [];\n    return this;\n  }\n}\nfunction connectSeries(...nodes) {\n  const first = nodes.shift();\n  nodes.reduce((prev, current) => {\n    if (prev instanceof ToneAudioNode) {\n      prev.connect(current);\n    } else if (isAudioNode(prev)) {\n      connect(prev, current);\n    }\n    return current;\n  }, first);\n}\nfunction connect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n  assert(isDefined(srcNode), \"Cannot connect from undefined node\");\n  assert(isDefined(dstNode), \"Cannot connect to undefined node\");\n  if (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n    assert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n  }\n  assert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n  while (dstNode instanceof ToneAudioNode || dstNode instanceof Param) {\n    if (isDefined(dstNode.input)) {\n      dstNode = dstNode.input;\n    }\n  }\n  while (srcNode instanceof ToneAudioNode) {\n    if (isDefined(srcNode.output)) {\n      srcNode = srcNode.output;\n    }\n  }\n  if (isAudioParam(dstNode)) {\n    srcNode.connect(dstNode, outputNumber);\n  } else {\n    srcNode.connect(dstNode, outputNumber, inputNumber);\n  }\n}\nfunction disconnect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n  if (isDefined(dstNode)) {\n    while (dstNode instanceof ToneAudioNode) {\n      dstNode = dstNode.input;\n    }\n  }\n  while (!isAudioNode(srcNode)) {\n    if (isDefined(srcNode.output)) {\n      srcNode = srcNode.output;\n    }\n  }\n  if (isAudioParam(dstNode)) {\n    srcNode.disconnect(dstNode, outputNumber);\n  } else if (isAudioNode(dstNode)) {\n    srcNode.disconnect(dstNode, outputNumber, inputNumber);\n  } else {\n    srcNode.disconnect();\n  }\n}\nclass Gain extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n    this.name = \"Gain\";\n    this._gainNode = this.context.createGain();\n    this.input = this._gainNode;\n    this.output = this._gainNode;\n    const options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n    this.gain = new Param({\n      context: this.context,\n      convert: options.convert,\n      param: this._gainNode.gain,\n      units: options.units,\n      value: options.gain,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    readOnly(this, \"gain\");\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      convert: true,\n      gain: 1,\n      units: \"gain\"\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._gainNode.disconnect();\n    this.gain.dispose();\n    return this;\n  }\n}\nclass OneShotSource extends ToneAudioNode {\n  constructor(options) {\n    super(options);\n    this.onended = noOp;\n    this._startTime = -1;\n    this._stopTime = -1;\n    this._timeout = -1;\n    this.output = new Gain({\n      context: this.context,\n      gain: 0\n    });\n    this._gainNode = this.output;\n    this.getStateAtTime = function(time) {\n      const computedTime = this.toSeconds(time);\n      if (this._startTime !== -1 && computedTime >= this._startTime && (this._stopTime === -1 || computedTime <= this._stopTime)) {\n        return \"started\";\n      } else {\n        return \"stopped\";\n      }\n    };\n    this._fadeIn = options.fadeIn;\n    this._fadeOut = options.fadeOut;\n    this._curve = options.curve;\n    this.onended = options.onended;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      curve: \"linear\",\n      fadeIn: 0,\n      fadeOut: 0,\n      onended: noOp\n    });\n  }\n  _startGain(time, gain = 1) {\n    assert(this._startTime === -1, \"Source cannot be started more than once\");\n    const fadeInTime = this.toSeconds(this._fadeIn);\n    this._startTime = time + fadeInTime;\n    this._startTime = Math.max(this._startTime, this.context.currentTime);\n    if (fadeInTime > 0) {\n      this._gainNode.gain.setValueAtTime(0, time);\n      if (this._curve === \"linear\") {\n        this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n      } else {\n        this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n      }\n    } else {\n      this._gainNode.gain.setValueAtTime(gain, time);\n    }\n    return this;\n  }\n  stop(time) {\n    this.log(\"stop\", time);\n    this._stopGain(this.toSeconds(time));\n    return this;\n  }\n  _stopGain(time) {\n    assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n    this.cancelStop();\n    const fadeOutTime = this.toSeconds(this._fadeOut);\n    this._stopTime = this.toSeconds(time) + fadeOutTime;\n    this._stopTime = Math.max(this._stopTime, this.now());\n    if (fadeOutTime > 0) {\n      if (this._curve === \"linear\") {\n        this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n      } else {\n        this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n      }\n    } else {\n      this._gainNode.gain.cancelAndHoldAtTime(time);\n      this._gainNode.gain.setValueAtTime(0, time);\n    }\n    this.context.clearTimeout(this._timeout);\n    this._timeout = this.context.setTimeout(() => {\n      const additionalTail = this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n      this._stopSource(this.now() + additionalTail);\n      this._onended();\n    }, this._stopTime - this.context.currentTime);\n    return this;\n  }\n  _onended() {\n    if (this.onended !== noOp) {\n      this.onended(this);\n      this.onended = noOp;\n      if (!this.context.isOffline) {\n        const disposeCallback = () => this.dispose();\n        if (typeof window.requestIdleCallback !== \"undefined\") {\n          window.requestIdleCallback(disposeCallback);\n        } else {\n          setTimeout(disposeCallback, 1e3);\n        }\n      }\n    }\n  }\n  get state() {\n    return this.getStateAtTime(this.now());\n  }\n  cancelStop() {\n    this.log(\"cancelStop\");\n    assert(this._startTime !== -1, \"Source is not started\");\n    this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n    this.context.clearTimeout(this._timeout);\n    this._stopTime = -1;\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._gainNode.dispose();\n    this.onended = noOp;\n    return this;\n  }\n}\nclass ToneConstantSource extends OneShotSource {\n  constructor() {\n    super(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n    this.name = \"ToneConstantSource\";\n    this._source = this.context.createConstantSource();\n    const options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n    connect(this._source, this._gainNode);\n    this.offset = new Param({\n      context: this.context,\n      convert: options.convert,\n      param: this._source.offset,\n      units: options.units,\n      value: options.offset,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n  }\n  static getDefaults() {\n    return Object.assign(OneShotSource.getDefaults(), {\n      convert: true,\n      offset: 1,\n      units: \"number\"\n    });\n  }\n  start(time) {\n    const computedTime = this.toSeconds(time);\n    this.log(\"start\", computedTime);\n    this._startGain(computedTime);\n    this._source.start(computedTime);\n    return this;\n  }\n  _stopSource(time) {\n    this._source.stop(time);\n  }\n  dispose() {\n    super.dispose();\n    if (this.state === \"started\") {\n      this.stop();\n    }\n    this._source.disconnect();\n    this.offset.dispose();\n    return this;\n  }\n}\nclass Signal extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n    this.name = \"Signal\";\n    this.override = true;\n    const options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n    this.output = this._constantSource = new ToneConstantSource({\n      context: this.context,\n      convert: options.convert,\n      offset: options.value,\n      units: options.units,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    this._constantSource.start(0);\n    this.input = this._param = this._constantSource.offset;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      convert: true,\n      units: \"number\",\n      value: 0\n    });\n  }\n  connect(destination, outputNum = 0, inputNum = 0) {\n    connectSignal(this, destination, outputNum, inputNum);\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._param.dispose();\n    this._constantSource.dispose();\n    return this;\n  }\n  setValueAtTime(value, time) {\n    this._param.setValueAtTime(value, time);\n    return this;\n  }\n  getValueAtTime(time) {\n    return this._param.getValueAtTime(time);\n  }\n  setRampPoint(time) {\n    this._param.setRampPoint(time);\n    return this;\n  }\n  linearRampToValueAtTime(value, time) {\n    this._param.linearRampToValueAtTime(value, time);\n    return this;\n  }\n  exponentialRampToValueAtTime(value, time) {\n    this._param.exponentialRampToValueAtTime(value, time);\n    return this;\n  }\n  exponentialRampTo(value, rampTime, startTime) {\n    this._param.exponentialRampTo(value, rampTime, startTime);\n    return this;\n  }\n  linearRampTo(value, rampTime, startTime) {\n    this._param.linearRampTo(value, rampTime, startTime);\n    return this;\n  }\n  targetRampTo(value, rampTime, startTime) {\n    this._param.targetRampTo(value, rampTime, startTime);\n    return this;\n  }\n  exponentialApproachValueAtTime(value, time, rampTime) {\n    this._param.exponentialApproachValueAtTime(value, time, rampTime);\n    return this;\n  }\n  setTargetAtTime(value, startTime, timeConstant) {\n    this._param.setTargetAtTime(value, startTime, timeConstant);\n    return this;\n  }\n  setValueCurveAtTime(values, startTime, duration, scaling) {\n    this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n    return this;\n  }\n  cancelScheduledValues(time) {\n    this._param.cancelScheduledValues(time);\n    return this;\n  }\n  cancelAndHoldAtTime(time) {\n    this._param.cancelAndHoldAtTime(time);\n    return this;\n  }\n  rampTo(value, rampTime, startTime) {\n    this._param.rampTo(value, rampTime, startTime);\n    return this;\n  }\n  get value() {\n    return this._param.value;\n  }\n  set value(value) {\n    this._param.value = value;\n  }\n  get convert() {\n    return this._param.convert;\n  }\n  set convert(convert) {\n    this._param.convert = convert;\n  }\n  get units() {\n    return this._param.units;\n  }\n  get overridden() {\n    return this._param.overridden;\n  }\n  set overridden(overridden) {\n    this._param.overridden = overridden;\n  }\n  get maxValue() {\n    return this._param.maxValue;\n  }\n  get minValue() {\n    return this._param.minValue;\n  }\n  apply(param) {\n    this._param.apply(param);\n    return this;\n  }\n}\nfunction connectSignal(signal, destination, outputNum, inputNum) {\n  if (destination instanceof Param || isAudioParam(destination) || destination instanceof Signal && destination.override) {\n    destination.cancelScheduledValues(0);\n    destination.setValueAtTime(0, 0);\n    if (destination instanceof Signal) {\n      destination.overridden = true;\n    }\n  }\n  connect(signal, destination, outputNum, inputNum);\n}\nclass TickParam extends Param {\n  constructor() {\n    super(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n    this.name = \"TickParam\";\n    this._events = new Timeline(Infinity);\n    this._multiplier = 1;\n    const options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n    this._multiplier = options.multiplier;\n    this._events.cancel(0);\n    this._events.add({\n      ticks: 0,\n      time: 0,\n      type: \"setValueAtTime\",\n      value: this._fromType(options.value)\n    });\n    this.setValueAtTime(options.value, 0);\n  }\n  static getDefaults() {\n    return Object.assign(Param.getDefaults(), {\n      multiplier: 1,\n      units: \"hertz\",\n      value: 1\n    });\n  }\n  setTargetAtTime(value, time, constant) {\n    time = this.toSeconds(time);\n    this.setRampPoint(time);\n    const computedValue = this._fromType(value);\n    const prevEvent = this._events.get(time);\n    const segments = Math.round(Math.max(1 / constant, 1));\n    for (let i = 0; i <= segments; i++) {\n      const segTime = constant * i + time;\n      const rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n      this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n    }\n    return this;\n  }\n  setValueAtTime(value, time) {\n    const computedTime = this.toSeconds(time);\n    super.setValueAtTime(value, time);\n    const event = this._events.get(computedTime);\n    const previousEvent = this._events.previousEvent(event);\n    const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n    event.ticks = Math.max(ticksUntilTime, 0);\n    return this;\n  }\n  linearRampToValueAtTime(value, time) {\n    const computedTime = this.toSeconds(time);\n    super.linearRampToValueAtTime(value, time);\n    const event = this._events.get(computedTime);\n    const previousEvent = this._events.previousEvent(event);\n    const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n    event.ticks = Math.max(ticksUntilTime, 0);\n    return this;\n  }\n  exponentialRampToValueAtTime(value, time) {\n    time = this.toSeconds(time);\n    const computedVal = this._fromType(value);\n    const prevEvent = this._events.get(time);\n    const segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n    const segmentDur = (time - prevEvent.time) / segments;\n    for (let i = 0; i <= segments; i++) {\n      const segTime = segmentDur * i + prevEvent.time;\n      const rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n      this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n    }\n    return this;\n  }\n  _getTicksUntilEvent(event, time) {\n    if (event === null) {\n      event = {\n        ticks: 0,\n        time: 0,\n        type: \"setValueAtTime\",\n        value: 0\n      };\n    } else if (isUndef(event.ticks)) {\n      const previousEvent = this._events.previousEvent(event);\n      event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n    }\n    const val0 = this._fromType(this.getValueAtTime(event.time));\n    let val1 = this._fromType(this.getValueAtTime(time));\n    const onTheLineEvent = this._events.get(time);\n    if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n      val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n    }\n    return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n  }\n  getTicksAtTime(time) {\n    const computedTime = this.toSeconds(time);\n    const event = this._events.get(computedTime);\n    return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n  }\n  getDurationOfTicks(ticks, time) {\n    const computedTime = this.toSeconds(time);\n    const currentTick = this.getTicksAtTime(time);\n    return this.getTimeOfTick(currentTick + ticks) - computedTime;\n  }\n  getTimeOfTick(tick) {\n    const before = this._events.get(tick, \"ticks\");\n    const after = this._events.getAfter(tick, \"ticks\");\n    if (before && before.ticks === tick) {\n      return before.time;\n    } else if (before && after && after.type === \"linearRampToValueAtTime\" && before.value !== after.value) {\n      const val0 = this._fromType(this.getValueAtTime(before.time));\n      const val1 = this._fromType(this.getValueAtTime(after.time));\n      const delta = (val1 - val0) / (after.time - before.time);\n      const k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n      const sol1 = (-val0 + k) / delta;\n      const sol2 = (-val0 - k) / delta;\n      return (sol1 > 0 ? sol1 : sol2) + before.time;\n    } else if (before) {\n      if (before.value === 0) {\n        return Infinity;\n      } else {\n        return before.time + (tick - before.ticks) / before.value;\n      }\n    } else {\n      return tick / this._initialValue;\n    }\n  }\n  ticksToTime(ticks, when) {\n    return this.getDurationOfTicks(ticks, when);\n  }\n  timeToTicks(duration, when) {\n    const computedTime = this.toSeconds(when);\n    const computedDuration = this.toSeconds(duration);\n    const startTicks = this.getTicksAtTime(computedTime);\n    const endTicks = this.getTicksAtTime(computedTime + computedDuration);\n    return endTicks - startTicks;\n  }\n  _fromType(val) {\n    if (this.units === \"bpm\" && this.multiplier) {\n      return 1 / (60 / val / this.multiplier);\n    } else {\n      return super._fromType(val);\n    }\n  }\n  _toType(val) {\n    if (this.units === \"bpm\" && this.multiplier) {\n      return val / this.multiplier * 60;\n    } else {\n      return super._toType(val);\n    }\n  }\n  get multiplier() {\n    return this._multiplier;\n  }\n  set multiplier(m) {\n    const currentVal = this.value;\n    this._multiplier = m;\n    this.cancelScheduledValues(0);\n    this.setValueAtTime(currentVal, 0);\n  }\n}\nclass TickSignal extends Signal {\n  constructor() {\n    super(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n    this.name = \"TickSignal\";\n    const options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n    this.input = this._param = new TickParam({\n      context: this.context,\n      convert: options.convert,\n      multiplier: options.multiplier,\n      param: this._constantSource.offset,\n      units: options.units,\n      value: options.value\n    });\n  }\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      multiplier: 1,\n      units: \"hertz\",\n      value: 1\n    });\n  }\n  ticksToTime(ticks, when) {\n    return this._param.ticksToTime(ticks, when);\n  }\n  timeToTicks(duration, when) {\n    return this._param.timeToTicks(duration, when);\n  }\n  getTimeOfTick(tick) {\n    return this._param.getTimeOfTick(tick);\n  }\n  getDurationOfTicks(ticks, time) {\n    return this._param.getDurationOfTicks(ticks, time);\n  }\n  getTicksAtTime(time) {\n    return this._param.getTicksAtTime(time);\n  }\n  get multiplier() {\n    return this._param.multiplier;\n  }\n  set multiplier(m) {\n    this._param.multiplier = m;\n  }\n  dispose() {\n    super.dispose();\n    this._param.dispose();\n    return this;\n  }\n}\nclass TickSource extends ToneWithContext {\n  constructor() {\n    super(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n    this.name = \"TickSource\";\n    this._state = new StateTimeline();\n    this._tickOffset = new Timeline();\n    this._ticksAtTime = new Timeline();\n    this._secondsAtTime = new Timeline();\n    const options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n    this.frequency = new TickSignal({\n      context: this.context,\n      units: options.units,\n      value: options.frequency\n    });\n    readOnly(this, \"frequency\");\n    this._state.setStateAtTime(\"stopped\", 0);\n    this.setTicksAtTime(0, 0);\n  }\n  static getDefaults() {\n    return Object.assign({\n      frequency: 1,\n      units: \"hertz\"\n    }, ToneWithContext.getDefaults());\n  }\n  get state() {\n    return this.getStateAtTime(this.now());\n  }\n  start(time, offset) {\n    const computedTime = this.toSeconds(time);\n    if (this._state.getValueAtTime(computedTime) !== \"started\") {\n      this._state.setStateAtTime(\"started\", computedTime);\n      if (isDefined(offset)) {\n        this.setTicksAtTime(offset, computedTime);\n      }\n      this._ticksAtTime.cancel(computedTime);\n      this._secondsAtTime.cancel(computedTime);\n    }\n    return this;\n  }\n  stop(time) {\n    const computedTime = this.toSeconds(time);\n    if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n      const event = this._state.get(computedTime);\n      if (event && event.time > 0) {\n        this._tickOffset.cancel(event.time);\n        this._state.cancel(event.time);\n      }\n    }\n    this._state.cancel(computedTime);\n    this._state.setStateAtTime(\"stopped\", computedTime);\n    this.setTicksAtTime(0, computedTime);\n    this._ticksAtTime.cancel(computedTime);\n    this._secondsAtTime.cancel(computedTime);\n    return this;\n  }\n  pause(time) {\n    const computedTime = this.toSeconds(time);\n    if (this._state.getValueAtTime(computedTime) === \"started\") {\n      this._state.setStateAtTime(\"paused\", computedTime);\n      this._ticksAtTime.cancel(computedTime);\n      this._secondsAtTime.cancel(computedTime);\n    }\n    return this;\n  }\n  cancel(time) {\n    time = this.toSeconds(time);\n    this._state.cancel(time);\n    this._tickOffset.cancel(time);\n    this._ticksAtTime.cancel(time);\n    this._secondsAtTime.cancel(time);\n    return this;\n  }\n  getTicksAtTime(time) {\n    const computedTime = this.toSeconds(time);\n    const stopEvent = this._state.getLastState(\"stopped\", computedTime);\n    const memoizedEvent = this._ticksAtTime.get(computedTime);\n    const tmpEvent = { state: \"paused\", time: computedTime };\n    this._state.add(tmpEvent);\n    let lastState = memoizedEvent ? memoizedEvent : stopEvent;\n    let elapsedTicks = memoizedEvent ? memoizedEvent.ticks : 0;\n    let eventToMemoize = null;\n    this._state.forEachBetween(lastState.time, computedTime + this.sampleTime, (e) => {\n      let periodStartTime = lastState.time;\n      const offsetEvent = this._tickOffset.get(e.time);\n      if (offsetEvent && offsetEvent.time >= lastState.time) {\n        elapsedTicks = offsetEvent.ticks;\n        periodStartTime = offsetEvent.time;\n      }\n      if (lastState.state === \"started\" && e.state !== \"started\") {\n        elapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n        if (e.time != tmpEvent.time) {\n          eventToMemoize = { state: e.state, time: e.time, ticks: elapsedTicks };\n        }\n      }\n      lastState = e;\n    });\n    this._state.remove(tmpEvent);\n    if (eventToMemoize) {\n      this._ticksAtTime.add(eventToMemoize);\n    }\n    return elapsedTicks;\n  }\n  get ticks() {\n    return this.getTicksAtTime(this.now());\n  }\n  set ticks(t) {\n    this.setTicksAtTime(t, this.now());\n  }\n  get seconds() {\n    return this.getSecondsAtTime(this.now());\n  }\n  set seconds(s) {\n    const now2 = this.now();\n    const ticks = this.frequency.timeToTicks(s, now2);\n    this.setTicksAtTime(ticks, now2);\n  }\n  getSecondsAtTime(time) {\n    time = this.toSeconds(time);\n    const stopEvent = this._state.getLastState(\"stopped\", time);\n    const tmpEvent = { state: \"paused\", time };\n    this._state.add(tmpEvent);\n    const memoizedEvent = this._secondsAtTime.get(time);\n    let lastState = memoizedEvent ? memoizedEvent : stopEvent;\n    let elapsedSeconds = memoizedEvent ? memoizedEvent.seconds : 0;\n    let eventToMemoize = null;\n    this._state.forEachBetween(lastState.time, time + this.sampleTime, (e) => {\n      let periodStartTime = lastState.time;\n      const offsetEvent = this._tickOffset.get(e.time);\n      if (offsetEvent && offsetEvent.time >= lastState.time) {\n        elapsedSeconds = offsetEvent.seconds;\n        periodStartTime = offsetEvent.time;\n      }\n      if (lastState.state === \"started\" && e.state !== \"started\") {\n        elapsedSeconds += e.time - periodStartTime;\n        if (e.time != tmpEvent.time) {\n          eventToMemoize = { state: e.state, time: e.time, seconds: elapsedSeconds };\n        }\n      }\n      lastState = e;\n    });\n    this._state.remove(tmpEvent);\n    if (eventToMemoize) {\n      this._secondsAtTime.add(eventToMemoize);\n    }\n    return elapsedSeconds;\n  }\n  setTicksAtTime(ticks, time) {\n    time = this.toSeconds(time);\n    this._tickOffset.cancel(time);\n    this._tickOffset.add({\n      seconds: this.frequency.getDurationOfTicks(ticks, time),\n      ticks,\n      time\n    });\n    this._ticksAtTime.cancel(time);\n    this._secondsAtTime.cancel(time);\n    return this;\n  }\n  getStateAtTime(time) {\n    time = this.toSeconds(time);\n    return this._state.getValueAtTime(time);\n  }\n  getTimeOfTick(tick, before = this.now()) {\n    const offset = this._tickOffset.get(before);\n    const event = this._state.get(before);\n    const startTime = Math.max(offset.time, event.time);\n    const absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n    return this.frequency.getTimeOfTick(absoluteTicks);\n  }\n  forEachTickBetween(startTime, endTime, callback) {\n    let lastStateEvent = this._state.get(startTime);\n    this._state.forEachBetween(startTime, endTime, (event) => {\n      if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n        this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n      }\n      lastStateEvent = event;\n    });\n    let error = null;\n    if (lastStateEvent && lastStateEvent.state === \"started\") {\n      const maxStartTime = Math.max(lastStateEvent.time, startTime);\n      const startTicks = this.frequency.getTicksAtTime(maxStartTime);\n      const ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n      const diff = startTicks - ticksAtStart;\n      let offset = Math.ceil(diff) - diff;\n      offset = EQ(offset, 1) ? 0 : offset;\n      let nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n      while (nextTickTime < endTime) {\n        try {\n          callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n        } catch (e) {\n          error = e;\n          break;\n        }\n        nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n      }\n    }\n    if (error) {\n      throw error;\n    }\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._state.dispose();\n    this._tickOffset.dispose();\n    this._ticksAtTime.dispose();\n    this._secondsAtTime.dispose();\n    this.frequency.dispose();\n    return this;\n  }\n}\nclass Clock extends ToneWithContext {\n  constructor() {\n    super(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n    this.name = \"Clock\";\n    this.callback = noOp;\n    this._lastUpdate = 0;\n    this._state = new StateTimeline(\"stopped\");\n    this._boundLoop = this._loop.bind(this);\n    const options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n    this.callback = options.callback;\n    this._tickSource = new TickSource({\n      context: this.context,\n      frequency: options.frequency,\n      units: options.units\n    });\n    this._lastUpdate = 0;\n    this.frequency = this._tickSource.frequency;\n    readOnly(this, \"frequency\");\n    this._state.setStateAtTime(\"stopped\", 0);\n    this.context.on(\"tick\", this._boundLoop);\n  }\n  static getDefaults() {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      callback: noOp,\n      frequency: 1,\n      units: \"hertz\"\n    });\n  }\n  get state() {\n    return this._state.getValueAtTime(this.now());\n  }\n  start(time, offset) {\n    assertContextRunning(this.context);\n    const computedTime = this.toSeconds(time);\n    this.log(\"start\", computedTime);\n    if (this._state.getValueAtTime(computedTime) !== \"started\") {\n      this._state.setStateAtTime(\"started\", computedTime);\n      this._tickSource.start(computedTime, offset);\n      if (computedTime < this._lastUpdate) {\n        this.emit(\"start\", computedTime, offset);\n      }\n    }\n    return this;\n  }\n  stop(time) {\n    const computedTime = this.toSeconds(time);\n    this.log(\"stop\", computedTime);\n    this._state.cancel(computedTime);\n    this._state.setStateAtTime(\"stopped\", computedTime);\n    this._tickSource.stop(computedTime);\n    if (computedTime < this._lastUpdate) {\n      this.emit(\"stop\", computedTime);\n    }\n    return this;\n  }\n  pause(time) {\n    const computedTime = this.toSeconds(time);\n    if (this._state.getValueAtTime(computedTime) === \"started\") {\n      this._state.setStateAtTime(\"paused\", computedTime);\n      this._tickSource.pause(computedTime);\n      if (computedTime < this._lastUpdate) {\n        this.emit(\"pause\", computedTime);\n      }\n    }\n    return this;\n  }\n  get ticks() {\n    return Math.ceil(this.getTicksAtTime(this.now()));\n  }\n  set ticks(t) {\n    this._tickSource.ticks = t;\n  }\n  get seconds() {\n    return this._tickSource.seconds;\n  }\n  set seconds(s) {\n    this._tickSource.seconds = s;\n  }\n  getSecondsAtTime(time) {\n    return this._tickSource.getSecondsAtTime(time);\n  }\n  setTicksAtTime(ticks, time) {\n    this._tickSource.setTicksAtTime(ticks, time);\n    return this;\n  }\n  getTimeOfTick(tick, before = this.now()) {\n    return this._tickSource.getTimeOfTick(tick, before);\n  }\n  getTicksAtTime(time) {\n    return this._tickSource.getTicksAtTime(time);\n  }\n  nextTickTime(offset, when) {\n    const computedTime = this.toSeconds(when);\n    const currentTick = this.getTicksAtTime(computedTime);\n    return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n  }\n  _loop() {\n    const startTime = this._lastUpdate;\n    const endTime = this.now();\n    this._lastUpdate = endTime;\n    this.log(\"loop\", startTime, endTime);\n    if (startTime !== endTime) {\n      this._state.forEachBetween(startTime, endTime, (e) => {\n        switch (e.state) {\n          case \"started\":\n            const offset = this._tickSource.getTicksAtTime(e.time);\n            this.emit(\"start\", e.time, offset);\n            break;\n          case \"stopped\":\n            if (e.time !== 0) {\n              this.emit(\"stop\", e.time);\n            }\n            break;\n          case \"paused\":\n            this.emit(\"pause\", e.time);\n            break;\n        }\n      });\n      this._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n        this.callback(time, ticks);\n      });\n    }\n  }\n  getStateAtTime(time) {\n    const computedTime = this.toSeconds(time);\n    return this._state.getValueAtTime(computedTime);\n  }\n  dispose() {\n    super.dispose();\n    this.context.off(\"tick\", this._boundLoop);\n    this._tickSource.dispose();\n    this._state.dispose();\n    return this;\n  }\n}\nEmitter.mixin(Clock);\nclass Delay extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]));\n    this.name = \"Delay\";\n    const options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n    const maxDelayInSeconds = this.toSeconds(options.maxDelay);\n    this._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));\n    this._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);\n    this.delayTime = new Param({\n      context: this.context,\n      param: this._delayNode.delayTime,\n      units: \"time\",\n      value: options.delayTime,\n      minValue: 0,\n      maxValue: this.maxDelay\n    });\n    readOnly(this, \"delayTime\");\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      delayTime: 0,\n      maxDelay: 1\n    });\n  }\n  get maxDelay() {\n    return this._maxDelay;\n  }\n  dispose() {\n    super.dispose();\n    this._delayNode.disconnect();\n    this.delayTime.dispose();\n    return this;\n  }\n}\nclass ToneAudioBuffers extends Tone {\n  constructor() {\n    super();\n    this.name = \"ToneAudioBuffers\";\n    this._buffers = /* @__PURE__ */ new Map();\n    this._loadingCount = 0;\n    const options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n    this.baseUrl = options.baseUrl;\n    Object.keys(options.urls).forEach((name) => {\n      this._loadingCount++;\n      const url = options.urls[name];\n      this.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n    });\n  }\n  static getDefaults() {\n    return {\n      baseUrl: \"\",\n      onerror: noOp,\n      onload: noOp,\n      urls: {}\n    };\n  }\n  has(name) {\n    return this._buffers.has(name.toString());\n  }\n  get(name) {\n    assert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n    return this._buffers.get(name.toString());\n  }\n  _bufferLoaded(callback) {\n    this._loadingCount--;\n    if (this._loadingCount === 0 && callback) {\n      callback();\n    }\n  }\n  get loaded() {\n    return Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n  }\n  add(name, url, callback = noOp, onerror = noOp) {\n    if (isString(url)) {\n      if (this.baseUrl && url.trim().substring(0, 11).toLowerCase() === \"data:audio/\") {\n        this.baseUrl = \"\";\n      }\n      this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n    } else {\n      this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n    }\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._buffers.forEach((buffer) => buffer.dispose());\n    this._buffers.clear();\n    return this;\n  }\n}\nclass MidiClass extends FrequencyClass {\n  constructor() {\n    super(...arguments);\n    this.name = \"MidiClass\";\n    this.defaultUnits = \"midi\";\n  }\n  _frequencyToUnits(freq) {\n    return ftom(super._frequencyToUnits(freq));\n  }\n  _ticksToUnits(ticks) {\n    return ftom(super._ticksToUnits(ticks));\n  }\n  _beatsToUnits(beats) {\n    return ftom(super._beatsToUnits(beats));\n  }\n  _secondsToUnits(seconds) {\n    return ftom(super._secondsToUnits(seconds));\n  }\n  toMidi() {\n    return this.valueOf();\n  }\n  toFrequency() {\n    return mtof(this.toMidi());\n  }\n  transpose(interval) {\n    return new MidiClass(this.context, this.toMidi() + interval);\n  }\n}\nfunction Midi(value, units) {\n  return new MidiClass(getContext(), value, units);\n}\nclass TicksClass extends TransportTimeClass {\n  constructor() {\n    super(...arguments);\n    this.name = \"Ticks\";\n    this.defaultUnits = \"i\";\n  }\n  _now() {\n    return this.context.transport.ticks;\n  }\n  _beatsToUnits(beats) {\n    return this._getPPQ() * beats;\n  }\n  _secondsToUnits(seconds) {\n    return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n  }\n  _ticksToUnits(ticks) {\n    return ticks;\n  }\n  toTicks() {\n    return this.valueOf();\n  }\n  toSeconds() {\n    return this.valueOf() / this._getPPQ() * (60 / this._getBpm());\n  }\n}\nclass Draw$1 extends ToneWithContext {\n  constructor() {\n    super(...arguments);\n    this.name = \"Draw\";\n    this.expiration = 0.25;\n    this.anticipation = 8e-3;\n    this._events = new Timeline();\n    this._boundDrawLoop = this._drawLoop.bind(this);\n    this._animationFrame = -1;\n  }\n  schedule(callback, time) {\n    this._events.add({\n      callback,\n      time: this.toSeconds(time)\n    });\n    if (this._events.length === 1) {\n      this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n    }\n    return this;\n  }\n  cancel(after) {\n    this._events.cancel(this.toSeconds(after));\n    return this;\n  }\n  _drawLoop() {\n    const now2 = this.context.currentTime;\n    while (this._events.length && this._events.peek().time - this.anticipation <= now2) {\n      const event = this._events.shift();\n      if (event && now2 - event.time <= this.expiration) {\n        event.callback();\n      }\n    }\n    if (this._events.length > 0) {\n      this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n    }\n  }\n  dispose() {\n    super.dispose();\n    this._events.dispose();\n    cancelAnimationFrame(this._animationFrame);\n    return this;\n  }\n}\nonContextInit((context2) => {\n  context2.draw = new Draw$1({ context: context2 });\n});\nonContextClose((context2) => {\n  context2.draw.dispose();\n});\nclass IntervalTimeline extends Tone {\n  constructor() {\n    super(...arguments);\n    this.name = \"IntervalTimeline\";\n    this._root = null;\n    this._length = 0;\n  }\n  add(event) {\n    assert(isDefined(event.time), \"Events must have a time property\");\n    assert(isDefined(event.duration), \"Events must have a duration parameter\");\n    event.time = event.time.valueOf();\n    let node = new IntervalNode(event.time, event.time + event.duration, event);\n    if (this._root === null) {\n      this._root = node;\n    } else {\n      this._root.insert(node);\n    }\n    this._length++;\n    while (node !== null) {\n      node.updateHeight();\n      node.updateMax();\n      this._rebalance(node);\n      node = node.parent;\n    }\n    return this;\n  }\n  remove(event) {\n    if (this._root !== null) {\n      const results = [];\n      this._root.search(event.time, results);\n      for (const node of results) {\n        if (node.event === event) {\n          this._removeNode(node);\n          this._length--;\n          break;\n        }\n      }\n    }\n    return this;\n  }\n  get length() {\n    return this._length;\n  }\n  cancel(after) {\n    this.forEachFrom(after, (event) => this.remove(event));\n    return this;\n  }\n  _setRoot(node) {\n    this._root = node;\n    if (this._root !== null) {\n      this._root.parent = null;\n    }\n  }\n  _replaceNodeInParent(node, replacement) {\n    if (node.parent !== null) {\n      if (node.isLeftChild()) {\n        node.parent.left = replacement;\n      } else {\n        node.parent.right = replacement;\n      }\n      this._rebalance(node.parent);\n    } else {\n      this._setRoot(replacement);\n    }\n  }\n  _removeNode(node) {\n    if (node.left === null && node.right === null) {\n      this._replaceNodeInParent(node, null);\n    } else if (node.right === null) {\n      this._replaceNodeInParent(node, node.left);\n    } else if (node.left === null) {\n      this._replaceNodeInParent(node, node.right);\n    } else {\n      const balance = node.getBalance();\n      let replacement;\n      let temp = null;\n      if (balance > 0) {\n        if (node.left.right === null) {\n          replacement = node.left;\n          replacement.right = node.right;\n          temp = replacement;\n        } else {\n          replacement = node.left.right;\n          while (replacement.right !== null) {\n            replacement = replacement.right;\n          }\n          if (replacement.parent) {\n            replacement.parent.right = replacement.left;\n            temp = replacement.parent;\n            replacement.left = node.left;\n            replacement.right = node.right;\n          }\n        }\n      } else if (node.right.left === null) {\n        replacement = node.right;\n        replacement.left = node.left;\n        temp = replacement;\n      } else {\n        replacement = node.right.left;\n        while (replacement.left !== null) {\n          replacement = replacement.left;\n        }\n        if (replacement.parent) {\n          replacement.parent.left = replacement.right;\n          temp = replacement.parent;\n          replacement.left = node.left;\n          replacement.right = node.right;\n        }\n      }\n      if (node.parent !== null) {\n        if (node.isLeftChild()) {\n          node.parent.left = replacement;\n        } else {\n          node.parent.right = replacement;\n        }\n      } else {\n        this._setRoot(replacement);\n      }\n      if (temp) {\n        this._rebalance(temp);\n      }\n    }\n    node.dispose();\n  }\n  _rotateLeft(node) {\n    const parent = node.parent;\n    const isLeftChild = node.isLeftChild();\n    const pivotNode = node.right;\n    if (pivotNode) {\n      node.right = pivotNode.left;\n      pivotNode.left = node;\n    }\n    if (parent !== null) {\n      if (isLeftChild) {\n        parent.left = pivotNode;\n      } else {\n        parent.right = pivotNode;\n      }\n    } else {\n      this._setRoot(pivotNode);\n    }\n  }\n  _rotateRight(node) {\n    const parent = node.parent;\n    const isLeftChild = node.isLeftChild();\n    const pivotNode = node.left;\n    if (pivotNode) {\n      node.left = pivotNode.right;\n      pivotNode.right = node;\n    }\n    if (parent !== null) {\n      if (isLeftChild) {\n        parent.left = pivotNode;\n      } else {\n        parent.right = pivotNode;\n      }\n    } else {\n      this._setRoot(pivotNode);\n    }\n  }\n  _rebalance(node) {\n    const balance = node.getBalance();\n    if (balance > 1 && node.left) {\n      if (node.left.getBalance() < 0) {\n        this._rotateLeft(node.left);\n      } else {\n        this._rotateRight(node);\n      }\n    } else if (balance < -1 && node.right) {\n      if (node.right.getBalance() > 0) {\n        this._rotateRight(node.right);\n      } else {\n        this._rotateLeft(node);\n      }\n    }\n  }\n  get(time) {\n    if (this._root !== null) {\n      const results = [];\n      this._root.search(time, results);\n      if (results.length > 0) {\n        let max = results[0];\n        for (let i = 1; i < results.length; i++) {\n          if (results[i].low > max.low) {\n            max = results[i];\n          }\n        }\n        return max.event;\n      }\n    }\n    return null;\n  }\n  forEach(callback) {\n    if (this._root !== null) {\n      const allNodes = [];\n      this._root.traverse((node) => allNodes.push(node));\n      allNodes.forEach((node) => {\n        if (node.event) {\n          callback(node.event);\n        }\n      });\n    }\n    return this;\n  }\n  forEachAtTime(time, callback) {\n    if (this._root !== null) {\n      const results = [];\n      this._root.search(time, results);\n      results.forEach((node) => {\n        if (node.event) {\n          callback(node.event);\n        }\n      });\n    }\n    return this;\n  }\n  forEachFrom(time, callback) {\n    if (this._root !== null) {\n      const results = [];\n      this._root.searchAfter(time, results);\n      results.forEach((node) => {\n        if (node.event) {\n          callback(node.event);\n        }\n      });\n    }\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    if (this._root !== null) {\n      this._root.traverse((node) => node.dispose());\n    }\n    this._root = null;\n    return this;\n  }\n}\nclass IntervalNode {\n  constructor(low, high, event) {\n    this._left = null;\n    this._right = null;\n    this.parent = null;\n    this.height = 0;\n    this.event = event;\n    this.low = low;\n    this.high = high;\n    this.max = this.high;\n  }\n  insert(node) {\n    if (node.low <= this.low) {\n      if (this.left === null) {\n        this.left = node;\n      } else {\n        this.left.insert(node);\n      }\n    } else if (this.right === null) {\n      this.right = node;\n    } else {\n      this.right.insert(node);\n    }\n  }\n  search(point, results) {\n    if (point > this.max) {\n      return;\n    }\n    if (this.left !== null) {\n      this.left.search(point, results);\n    }\n    if (this.low <= point && this.high > point) {\n      results.push(this);\n    }\n    if (this.low > point) {\n      return;\n    }\n    if (this.right !== null) {\n      this.right.search(point, results);\n    }\n  }\n  searchAfter(point, results) {\n    if (this.low >= point) {\n      results.push(this);\n      if (this.left !== null) {\n        this.left.searchAfter(point, results);\n      }\n    }\n    if (this.right !== null) {\n      this.right.searchAfter(point, results);\n    }\n  }\n  traverse(callback) {\n    callback(this);\n    if (this.left !== null) {\n      this.left.traverse(callback);\n    }\n    if (this.right !== null) {\n      this.right.traverse(callback);\n    }\n  }\n  updateHeight() {\n    if (this.left !== null && this.right !== null) {\n      this.height = Math.max(this.left.height, this.right.height) + 1;\n    } else if (this.right !== null) {\n      this.height = this.right.height + 1;\n    } else if (this.left !== null) {\n      this.height = this.left.height + 1;\n    } else {\n      this.height = 0;\n    }\n  }\n  updateMax() {\n    this.max = this.high;\n    if (this.left !== null) {\n      this.max = Math.max(this.max, this.left.max);\n    }\n    if (this.right !== null) {\n      this.max = Math.max(this.max, this.right.max);\n    }\n  }\n  getBalance() {\n    let balance = 0;\n    if (this.left !== null && this.right !== null) {\n      balance = this.left.height - this.right.height;\n    } else if (this.left !== null) {\n      balance = this.left.height + 1;\n    } else if (this.right !== null) {\n      balance = -(this.right.height + 1);\n    }\n    return balance;\n  }\n  isLeftChild() {\n    return this.parent !== null && this.parent.left === this;\n  }\n  get left() {\n    return this._left;\n  }\n  set left(node) {\n    this._left = node;\n    if (node !== null) {\n      node.parent = this;\n    }\n    this.updateHeight();\n    this.updateMax();\n  }\n  get right() {\n    return this._right;\n  }\n  set right(node) {\n    this._right = node;\n    if (node !== null) {\n      node.parent = this;\n    }\n    this.updateHeight();\n    this.updateMax();\n  }\n  dispose() {\n    this.parent = null;\n    this._left = null;\n    this._right = null;\n    this.event = null;\n  }\n}\nclass Volume extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n    this.name = \"Volume\";\n    const options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n    this.input = this.output = new Gain({\n      context: this.context,\n      gain: options.volume,\n      units: \"decibels\"\n    });\n    this.volume = this.output.gain;\n    readOnly(this, \"volume\");\n    this._unmutedVolume = options.volume;\n    this.mute = options.mute;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      volume: 0\n    });\n  }\n  get mute() {\n    return this.volume.value === -Infinity;\n  }\n  set mute(mute) {\n    if (!this.mute && mute) {\n      this._unmutedVolume = this.volume.value;\n      this.volume.value = -Infinity;\n    } else if (this.mute && !mute) {\n      this.volume.value = this._unmutedVolume;\n    }\n  }\n  dispose() {\n    super.dispose();\n    this.input.dispose();\n    this.volume.dispose();\n    return this;\n  }\n}\nclass Destination extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Destination.getDefaults(), arguments));\n    this.name = \"Destination\";\n    this.input = new Volume({ context: this.context });\n    this.output = new Gain({ context: this.context });\n    this.volume = this.input.volume;\n    const options = optionsFromArguments(Destination.getDefaults(), arguments);\n    connectSeries(this.input, this.output, this.context.rawContext.destination);\n    this.mute = options.mute;\n    this._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      volume: 0\n    });\n  }\n  get mute() {\n    return this.input.mute;\n  }\n  set mute(mute) {\n    this.input.mute = mute;\n  }\n  chain(...args) {\n    this.input.disconnect();\n    args.unshift(this.input);\n    args.push(this.output);\n    connectSeries(...args);\n    return this;\n  }\n  get maxChannelCount() {\n    return this.context.rawContext.destination.maxChannelCount;\n  }\n  dispose() {\n    super.dispose();\n    this.volume.dispose();\n    return this;\n  }\n}\nonContextInit((context2) => {\n  context2.destination = new Destination({ context: context2 });\n});\nonContextClose((context2) => {\n  context2.destination.dispose();\n});\nclass TimelineValue extends Tone {\n  constructor(initialValue) {\n    super();\n    this.name = \"TimelineValue\";\n    this._timeline = new Timeline({ memory: 10 });\n    this._initialValue = initialValue;\n  }\n  set(value, time) {\n    this._timeline.add({\n      value,\n      time\n    });\n    return this;\n  }\n  get(time) {\n    const event = this._timeline.get(time);\n    if (event) {\n      return event.value;\n    } else {\n      return this._initialValue;\n    }\n  }\n}\nclass TransportEvent {\n  constructor(transport, opts) {\n    this.id = TransportEvent._eventId++;\n    this._remainderTime = 0;\n    const options = Object.assign(TransportEvent.getDefaults(), opts);\n    this.transport = transport;\n    this.callback = options.callback;\n    this._once = options.once;\n    this.time = Math.floor(options.time);\n    this._remainderTime = options.time - this.time;\n  }\n  static getDefaults() {\n    return {\n      callback: noOp,\n      once: false,\n      time: 0\n    };\n  }\n  get floatTime() {\n    return this.time + this._remainderTime;\n  }\n  invoke(time) {\n    if (this.callback) {\n      const tickDuration = this.transport.bpm.getDurationOfTicks(1, time);\n      this.callback(time + this._remainderTime * tickDuration);\n      if (this._once) {\n        this.transport.clear(this.id);\n      }\n    }\n  }\n  dispose() {\n    this.callback = void 0;\n    return this;\n  }\n}\nTransportEvent._eventId = 0;\nclass TransportRepeatEvent extends TransportEvent {\n  constructor(transport, opts) {\n    super(transport, opts);\n    this._currentId = -1;\n    this._nextId = -1;\n    this._nextTick = this.time;\n    this._boundRestart = this._restart.bind(this);\n    const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n    this.duration = options.duration;\n    this._interval = options.interval;\n    this._nextTick = options.time;\n    this.transport.on(\"start\", this._boundRestart);\n    this.transport.on(\"loopStart\", this._boundRestart);\n    this.transport.on(\"ticks\", this._boundRestart);\n    this.context = this.transport.context;\n    this._restart();\n  }\n  static getDefaults() {\n    return Object.assign({}, TransportEvent.getDefaults(), {\n      duration: Infinity,\n      interval: 1,\n      once: false\n    });\n  }\n  invoke(time) {\n    this._createEvents(time);\n    super.invoke(time);\n  }\n  _createEvent() {\n    if (LT(this._nextTick, this.floatTime + this.duration)) {\n      return this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n    return -1;\n  }\n  _createEvents(time) {\n    if (LT(this._nextTick + this._interval, this.floatTime + this.duration)) {\n      this._nextTick += this._interval;\n      this._currentId = this._nextId;\n      this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n  }\n  _restart(time) {\n    this.transport.clear(this._currentId);\n    this.transport.clear(this._nextId);\n    this._nextTick = this.floatTime;\n    const ticks = this.transport.getTicksAtTime(time);\n    if (GT(ticks, this.time)) {\n      this._nextTick = this.floatTime + Math.ceil((ticks - this.floatTime) / this._interval) * this._interval;\n    }\n    this._currentId = this._createEvent();\n    this._nextTick += this._interval;\n    this._nextId = this._createEvent();\n  }\n  dispose() {\n    super.dispose();\n    this.transport.clear(this._currentId);\n    this.transport.clear(this._nextId);\n    this.transport.off(\"start\", this._boundRestart);\n    this.transport.off(\"loopStart\", this._boundRestart);\n    this.transport.off(\"ticks\", this._boundRestart);\n    return this;\n  }\n}\nclass Transport$1 extends ToneWithContext {\n  constructor() {\n    super(optionsFromArguments(Transport$1.getDefaults(), arguments));\n    this.name = \"Transport\";\n    this._loop = new TimelineValue(false);\n    this._loopStart = 0;\n    this._loopEnd = 0;\n    this._scheduledEvents = {};\n    this._timeline = new Timeline();\n    this._repeatedEvents = new IntervalTimeline();\n    this._syncedSignals = [];\n    this._swingAmount = 0;\n    const options = optionsFromArguments(Transport$1.getDefaults(), arguments);\n    this._ppq = options.ppq;\n    this._clock = new Clock({\n      callback: this._processTick.bind(this),\n      context: this.context,\n      frequency: 0,\n      units: \"bpm\"\n    });\n    this._bindClockEvents();\n    this.bpm = this._clock.frequency;\n    this._clock.frequency.multiplier = options.ppq;\n    this.bpm.setValueAtTime(options.bpm, 0);\n    readOnly(this, \"bpm\");\n    this._timeSignature = options.timeSignature;\n    this._swingTicks = options.ppq / 2;\n  }\n  static getDefaults() {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      bpm: 120,\n      loopEnd: \"4m\",\n      loopStart: 0,\n      ppq: 192,\n      swing: 0,\n      swingSubdivision: \"8n\",\n      timeSignature: 4\n    });\n  }\n  _processTick(tickTime, ticks) {\n    if (this._loop.get(tickTime)) {\n      if (ticks >= this._loopEnd) {\n        this.emit(\"loopEnd\", tickTime);\n        this._clock.setTicksAtTime(this._loopStart, tickTime);\n        ticks = this._loopStart;\n        this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n        this.emit(\"loop\", tickTime);\n      }\n    }\n    if (this._swingAmount > 0 && ticks % this._ppq !== 0 && ticks % (this._swingTicks * 2) !== 0) {\n      const progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n      const amount = Math.sin(progress * Math.PI) * this._swingAmount;\n      tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n    }\n    enterScheduledCallback(true);\n    this._timeline.forEachAtTime(ticks, (event) => event.invoke(tickTime));\n    enterScheduledCallback(false);\n  }\n  schedule(callback, time) {\n    const event = new TransportEvent(this, {\n      callback,\n      time: new TransportTimeClass(this.context, time).toTicks()\n    });\n    return this._addEvent(event, this._timeline);\n  }\n  scheduleRepeat(callback, interval, startTime, duration = Infinity) {\n    const event = new TransportRepeatEvent(this, {\n      callback,\n      duration: new TimeClass(this.context, duration).toTicks(),\n      interval: new TimeClass(this.context, interval).toTicks(),\n      time: new TransportTimeClass(this.context, startTime).toTicks()\n    });\n    return this._addEvent(event, this._repeatedEvents);\n  }\n  scheduleOnce(callback, time) {\n    const event = new TransportEvent(this, {\n      callback,\n      once: true,\n      time: new TransportTimeClass(this.context, time).toTicks()\n    });\n    return this._addEvent(event, this._timeline);\n  }\n  clear(eventId) {\n    if (this._scheduledEvents.hasOwnProperty(eventId)) {\n      const item = this._scheduledEvents[eventId.toString()];\n      item.timeline.remove(item.event);\n      item.event.dispose();\n      delete this._scheduledEvents[eventId.toString()];\n    }\n    return this;\n  }\n  _addEvent(event, timeline) {\n    this._scheduledEvents[event.id.toString()] = {\n      event,\n      timeline\n    };\n    timeline.add(event);\n    return event.id;\n  }\n  cancel(after = 0) {\n    const computedAfter = this.toTicks(after);\n    this._timeline.forEachFrom(computedAfter, (event) => this.clear(event.id));\n    this._repeatedEvents.forEachFrom(computedAfter, (event) => this.clear(event.id));\n    return this;\n  }\n  _bindClockEvents() {\n    this._clock.on(\"start\", (time, offset) => {\n      offset = new TicksClass(this.context, offset).toSeconds();\n      this.emit(\"start\", time, offset);\n    });\n    this._clock.on(\"stop\", (time) => {\n      this.emit(\"stop\", time);\n    });\n    this._clock.on(\"pause\", (time) => {\n      this.emit(\"pause\", time);\n    });\n  }\n  get state() {\n    return this._clock.getStateAtTime(this.now());\n  }\n  start(time, offset) {\n    this.context.resume();\n    let offsetTicks;\n    if (isDefined(offset)) {\n      offsetTicks = this.toTicks(offset);\n    }\n    this._clock.start(time, offsetTicks);\n    return this;\n  }\n  stop(time) {\n    this._clock.stop(time);\n    return this;\n  }\n  pause(time) {\n    this._clock.pause(time);\n    return this;\n  }\n  toggle(time) {\n    time = this.toSeconds(time);\n    if (this._clock.getStateAtTime(time) !== \"started\") {\n      this.start(time);\n    } else {\n      this.stop(time);\n    }\n    return this;\n  }\n  get timeSignature() {\n    return this._timeSignature;\n  }\n  set timeSignature(timeSig) {\n    if (isArray(timeSig)) {\n      timeSig = timeSig[0] / timeSig[1] * 4;\n    }\n    this._timeSignature = timeSig;\n  }\n  get loopStart() {\n    return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n  }\n  set loopStart(startPosition) {\n    this._loopStart = this.toTicks(startPosition);\n  }\n  get loopEnd() {\n    return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n  }\n  set loopEnd(endPosition) {\n    this._loopEnd = this.toTicks(endPosition);\n  }\n  get loop() {\n    return this._loop.get(this.now());\n  }\n  set loop(loop) {\n    this._loop.set(loop, this.now());\n  }\n  setLoopPoints(startPosition, endPosition) {\n    this.loopStart = startPosition;\n    this.loopEnd = endPosition;\n    return this;\n  }\n  get swing() {\n    return this._swingAmount;\n  }\n  set swing(amount) {\n    this._swingAmount = amount;\n  }\n  get swingSubdivision() {\n    return new TicksClass(this.context, this._swingTicks).toNotation();\n  }\n  set swingSubdivision(subdivision) {\n    this._swingTicks = this.toTicks(subdivision);\n  }\n  get position() {\n    const now2 = this.now();\n    const ticks = this._clock.getTicksAtTime(now2);\n    return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n  }\n  set position(progress) {\n    const ticks = this.toTicks(progress);\n    this.ticks = ticks;\n  }\n  get seconds() {\n    return this._clock.seconds;\n  }\n  set seconds(s) {\n    const now2 = this.now();\n    const ticks = this._clock.frequency.timeToTicks(s, now2);\n    this.ticks = ticks;\n  }\n  get progress() {\n    if (this.loop) {\n      const now2 = this.now();\n      const ticks = this._clock.getTicksAtTime(now2);\n      return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n    } else {\n      return 0;\n    }\n  }\n  get ticks() {\n    return this._clock.ticks;\n  }\n  set ticks(t) {\n    if (this._clock.ticks !== t) {\n      const now2 = this.now();\n      if (this.state === \"started\") {\n        const ticks = this._clock.getTicksAtTime(now2);\n        const remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now2);\n        const time = now2 + remainingTick;\n        this.emit(\"stop\", time);\n        this._clock.setTicksAtTime(t, time);\n        this.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n      } else {\n        this.emit(\"ticks\", now2);\n        this._clock.setTicksAtTime(t, now2);\n      }\n    }\n  }\n  getTicksAtTime(time) {\n    return this._clock.getTicksAtTime(time);\n  }\n  getSecondsAtTime(time) {\n    return this._clock.getSecondsAtTime(time);\n  }\n  get PPQ() {\n    return this._clock.frequency.multiplier;\n  }\n  set PPQ(ppq) {\n    this._clock.frequency.multiplier = ppq;\n  }\n  nextSubdivision(subdivision) {\n    subdivision = this.toTicks(subdivision);\n    if (this.state !== \"started\") {\n      return 0;\n    } else {\n      const now2 = this.now();\n      const transportPos = this.getTicksAtTime(now2);\n      const remainingTicks = subdivision - transportPos % subdivision;\n      return this._clock.nextTickTime(remainingTicks, now2);\n    }\n  }\n  syncSignal(signal, ratio) {\n    if (!ratio) {\n      const now2 = this.now();\n      if (signal.getValueAtTime(now2) !== 0) {\n        const bpm = this.bpm.getValueAtTime(now2);\n        const computedFreq = 1 / (60 / bpm / this.PPQ);\n        ratio = signal.getValueAtTime(now2) / computedFreq;\n      } else {\n        ratio = 0;\n      }\n    }\n    const ratioSignal = new Gain(ratio);\n    this.bpm.connect(ratioSignal);\n    ratioSignal.connect(signal._param);\n    this._syncedSignals.push({\n      initial: signal.value,\n      ratio: ratioSignal,\n      signal\n    });\n    signal.value = 0;\n    return this;\n  }\n  unsyncSignal(signal) {\n    for (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n      const syncedSignal = this._syncedSignals[i];\n      if (syncedSignal.signal === signal) {\n        syncedSignal.ratio.dispose();\n        syncedSignal.signal.value = syncedSignal.initial;\n        this._syncedSignals.splice(i, 1);\n      }\n    }\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._clock.dispose();\n    writable(this, \"bpm\");\n    this._timeline.dispose();\n    this._repeatedEvents.dispose();\n    return this;\n  }\n}\nEmitter.mixin(Transport$1);\nonContextInit((context2) => {\n  context2.transport = new Transport$1({ context: context2 });\n});\nonContextClose((context2) => {\n  context2.transport.dispose();\n});\nclass Source extends ToneAudioNode {\n  constructor(options) {\n    super(options);\n    this.input = void 0;\n    this._state = new StateTimeline(\"stopped\");\n    this._synced = false;\n    this._scheduled = [];\n    this._syncedStart = noOp;\n    this._syncedStop = noOp;\n    this._state.memory = 100;\n    this._state.increasing = true;\n    this._volume = this.output = new Volume({\n      context: this.context,\n      mute: options.mute,\n      volume: options.volume\n    });\n    this.volume = this._volume.volume;\n    readOnly(this, \"volume\");\n    this.onstop = options.onstop;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      onstop: noOp,\n      volume: 0\n    });\n  }\n  get state() {\n    if (this._synced) {\n      if (this.context.transport.state === \"started\") {\n        return this._state.getValueAtTime(this.context.transport.seconds);\n      } else {\n        return \"stopped\";\n      }\n    } else {\n      return this._state.getValueAtTime(this.now());\n    }\n  }\n  get mute() {\n    return this._volume.mute;\n  }\n  set mute(mute) {\n    this._volume.mute = mute;\n  }\n  _clampToCurrentTime(time) {\n    if (this._synced) {\n      return time;\n    } else {\n      return Math.max(time, this.context.currentTime);\n    }\n  }\n  start(time, offset, duration) {\n    let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n    computedTime = this._clampToCurrentTime(computedTime);\n    if (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n      assert(GT(computedTime, this._state.get(computedTime).time), \"Start time must be strictly greater than previous start time\");\n      this._state.cancel(computedTime);\n      this._state.setStateAtTime(\"started\", computedTime);\n      this.log(\"restart\", computedTime);\n      this.restart(computedTime, offset, duration);\n    } else {\n      this.log(\"start\", computedTime);\n      this._state.setStateAtTime(\"started\", computedTime);\n      if (this._synced) {\n        const event = this._state.get(computedTime);\n        if (event) {\n          event.offset = this.toSeconds(defaultArg(offset, 0));\n          event.duration = duration ? this.toSeconds(duration) : void 0;\n        }\n        const sched = this.context.transport.schedule((t) => {\n          this._start(t, offset, duration);\n        }, computedTime);\n        this._scheduled.push(sched);\n        if (this.context.transport.state === \"started\" && this.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {\n          this._syncedStart(this.now(), this.context.transport.seconds);\n        }\n      } else {\n        assertContextRunning(this.context);\n        this._start(computedTime, offset, duration);\n      }\n    }\n    return this;\n  }\n  stop(time) {\n    let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n    computedTime = this._clampToCurrentTime(computedTime);\n    if (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n      this.log(\"stop\", computedTime);\n      if (!this._synced) {\n        this._stop(computedTime);\n      } else {\n        const sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n        this._scheduled.push(sched);\n      }\n      this._state.cancel(computedTime);\n      this._state.setStateAtTime(\"stopped\", computedTime);\n    }\n    return this;\n  }\n  restart(time, offset, duration) {\n    time = this.toSeconds(time);\n    if (this._state.getValueAtTime(time) === \"started\") {\n      this._state.cancel(time);\n      this._restart(time, offset, duration);\n    }\n    return this;\n  }\n  sync() {\n    if (!this._synced) {\n      this._synced = true;\n      this._syncedStart = (time, offset) => {\n        if (GT(offset, 0)) {\n          const stateEvent = this._state.get(offset);\n          if (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n            const startOffset = offset - this.toSeconds(stateEvent.time);\n            let duration;\n            if (stateEvent.duration) {\n              duration = this.toSeconds(stateEvent.duration) - startOffset;\n            }\n            this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n          }\n        }\n      };\n      this._syncedStop = (time) => {\n        const seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n        if (this._state.getValueAtTime(seconds) === \"started\") {\n          this._stop(time);\n        }\n      };\n      this.context.transport.on(\"start\", this._syncedStart);\n      this.context.transport.on(\"loopStart\", this._syncedStart);\n      this.context.transport.on(\"stop\", this._syncedStop);\n      this.context.transport.on(\"pause\", this._syncedStop);\n      this.context.transport.on(\"loopEnd\", this._syncedStop);\n    }\n    return this;\n  }\n  unsync() {\n    if (this._synced) {\n      this.context.transport.off(\"stop\", this._syncedStop);\n      this.context.transport.off(\"pause\", this._syncedStop);\n      this.context.transport.off(\"loopEnd\", this._syncedStop);\n      this.context.transport.off(\"start\", this._syncedStart);\n      this.context.transport.off(\"loopStart\", this._syncedStart);\n    }\n    this._synced = false;\n    this._scheduled.forEach((id) => this.context.transport.clear(id));\n    this._scheduled = [];\n    this._state.cancel(0);\n    this._stop(0);\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this.onstop = noOp;\n    this.unsync();\n    this._volume.dispose();\n    this._state.dispose();\n    return this;\n  }\n}\nclass ToneBufferSource extends OneShotSource {\n  constructor() {\n    super(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n    this.name = \"ToneBufferSource\";\n    this._source = this.context.createBufferSource();\n    this._internalChannels = [this._source];\n    this._sourceStarted = false;\n    this._sourceStopped = false;\n    const options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n    connect(this._source, this._gainNode);\n    this._source.onended = () => this._stopSource();\n    this.playbackRate = new Param({\n      context: this.context,\n      param: this._source.playbackRate,\n      units: \"positive\",\n      value: options.playbackRate\n    });\n    this.loop = options.loop;\n    this.loopStart = options.loopStart;\n    this.loopEnd = options.loopEnd;\n    this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n    this._internalChannels.push(this._source);\n  }\n  static getDefaults() {\n    return Object.assign(OneShotSource.getDefaults(), {\n      url: new ToneAudioBuffer(),\n      loop: false,\n      loopEnd: 0,\n      loopStart: 0,\n      onload: noOp,\n      onerror: noOp,\n      playbackRate: 1\n    });\n  }\n  get fadeIn() {\n    return this._fadeIn;\n  }\n  set fadeIn(t) {\n    this._fadeIn = t;\n  }\n  get fadeOut() {\n    return this._fadeOut;\n  }\n  set fadeOut(t) {\n    this._fadeOut = t;\n  }\n  get curve() {\n    return this._curve;\n  }\n  set curve(t) {\n    this._curve = t;\n  }\n  start(time, offset, duration, gain = 1) {\n    assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n    const computedTime = this.toSeconds(time);\n    this._startGain(computedTime, gain);\n    if (this.loop) {\n      offset = defaultArg(offset, this.loopStart);\n    } else {\n      offset = defaultArg(offset, 0);\n    }\n    let computedOffset = Math.max(this.toSeconds(offset), 0);\n    if (this.loop) {\n      const loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n      const loopStart = this.toSeconds(this.loopStart);\n      const loopDuration = loopEnd - loopStart;\n      if (GTE(computedOffset, loopEnd)) {\n        computedOffset = (computedOffset - loopStart) % loopDuration + loopStart;\n      }\n      if (EQ(computedOffset, this.buffer.duration)) {\n        computedOffset = 0;\n      }\n    }\n    this._source.buffer = this.buffer.get();\n    this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n    if (LT(computedOffset, this.buffer.duration)) {\n      this._sourceStarted = true;\n      this._source.start(computedTime, computedOffset);\n    }\n    if (isDefined(duration)) {\n      let computedDur = this.toSeconds(duration);\n      computedDur = Math.max(computedDur, 0);\n      this.stop(computedTime + computedDur);\n    }\n    return this;\n  }\n  _stopSource(time) {\n    if (!this._sourceStopped && this._sourceStarted) {\n      this._sourceStopped = true;\n      this._source.stop(this.toSeconds(time));\n      this._onended();\n    }\n  }\n  get loopStart() {\n    return this._source.loopStart;\n  }\n  set loopStart(loopStart) {\n    this._source.loopStart = this.toSeconds(loopStart);\n  }\n  get loopEnd() {\n    return this._source.loopEnd;\n  }\n  set loopEnd(loopEnd) {\n    this._source.loopEnd = this.toSeconds(loopEnd);\n  }\n  get buffer() {\n    return this._buffer;\n  }\n  set buffer(buffer) {\n    this._buffer.set(buffer);\n  }\n  get loop() {\n    return this._source.loop;\n  }\n  set loop(loop) {\n    this._source.loop = loop;\n    if (this._sourceStarted) {\n      this.cancelStop();\n    }\n  }\n  dispose() {\n    super.dispose();\n    this._source.onended = null;\n    this._source.disconnect();\n    this._buffer.dispose();\n    this.playbackRate.dispose();\n    return this;\n  }\n}\nclass Noise extends Source {\n  constructor() {\n    super(optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]));\n    this.name = \"Noise\";\n    this._source = null;\n    const options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n    this._playbackRate = options.playbackRate;\n    this.type = options.type;\n    this._fadeIn = options.fadeIn;\n    this._fadeOut = options.fadeOut;\n  }\n  static getDefaults() {\n    return Object.assign(Source.getDefaults(), {\n      fadeIn: 0,\n      fadeOut: 0,\n      playbackRate: 1,\n      type: \"white\"\n    });\n  }\n  get type() {\n    return this._type;\n  }\n  set type(type) {\n    assert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n    if (this._type !== type) {\n      this._type = type;\n      if (this.state === \"started\") {\n        const now2 = this.now();\n        this._stop(now2);\n        this._start(now2);\n      }\n    }\n  }\n  get playbackRate() {\n    return this._playbackRate;\n  }\n  set playbackRate(rate) {\n    this._playbackRate = rate;\n    if (this._source) {\n      this._source.playbackRate.value = rate;\n    }\n  }\n  _start(time) {\n    const buffer = _noiseBuffers[this._type];\n    this._source = new ToneBufferSource({\n      url: buffer,\n      context: this.context,\n      fadeIn: this._fadeIn,\n      fadeOut: this._fadeOut,\n      loop: true,\n      onended: () => this.onstop(this),\n      playbackRate: this._playbackRate\n    }).connect(this.output);\n    this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 1e-3));\n  }\n  _stop(time) {\n    if (this._source) {\n      this._source.stop(this.toSeconds(time));\n      this._source = null;\n    }\n  }\n  get fadeIn() {\n    return this._fadeIn;\n  }\n  set fadeIn(time) {\n    this._fadeIn = time;\n    if (this._source) {\n      this._source.fadeIn = this._fadeIn;\n    }\n  }\n  get fadeOut() {\n    return this._fadeOut;\n  }\n  set fadeOut(time) {\n    this._fadeOut = time;\n    if (this._source) {\n      this._source.fadeOut = this._fadeOut;\n    }\n  }\n  _restart(time) {\n    this._stop(time);\n    this._start(time);\n  }\n  dispose() {\n    super.dispose();\n    if (this._source) {\n      this._source.disconnect();\n    }\n    return this;\n  }\n}\nconst BUFFER_LENGTH = 44100 * 5;\nconst NUM_CHANNELS = 2;\nconst _noiseCache = {\n  brown: null,\n  pink: null,\n  white: null\n};\nconst _noiseBuffers = {\n  get brown() {\n    if (!_noiseCache.brown) {\n      const buffer = [];\n      for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n        const channel = new Float32Array(BUFFER_LENGTH);\n        buffer[channelNum] = channel;\n        let lastOut = 0;\n        for (let i = 0; i < BUFFER_LENGTH; i++) {\n          const white = Math.random() * 2 - 1;\n          channel[i] = (lastOut + 0.02 * white) / 1.02;\n          lastOut = channel[i];\n          channel[i] *= 3.5;\n        }\n      }\n      _noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n    }\n    return _noiseCache.brown;\n  },\n  get pink() {\n    if (!_noiseCache.pink) {\n      const buffer = [];\n      for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n        const channel = new Float32Array(BUFFER_LENGTH);\n        buffer[channelNum] = channel;\n        let b0, b1, b2, b3, b4, b5, b6;\n        b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;\n        for (let i = 0; i < BUFFER_LENGTH; i++) {\n          const white = Math.random() * 2 - 1;\n          b0 = 0.99886 * b0 + white * 0.0555179;\n          b1 = 0.99332 * b1 + white * 0.0750759;\n          b2 = 0.969 * b2 + white * 0.153852;\n          b3 = 0.8665 * b3 + white * 0.3104856;\n          b4 = 0.55 * b4 + white * 0.5329522;\n          b5 = -0.7616 * b5 - white * 0.016898;\n          channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n          channel[i] *= 0.11;\n          b6 = white * 0.115926;\n        }\n      }\n      _noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n    }\n    return _noiseCache.pink;\n  },\n  get white() {\n    if (!_noiseCache.white) {\n      const buffer = [];\n      for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n        const channel = new Float32Array(BUFFER_LENGTH);\n        buffer[channelNum] = channel;\n        for (let i = 0; i < BUFFER_LENGTH; i++) {\n          channel[i] = Math.random() * 2 - 1;\n        }\n      }\n      _noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n    }\n    return _noiseCache.white;\n  }\n};\nclass UserMedia extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]));\n    this.name = \"UserMedia\";\n    const options = optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]);\n    this._volume = this.output = new Volume({\n      context: this.context,\n      volume: options.volume\n    });\n    this.volume = this._volume.volume;\n    readOnly(this, \"volume\");\n    this.mute = options.mute;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      volume: 0\n    });\n  }\n  open(labelOrId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      assert(UserMedia.supported, \"UserMedia is not supported\");\n      if (this.state === \"started\") {\n        this.close();\n      }\n      const devices = yield UserMedia.enumerateDevices();\n      if (isNumber(labelOrId)) {\n        this._device = devices[labelOrId];\n      } else {\n        this._device = devices.find((device) => {\n          return device.label === labelOrId || device.deviceId === labelOrId;\n        });\n        if (!this._device && devices.length > 0) {\n          this._device = devices[0];\n        }\n        assert(isDefined(this._device), `No matching device ${labelOrId}`);\n      }\n      const constraints = {\n        audio: {\n          echoCancellation: false,\n          sampleRate: this.context.sampleRate,\n          noiseSuppression: false,\n          mozNoiseSuppression: false\n        }\n      };\n      if (this._device) {\n        constraints.audio.deviceId = this._device.deviceId;\n      }\n      const stream = yield navigator.mediaDevices.getUserMedia(constraints);\n      if (!this._stream) {\n        this._stream = stream;\n        const mediaStreamNode = this.context.createMediaStreamSource(stream);\n        connect(mediaStreamNode, this.output);\n        this._mediaStream = mediaStreamNode;\n      }\n      return this;\n    });\n  }\n  close() {\n    if (this._stream && this._mediaStream) {\n      this._stream.getAudioTracks().forEach((track) => {\n        track.stop();\n      });\n      this._stream = void 0;\n      this._mediaStream.disconnect();\n      this._mediaStream = void 0;\n    }\n    this._device = void 0;\n    return this;\n  }\n  static enumerateDevices() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const allDevices = yield navigator.mediaDevices.enumerateDevices();\n      return allDevices.filter((device) => {\n        return device.kind === \"audioinput\";\n      });\n    });\n  }\n  get state() {\n    return this._stream && this._stream.active ? \"started\" : \"stopped\";\n  }\n  get deviceId() {\n    if (this._device) {\n      return this._device.deviceId;\n    } else {\n      return void 0;\n    }\n  }\n  get groupId() {\n    if (this._device) {\n      return this._device.groupId;\n    } else {\n      return void 0;\n    }\n  }\n  get label() {\n    if (this._device) {\n      return this._device.label;\n    } else {\n      return void 0;\n    }\n  }\n  get mute() {\n    return this._volume.mute;\n  }\n  set mute(mute) {\n    this._volume.mute = mute;\n  }\n  dispose() {\n    super.dispose();\n    this.close();\n    this._volume.dispose();\n    this.volume.dispose();\n    return this;\n  }\n  static get supported() {\n    return isDefined(navigator.mediaDevices) && isDefined(navigator.mediaDevices.getUserMedia);\n  }\n}\nfunction generateWaveform(instance, length) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const duration = length / instance.context.sampleRate;\n    const context2 = new OfflineContext(1, duration, instance.context.sampleRate);\n    const clone = new instance.constructor(Object.assign(instance.get(), {\n      frequency: 2 / duration,\n      detune: 0,\n      context: context2\n    })).toDestination();\n    clone.start(0);\n    const buffer = yield context2.render();\n    return buffer.getChannelData(0);\n  });\n}\nclass ToneOscillatorNode extends OneShotSource {\n  constructor() {\n    super(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n    this.name = \"ToneOscillatorNode\";\n    this._oscillator = this.context.createOscillator();\n    this._internalChannels = [this._oscillator];\n    const options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    connect(this._oscillator, this._gainNode);\n    this.type = options.type;\n    this.frequency = new Param({\n      context: this.context,\n      param: this._oscillator.frequency,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    this.detune = new Param({\n      context: this.context,\n      param: this._oscillator.detune,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(this, [\"frequency\", \"detune\"]);\n  }\n  static getDefaults() {\n    return Object.assign(OneShotSource.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      type: \"sine\"\n    });\n  }\n  start(time) {\n    const computedTime = this.toSeconds(time);\n    this.log(\"start\", computedTime);\n    this._startGain(computedTime);\n    this._oscillator.start(computedTime);\n    return this;\n  }\n  _stopSource(time) {\n    this._oscillator.stop(time);\n  }\n  setPeriodicWave(periodicWave) {\n    this._oscillator.setPeriodicWave(periodicWave);\n    return this;\n  }\n  get type() {\n    return this._oscillator.type;\n  }\n  set type(type) {\n    this._oscillator.type = type;\n  }\n  dispose() {\n    super.dispose();\n    if (this.state === \"started\") {\n      this.stop();\n    }\n    this._oscillator.disconnect();\n    this.frequency.dispose();\n    this.detune.dispose();\n    return this;\n  }\n}\nclass Oscillator extends Source {\n  constructor() {\n    super(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n    this.name = \"Oscillator\";\n    this._oscillator = null;\n    const options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    this.frequency = new Signal({\n      context: this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    readOnly(this, \"frequency\");\n    this.detune = new Signal({\n      context: this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(this, \"detune\");\n    this._partials = options.partials;\n    this._partialCount = options.partialCount;\n    this._type = options.type;\n    if (options.partialCount && options.type !== \"custom\") {\n      this._type = this.baseType + options.partialCount.toString();\n    }\n    this.phase = options.phase;\n  }\n  static getDefaults() {\n    return Object.assign(Source.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      partialCount: 0,\n      partials: [],\n      phase: 0,\n      type: \"sine\"\n    });\n  }\n  _start(time) {\n    const computedTime = this.toSeconds(time);\n    const oscillator = new ToneOscillatorNode({\n      context: this.context,\n      onended: () => this.onstop(this)\n    });\n    this._oscillator = oscillator;\n    if (this._wave) {\n      this._oscillator.setPeriodicWave(this._wave);\n    } else {\n      this._oscillator.type = this._type;\n    }\n    this._oscillator.connect(this.output);\n    this.frequency.connect(this._oscillator.frequency);\n    this.detune.connect(this._oscillator.detune);\n    this._oscillator.start(computedTime);\n  }\n  _stop(time) {\n    const computedTime = this.toSeconds(time);\n    if (this._oscillator) {\n      this._oscillator.stop(computedTime);\n    }\n  }\n  _restart(time) {\n    const computedTime = this.toSeconds(time);\n    this.log(\"restart\", computedTime);\n    if (this._oscillator) {\n      this._oscillator.cancelStop();\n    }\n    this._state.cancel(computedTime);\n    return this;\n  }\n  syncFrequency() {\n    this.context.transport.syncSignal(this.frequency);\n    return this;\n  }\n  unsyncFrequency() {\n    this.context.transport.unsyncSignal(this.frequency);\n    return this;\n  }\n  _getCachedPeriodicWave() {\n    if (this._type === \"custom\") {\n      const oscProps = Oscillator._periodicWaveCache.find((description) => {\n        return description.phase === this._phase && deepEquals(description.partials, this._partials);\n      });\n      return oscProps;\n    } else {\n      const oscProps = Oscillator._periodicWaveCache.find((description) => {\n        return description.type === this._type && description.phase === this._phase;\n      });\n      this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n      return oscProps;\n    }\n  }\n  get type() {\n    return this._type;\n  }\n  set type(type) {\n    this._type = type;\n    const isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n    if (this._phase === 0 && isBasicType) {\n      this._wave = void 0;\n      this._partialCount = 0;\n      if (this._oscillator !== null) {\n        this._oscillator.type = type;\n      }\n    } else {\n      const cache = this._getCachedPeriodicWave();\n      if (isDefined(cache)) {\n        const { partials, wave } = cache;\n        this._wave = wave;\n        this._partials = partials;\n        if (this._oscillator !== null) {\n          this._oscillator.setPeriodicWave(this._wave);\n        }\n      } else {\n        const [real, imag] = this._getRealImaginary(type, this._phase);\n        const periodicWave = this.context.createPeriodicWave(real, imag);\n        this._wave = periodicWave;\n        if (this._oscillator !== null) {\n          this._oscillator.setPeriodicWave(this._wave);\n        }\n        Oscillator._periodicWaveCache.push({\n          imag,\n          partialCount: this._partialCount,\n          partials: this._partials,\n          phase: this._phase,\n          real,\n          type: this._type,\n          wave: this._wave\n        });\n        if (Oscillator._periodicWaveCache.length > 100) {\n          Oscillator._periodicWaveCache.shift();\n        }\n      }\n    }\n  }\n  get baseType() {\n    return this._type.replace(this.partialCount.toString(), \"\");\n  }\n  set baseType(baseType) {\n    if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n      this.type = baseType + this.partialCount;\n    } else {\n      this.type = baseType;\n    }\n  }\n  get partialCount() {\n    return this._partialCount;\n  }\n  set partialCount(p) {\n    assertRange(p, 0);\n    let type = this._type;\n    const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n    if (partial) {\n      type = partial[1];\n    }\n    if (this._type !== \"custom\") {\n      if (p === 0) {\n        this.type = type;\n      } else {\n        this.type = type + p.toString();\n      }\n    } else {\n      const fullPartials = new Float32Array(p);\n      this._partials.forEach((v, i) => fullPartials[i] = v);\n      this._partials = Array.from(fullPartials);\n      this.type = this._type;\n    }\n  }\n  _getRealImaginary(type, phase) {\n    const fftSize = 4096;\n    let periodicWaveSize = fftSize / 2;\n    const real = new Float32Array(periodicWaveSize);\n    const imag = new Float32Array(periodicWaveSize);\n    let partialCount = 1;\n    if (type === \"custom\") {\n      partialCount = this._partials.length + 1;\n      this._partialCount = this._partials.length;\n      periodicWaveSize = partialCount;\n      if (this._partials.length === 0) {\n        return [real, imag];\n      }\n    } else {\n      const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n      if (partial) {\n        partialCount = parseInt(partial[2], 10) + 1;\n        this._partialCount = parseInt(partial[2], 10);\n        type = partial[1];\n        partialCount = Math.max(partialCount, 2);\n        periodicWaveSize = partialCount;\n      } else {\n        this._partialCount = 0;\n      }\n      this._partials = [];\n    }\n    for (let n = 1; n < periodicWaveSize; ++n) {\n      const piFactor = 2 / (n * Math.PI);\n      let b;\n      switch (type) {\n        case \"sine\":\n          b = n <= partialCount ? 1 : 0;\n          this._partials[n - 1] = b;\n          break;\n        case \"square\":\n          b = n & 1 ? 2 * piFactor : 0;\n          this._partials[n - 1] = b;\n          break;\n        case \"sawtooth\":\n          b = piFactor * (n & 1 ? 1 : -1);\n          this._partials[n - 1] = b;\n          break;\n        case \"triangle\":\n          if (n & 1) {\n            b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n          } else {\n            b = 0;\n          }\n          this._partials[n - 1] = b;\n          break;\n        case \"custom\":\n          b = this._partials[n - 1];\n          break;\n        default:\n          throw new TypeError(\"Oscillator: invalid type: \" + type);\n      }\n      if (b !== 0) {\n        real[n] = -b * Math.sin(phase * n);\n        imag[n] = b * Math.cos(phase * n);\n      } else {\n        real[n] = 0;\n        imag[n] = 0;\n      }\n    }\n    return [real, imag];\n  }\n  _inverseFFT(real, imag, phase) {\n    let sum = 0;\n    const len = real.length;\n    for (let i = 0; i < len; i++) {\n      sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n    }\n    return sum;\n  }\n  getInitialValue() {\n    const [real, imag] = this._getRealImaginary(this._type, 0);\n    let maxValue = 0;\n    const twoPi = Math.PI * 2;\n    const testPositions = 32;\n    for (let i = 0; i < testPositions; i++) {\n      maxValue = Math.max(this._inverseFFT(real, imag, i / testPositions * twoPi), maxValue);\n    }\n    return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n  }\n  get partials() {\n    return this._partials.slice(0, this.partialCount);\n  }\n  set partials(partials) {\n    this._partials = partials;\n    this._partialCount = this._partials.length;\n    if (partials.length) {\n      this.type = \"custom\";\n    }\n  }\n  get phase() {\n    return this._phase * (180 / Math.PI);\n  }\n  set phase(phase) {\n    this._phase = phase * Math.PI / 180;\n    this.type = this._type;\n  }\n  asArray(length = 1024) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return generateWaveform(this, length);\n    });\n  }\n  dispose() {\n    super.dispose();\n    if (this._oscillator !== null) {\n      this._oscillator.dispose();\n    }\n    this._wave = void 0;\n    this.frequency.dispose();\n    this.detune.dispose();\n    return this;\n  }\n}\nOscillator._periodicWaveCache = [];\nclass SignalOperator extends ToneAudioNode {\n  constructor() {\n    super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n  }\n  connect(destination, outputNum = 0, inputNum = 0) {\n    connectSignal(this, destination, outputNum, inputNum);\n    return this;\n  }\n}\nclass WaveShaper extends SignalOperator {\n  constructor() {\n    super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n    this.name = \"WaveShaper\";\n    this._shaper = this.context.createWaveShaper();\n    this.input = this._shaper;\n    this.output = this._shaper;\n    const options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n    if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n      this.curve = Float32Array.from(options.mapping);\n    } else if (isFunction(options.mapping)) {\n      this.setMap(options.mapping, options.length);\n    }\n  }\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      length: 1024\n    });\n  }\n  setMap(mapping, length = 1024) {\n    const array = new Float32Array(length);\n    for (let i = 0, len = length; i < len; i++) {\n      const normalized = i / (len - 1) * 2 - 1;\n      array[i] = mapping(normalized, i);\n    }\n    this.curve = array;\n    return this;\n  }\n  get curve() {\n    return this._shaper.curve;\n  }\n  set curve(mapping) {\n    this._shaper.curve = mapping;\n  }\n  get oversample() {\n    return this._shaper.oversample;\n  }\n  set oversample(oversampling) {\n    const isOverSampleType = [\"none\", \"2x\", \"4x\"].some((str) => str.includes(oversampling));\n    assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n    this._shaper.oversample = oversampling;\n  }\n  dispose() {\n    super.dispose();\n    this._shaper.disconnect();\n    return this;\n  }\n}\nclass AudioToGain extends SignalOperator {\n  constructor() {\n    super(...arguments);\n    this.name = \"AudioToGain\";\n    this._norm = new WaveShaper({\n      context: this.context,\n      mapping: (x) => (x + 1) / 2\n    });\n    this.input = this._norm;\n    this.output = this._norm;\n  }\n  dispose() {\n    super.dispose();\n    this._norm.dispose();\n    return this;\n  }\n}\nclass Multiply extends Signal {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n    this.name = \"Multiply\";\n    this.override = false;\n    const options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n    this._mult = this.input = this.output = new Gain({\n      context: this.context,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    this.factor = this._param = this._mult.gain;\n    this.factor.setValueAtTime(options.value, 0);\n  }\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._mult.dispose();\n    return this;\n  }\n}\nclass AMOscillator extends Source {\n  constructor() {\n    super(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n    this.name = \"AMOscillator\";\n    this._modulationScale = new AudioToGain({ context: this.context });\n    this._modulationNode = new Gain({\n      context: this.context\n    });\n    const options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n    this._carrier = new Oscillator({\n      context: this.context,\n      detune: options.detune,\n      frequency: options.frequency,\n      onstop: () => this.onstop(this),\n      phase: options.phase,\n      type: options.type\n    });\n    this.frequency = this._carrier.frequency, this.detune = this._carrier.detune;\n    this._modulator = new Oscillator({\n      context: this.context,\n      phase: options.phase,\n      type: options.modulationType\n    });\n    this.harmonicity = new Multiply({\n      context: this.context,\n      units: \"positive\",\n      value: options.harmonicity\n    });\n    this.frequency.chain(this.harmonicity, this._modulator.frequency);\n    this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n    this._carrier.chain(this._modulationNode, this.output);\n    readOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n  }\n  static getDefaults() {\n    return Object.assign(Oscillator.getDefaults(), {\n      harmonicity: 1,\n      modulationType: \"square\"\n    });\n  }\n  _start(time) {\n    this._modulator.start(time);\n    this._carrier.start(time);\n  }\n  _stop(time) {\n    this._modulator.stop(time);\n    this._carrier.stop(time);\n  }\n  _restart(time) {\n    this._modulator.restart(time);\n    this._carrier.restart(time);\n  }\n  get type() {\n    return this._carrier.type;\n  }\n  set type(type) {\n    this._carrier.type = type;\n  }\n  get baseType() {\n    return this._carrier.baseType;\n  }\n  set baseType(baseType) {\n    this._carrier.baseType = baseType;\n  }\n  get partialCount() {\n    return this._carrier.partialCount;\n  }\n  set partialCount(partialCount) {\n    this._carrier.partialCount = partialCount;\n  }\n  get modulationType() {\n    return this._modulator.type;\n  }\n  set modulationType(type) {\n    this._modulator.type = type;\n  }\n  get phase() {\n    return this._carrier.phase;\n  }\n  set phase(phase) {\n    this._carrier.phase = phase;\n    this._modulator.phase = phase;\n  }\n  get partials() {\n    return this._carrier.partials;\n  }\n  set partials(partials) {\n    this._carrier.partials = partials;\n  }\n  asArray(length = 1024) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return generateWaveform(this, length);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.frequency.dispose();\n    this.detune.dispose();\n    this.harmonicity.dispose();\n    this._carrier.dispose();\n    this._modulator.dispose();\n    this._modulationNode.dispose();\n    this._modulationScale.dispose();\n    return this;\n  }\n}\nclass FMOscillator extends Source {\n  constructor() {\n    super(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n    this.name = \"FMOscillator\";\n    this._modulationNode = new Gain({\n      context: this.context,\n      gain: 0\n    });\n    const options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n    this._carrier = new Oscillator({\n      context: this.context,\n      detune: options.detune,\n      frequency: 0,\n      onstop: () => this.onstop(this),\n      phase: options.phase,\n      type: options.type\n    });\n    this.detune = this._carrier.detune;\n    this.frequency = new Signal({\n      context: this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    this._modulator = new Oscillator({\n      context: this.context,\n      phase: options.phase,\n      type: options.modulationType\n    });\n    this.harmonicity = new Multiply({\n      context: this.context,\n      units: \"positive\",\n      value: options.harmonicity\n    });\n    this.modulationIndex = new Multiply({\n      context: this.context,\n      units: \"positive\",\n      value: options.modulationIndex\n    });\n    this.frequency.connect(this._carrier.frequency);\n    this.frequency.chain(this.harmonicity, this._modulator.frequency);\n    this.frequency.chain(this.modulationIndex, this._modulationNode);\n    this._modulator.connect(this._modulationNode.gain);\n    this._modulationNode.connect(this._carrier.frequency);\n    this._carrier.connect(this.output);\n    this.detune.connect(this._modulator.detune);\n    readOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n  }\n  static getDefaults() {\n    return Object.assign(Oscillator.getDefaults(), {\n      harmonicity: 1,\n      modulationIndex: 2,\n      modulationType: \"square\"\n    });\n  }\n  _start(time) {\n    this._modulator.start(time);\n    this._carrier.start(time);\n  }\n  _stop(time) {\n    this._modulator.stop(time);\n    this._carrier.stop(time);\n  }\n  _restart(time) {\n    this._modulator.restart(time);\n    this._carrier.restart(time);\n    return this;\n  }\n  get type() {\n    return this._carrier.type;\n  }\n  set type(type) {\n    this._carrier.type = type;\n  }\n  get baseType() {\n    return this._carrier.baseType;\n  }\n  set baseType(baseType) {\n    this._carrier.baseType = baseType;\n  }\n  get partialCount() {\n    return this._carrier.partialCount;\n  }\n  set partialCount(partialCount) {\n    this._carrier.partialCount = partialCount;\n  }\n  get modulationType() {\n    return this._modulator.type;\n  }\n  set modulationType(type) {\n    this._modulator.type = type;\n  }\n  get phase() {\n    return this._carrier.phase;\n  }\n  set phase(phase) {\n    this._carrier.phase = phase;\n    this._modulator.phase = phase;\n  }\n  get partials() {\n    return this._carrier.partials;\n  }\n  set partials(partials) {\n    this._carrier.partials = partials;\n  }\n  asArray(length = 1024) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return generateWaveform(this, length);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.frequency.dispose();\n    this.harmonicity.dispose();\n    this._carrier.dispose();\n    this._modulator.dispose();\n    this._modulationNode.dispose();\n    this.modulationIndex.dispose();\n    return this;\n  }\n}\nclass PulseOscillator extends Source {\n  constructor() {\n    super(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n    this.name = \"PulseOscillator\";\n    this._widthGate = new Gain({\n      context: this.context,\n      gain: 0\n    });\n    this._thresh = new WaveShaper({\n      context: this.context,\n      mapping: (val) => val <= 0 ? -1 : 1\n    });\n    const options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n    this.width = new Signal({\n      context: this.context,\n      units: \"audioRange\",\n      value: options.width\n    });\n    this._triangle = new Oscillator({\n      context: this.context,\n      detune: options.detune,\n      frequency: options.frequency,\n      onstop: () => this.onstop(this),\n      phase: options.phase,\n      type: \"triangle\"\n    });\n    this.frequency = this._triangle.frequency;\n    this.detune = this._triangle.detune;\n    this._triangle.chain(this._thresh, this.output);\n    this.width.chain(this._widthGate, this._thresh);\n    readOnly(this, [\"width\", \"frequency\", \"detune\"]);\n  }\n  static getDefaults() {\n    return Object.assign(Source.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      phase: 0,\n      type: \"pulse\",\n      width: 0.2\n    });\n  }\n  _start(time) {\n    time = this.toSeconds(time);\n    this._triangle.start(time);\n    this._widthGate.gain.setValueAtTime(1, time);\n  }\n  _stop(time) {\n    time = this.toSeconds(time);\n    this._triangle.stop(time);\n    this._widthGate.gain.cancelScheduledValues(time);\n    this._widthGate.gain.setValueAtTime(0, time);\n  }\n  _restart(time) {\n    this._triangle.restart(time);\n    this._widthGate.gain.cancelScheduledValues(time);\n    this._widthGate.gain.setValueAtTime(1, time);\n  }\n  get phase() {\n    return this._triangle.phase;\n  }\n  set phase(phase) {\n    this._triangle.phase = phase;\n  }\n  get type() {\n    return \"pulse\";\n  }\n  get baseType() {\n    return \"pulse\";\n  }\n  get partials() {\n    return [];\n  }\n  get partialCount() {\n    return 0;\n  }\n  set carrierType(type) {\n    this._triangle.type = type;\n  }\n  asArray(length = 1024) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return generateWaveform(this, length);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._triangle.dispose();\n    this.width.dispose();\n    this._widthGate.dispose();\n    this._thresh.dispose();\n    return this;\n  }\n}\nclass FatOscillator extends Source {\n  constructor() {\n    super(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n    this.name = \"FatOscillator\";\n    this._oscillators = [];\n    const options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n    this.frequency = new Signal({\n      context: this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    this.detune = new Signal({\n      context: this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    this._spread = options.spread;\n    this._type = options.type;\n    this._phase = options.phase;\n    this._partials = options.partials;\n    this._partialCount = options.partialCount;\n    this.count = options.count;\n    readOnly(this, [\"frequency\", \"detune\"]);\n  }\n  static getDefaults() {\n    return Object.assign(Oscillator.getDefaults(), {\n      count: 3,\n      spread: 20,\n      type: \"sawtooth\"\n    });\n  }\n  _start(time) {\n    time = this.toSeconds(time);\n    this._forEach((osc) => osc.start(time));\n  }\n  _stop(time) {\n    time = this.toSeconds(time);\n    this._forEach((osc) => osc.stop(time));\n  }\n  _restart(time) {\n    this._forEach((osc) => osc.restart(time));\n  }\n  _forEach(iterator) {\n    for (let i = 0; i < this._oscillators.length; i++) {\n      iterator(this._oscillators[i], i);\n    }\n  }\n  get type() {\n    return this._type;\n  }\n  set type(type) {\n    this._type = type;\n    this._forEach((osc) => osc.type = type);\n  }\n  get spread() {\n    return this._spread;\n  }\n  set spread(spread) {\n    this._spread = spread;\n    if (this._oscillators.length > 1) {\n      const start2 = -spread / 2;\n      const step = spread / (this._oscillators.length - 1);\n      this._forEach((osc, i) => osc.detune.value = start2 + step * i);\n    }\n  }\n  get count() {\n    return this._oscillators.length;\n  }\n  set count(count) {\n    assertRange(count, 1);\n    if (this._oscillators.length !== count) {\n      this._forEach((osc) => osc.dispose());\n      this._oscillators = [];\n      for (let i = 0; i < count; i++) {\n        const osc = new Oscillator({\n          context: this.context,\n          volume: -6 - count * 1.1,\n          type: this._type,\n          phase: this._phase + i / count * 360,\n          partialCount: this._partialCount,\n          onstop: i === 0 ? () => this.onstop(this) : noOp\n        });\n        if (this.type === \"custom\") {\n          osc.partials = this._partials;\n        }\n        this.frequency.connect(osc.frequency);\n        this.detune.connect(osc.detune);\n        osc.detune.overridden = false;\n        osc.connect(this.output);\n        this._oscillators[i] = osc;\n      }\n      this.spread = this._spread;\n      if (this.state === \"started\") {\n        this._forEach((osc) => osc.start());\n      }\n    }\n  }\n  get phase() {\n    return this._phase;\n  }\n  set phase(phase) {\n    this._phase = phase;\n    this._forEach((osc, i) => osc.phase = this._phase + i / this.count * 360);\n  }\n  get baseType() {\n    return this._oscillators[0].baseType;\n  }\n  set baseType(baseType) {\n    this._forEach((osc) => osc.baseType = baseType);\n    this._type = this._oscillators[0].type;\n  }\n  get partials() {\n    return this._oscillators[0].partials;\n  }\n  set partials(partials) {\n    this._partials = partials;\n    this._partialCount = this._partials.length;\n    if (partials.length) {\n      this._type = \"custom\";\n      this._forEach((osc) => osc.partials = partials);\n    }\n  }\n  get partialCount() {\n    return this._oscillators[0].partialCount;\n  }\n  set partialCount(partialCount) {\n    this._partialCount = partialCount;\n    this._forEach((osc) => osc.partialCount = partialCount);\n    this._type = this._oscillators[0].type;\n  }\n  asArray(length = 1024) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return generateWaveform(this, length);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.frequency.dispose();\n    this.detune.dispose();\n    this._forEach((osc) => osc.dispose());\n    return this;\n  }\n}\nclass PWMOscillator extends Source {\n  constructor() {\n    super(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n    this.name = \"PWMOscillator\";\n    this.sourceType = \"pwm\";\n    this._scale = new Multiply({\n      context: this.context,\n      value: 2\n    });\n    const options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n    this._pulse = new PulseOscillator({\n      context: this.context,\n      frequency: options.modulationFrequency\n    });\n    this._pulse.carrierType = \"sine\";\n    this.modulationFrequency = this._pulse.frequency;\n    this._modulator = new Oscillator({\n      context: this.context,\n      detune: options.detune,\n      frequency: options.frequency,\n      onstop: () => this.onstop(this),\n      phase: options.phase\n    });\n    this.frequency = this._modulator.frequency;\n    this.detune = this._modulator.detune;\n    this._modulator.chain(this._scale, this._pulse.width);\n    this._pulse.connect(this.output);\n    readOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n  }\n  static getDefaults() {\n    return Object.assign(Source.getDefaults(), {\n      detune: 0,\n      frequency: 440,\n      modulationFrequency: 0.4,\n      phase: 0,\n      type: \"pwm\"\n    });\n  }\n  _start(time) {\n    time = this.toSeconds(time);\n    this._modulator.start(time);\n    this._pulse.start(time);\n  }\n  _stop(time) {\n    time = this.toSeconds(time);\n    this._modulator.stop(time);\n    this._pulse.stop(time);\n  }\n  _restart(time) {\n    this._modulator.restart(time);\n    this._pulse.restart(time);\n  }\n  get type() {\n    return \"pwm\";\n  }\n  get baseType() {\n    return \"pwm\";\n  }\n  get partials() {\n    return [];\n  }\n  get partialCount() {\n    return 0;\n  }\n  get phase() {\n    return this._modulator.phase;\n  }\n  set phase(phase) {\n    this._modulator.phase = phase;\n  }\n  asArray(length = 1024) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return generateWaveform(this, length);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._pulse.dispose();\n    this._scale.dispose();\n    this._modulator.dispose();\n    return this;\n  }\n}\nconst OmniOscillatorSourceMap = {\n  am: AMOscillator,\n  fat: FatOscillator,\n  fm: FMOscillator,\n  oscillator: Oscillator,\n  pulse: PulseOscillator,\n  pwm: PWMOscillator\n};\nclass OmniOscillator extends Source {\n  constructor() {\n    super(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n    this.name = \"OmniOscillator\";\n    const options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    this.frequency = new Signal({\n      context: this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    this.detune = new Signal({\n      context: this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(this, [\"frequency\", \"detune\"]);\n    this.set(options);\n  }\n  static getDefaults() {\n    return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n  }\n  _start(time) {\n    this._oscillator.start(time);\n  }\n  _stop(time) {\n    this._oscillator.stop(time);\n  }\n  _restart(time) {\n    this._oscillator.restart(time);\n    return this;\n  }\n  get type() {\n    let prefix = \"\";\n    if ([\"am\", \"fm\", \"fat\"].some((p) => this._sourceType === p)) {\n      prefix = this._sourceType;\n    }\n    return prefix + this._oscillator.type;\n  }\n  set type(type) {\n    if (type.substr(0, 2) === \"fm\") {\n      this._createNewOscillator(\"fm\");\n      this._oscillator = this._oscillator;\n      this._oscillator.type = type.substr(2);\n    } else if (type.substr(0, 2) === \"am\") {\n      this._createNewOscillator(\"am\");\n      this._oscillator = this._oscillator;\n      this._oscillator.type = type.substr(2);\n    } else if (type.substr(0, 3) === \"fat\") {\n      this._createNewOscillator(\"fat\");\n      this._oscillator = this._oscillator;\n      this._oscillator.type = type.substr(3);\n    } else if (type === \"pwm\") {\n      this._createNewOscillator(\"pwm\");\n      this._oscillator = this._oscillator;\n    } else if (type === \"pulse\") {\n      this._createNewOscillator(\"pulse\");\n    } else {\n      this._createNewOscillator(\"oscillator\");\n      this._oscillator = this._oscillator;\n      this._oscillator.type = type;\n    }\n  }\n  get partials() {\n    return this._oscillator.partials;\n  }\n  set partials(partials) {\n    if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n      this._oscillator.partials = partials;\n    }\n  }\n  get partialCount() {\n    return this._oscillator.partialCount;\n  }\n  set partialCount(partialCount) {\n    if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n      this._oscillator.partialCount = partialCount;\n    }\n  }\n  set(props) {\n    if (Reflect.has(props, \"type\") && props.type) {\n      this.type = props.type;\n    }\n    super.set(props);\n    return this;\n  }\n  _createNewOscillator(oscType) {\n    if (oscType !== this._sourceType) {\n      this._sourceType = oscType;\n      const OscConstructor = OmniOscillatorSourceMap[oscType];\n      const now2 = this.now();\n      if (this._oscillator) {\n        const oldOsc = this._oscillator;\n        oldOsc.stop(now2);\n        this.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n      }\n      this._oscillator = new OscConstructor({\n        context: this.context\n      });\n      this.frequency.connect(this._oscillator.frequency);\n      this.detune.connect(this._oscillator.detune);\n      this._oscillator.connect(this.output);\n      this._oscillator.onstop = () => this.onstop(this);\n      if (this.state === \"started\") {\n        this._oscillator.start(now2);\n      }\n    }\n  }\n  get phase() {\n    return this._oscillator.phase;\n  }\n  set phase(phase) {\n    this._oscillator.phase = phase;\n  }\n  get sourceType() {\n    return this._sourceType;\n  }\n  set sourceType(sType) {\n    let baseType = \"sine\";\n    if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n      baseType = this._oscillator.type;\n    }\n    if (sType === \"fm\") {\n      this.type = \"fm\" + baseType;\n    } else if (sType === \"am\") {\n      this.type = \"am\" + baseType;\n    } else if (sType === \"fat\") {\n      this.type = \"fat\" + baseType;\n    } else if (sType === \"oscillator\") {\n      this.type = baseType;\n    } else if (sType === \"pulse\") {\n      this.type = \"pulse\";\n    } else if (sType === \"pwm\") {\n      this.type = \"pwm\";\n    }\n  }\n  _getOscType(osc, sourceType) {\n    return osc instanceof OmniOscillatorSourceMap[sourceType];\n  }\n  get baseType() {\n    return this._oscillator.baseType;\n  }\n  set baseType(baseType) {\n    if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\") && baseType !== \"pulse\" && baseType !== \"pwm\") {\n      this._oscillator.baseType = baseType;\n    }\n  }\n  get width() {\n    if (this._getOscType(this._oscillator, \"pulse\")) {\n      return this._oscillator.width;\n    } else {\n      return void 0;\n    }\n  }\n  get count() {\n    if (this._getOscType(this._oscillator, \"fat\")) {\n      return this._oscillator.count;\n    } else {\n      return void 0;\n    }\n  }\n  set count(count) {\n    if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n      this._oscillator.count = count;\n    }\n  }\n  get spread() {\n    if (this._getOscType(this._oscillator, \"fat\")) {\n      return this._oscillator.spread;\n    } else {\n      return void 0;\n    }\n  }\n  set spread(spread) {\n    if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n      this._oscillator.spread = spread;\n    }\n  }\n  get modulationType() {\n    if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n      return this._oscillator.modulationType;\n    } else {\n      return void 0;\n    }\n  }\n  set modulationType(mType) {\n    if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n      this._oscillator.modulationType = mType;\n    }\n  }\n  get modulationIndex() {\n    if (this._getOscType(this._oscillator, \"fm\")) {\n      return this._oscillator.modulationIndex;\n    } else {\n      return void 0;\n    }\n  }\n  get harmonicity() {\n    if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n      return this._oscillator.harmonicity;\n    } else {\n      return void 0;\n    }\n  }\n  get modulationFrequency() {\n    if (this._getOscType(this._oscillator, \"pwm\")) {\n      return this._oscillator.modulationFrequency;\n    } else {\n      return void 0;\n    }\n  }\n  asArray(length = 1024) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return generateWaveform(this, length);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.detune.dispose();\n    this.frequency.dispose();\n    this._oscillator.dispose();\n    return this;\n  }\n}\nclass Add extends Signal {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"])));\n    this.override = false;\n    this.name = \"Add\";\n    this._sum = new Gain({ context: this.context });\n    this.input = this._sum;\n    this.output = this._sum;\n    this.addend = this._param;\n    connectSeries(this._constantSource, this._sum);\n  }\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._sum.dispose();\n    return this;\n  }\n}\nclass Scale extends SignalOperator {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n    this.name = \"Scale\";\n    const options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n    this._mult = this.input = new Multiply({\n      context: this.context,\n      value: options.max - options.min\n    });\n    this._add = this.output = new Add({\n      context: this.context,\n      value: options.min\n    });\n    this._min = options.min;\n    this._max = options.max;\n    this.input.connect(this.output);\n  }\n  static getDefaults() {\n    return Object.assign(SignalOperator.getDefaults(), {\n      max: 1,\n      min: 0\n    });\n  }\n  get min() {\n    return this._min;\n  }\n  set min(min) {\n    this._min = min;\n    this._setRange();\n  }\n  get max() {\n    return this._max;\n  }\n  set max(max) {\n    this._max = max;\n    this._setRange();\n  }\n  _setRange() {\n    this._add.value = this._min;\n    this._mult.value = this._max - this._min;\n  }\n  dispose() {\n    super.dispose();\n    this._add.dispose();\n    this._mult.dispose();\n    return this;\n  }\n}\nclass Zero extends SignalOperator {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n    this.name = \"Zero\";\n    this._gain = new Gain({ context: this.context });\n    this.output = this._gain;\n    this.input = void 0;\n    connect(this.context.getConstant(0), this._gain);\n  }\n  dispose() {\n    super.dispose();\n    disconnect(this.context.getConstant(0), this._gain);\n    return this;\n  }\n}\nclass LFO extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]));\n    this.name = \"LFO\";\n    this._stoppedValue = 0;\n    this._units = \"number\";\n    this.convert = true;\n    this._fromType = Param.prototype._fromType;\n    this._toType = Param.prototype._toType;\n    this._is = Param.prototype._is;\n    this._clampValue = Param.prototype._clampValue;\n    const options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]);\n    this._oscillator = new Oscillator(options);\n    this.frequency = this._oscillator.frequency;\n    this._amplitudeGain = new Gain({\n      context: this.context,\n      gain: options.amplitude,\n      units: \"normalRange\"\n    });\n    this.amplitude = this._amplitudeGain.gain;\n    this._stoppedSignal = new Signal({\n      context: this.context,\n      units: \"audioRange\",\n      value: 0\n    });\n    this._zeros = new Zero({ context: this.context });\n    this._a2g = new AudioToGain({ context: this.context });\n    this._scaler = this.output = new Scale({\n      context: this.context,\n      max: options.max,\n      min: options.min\n    });\n    this.units = options.units;\n    this.min = options.min;\n    this.max = options.max;\n    this._oscillator.chain(this._amplitudeGain, this._a2g, this._scaler);\n    this._zeros.connect(this._a2g);\n    this._stoppedSignal.connect(this._a2g);\n    readOnly(this, [\"amplitude\", \"frequency\"]);\n    this.phase = options.phase;\n  }\n  static getDefaults() {\n    return Object.assign(Oscillator.getDefaults(), {\n      amplitude: 1,\n      frequency: \"4n\",\n      max: 1,\n      min: 0,\n      type: \"sine\",\n      units: \"number\"\n    });\n  }\n  start(time) {\n    time = this.toSeconds(time);\n    this._stoppedSignal.setValueAtTime(0, time);\n    this._oscillator.start(time);\n    return this;\n  }\n  stop(time) {\n    time = this.toSeconds(time);\n    this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n    this._oscillator.stop(time);\n    return this;\n  }\n  sync() {\n    this._oscillator.sync();\n    this._oscillator.syncFrequency();\n    return this;\n  }\n  unsync() {\n    this._oscillator.unsync();\n    this._oscillator.unsyncFrequency();\n    return this;\n  }\n  _setStoppedValue() {\n    this._stoppedValue = this._oscillator.getInitialValue();\n    this._stoppedSignal.value = this._stoppedValue;\n  }\n  get min() {\n    return this._toType(this._scaler.min);\n  }\n  set min(min) {\n    min = this._fromType(min);\n    this._scaler.min = min;\n  }\n  get max() {\n    return this._toType(this._scaler.max);\n  }\n  set max(max) {\n    max = this._fromType(max);\n    this._scaler.max = max;\n  }\n  get type() {\n    return this._oscillator.type;\n  }\n  set type(type) {\n    this._oscillator.type = type;\n    this._setStoppedValue();\n  }\n  get partials() {\n    return this._oscillator.partials;\n  }\n  set partials(partials) {\n    this._oscillator.partials = partials;\n    this._setStoppedValue();\n  }\n  get phase() {\n    return this._oscillator.phase;\n  }\n  set phase(phase) {\n    this._oscillator.phase = phase;\n    this._setStoppedValue();\n  }\n  get units() {\n    return this._units;\n  }\n  set units(val) {\n    const currentMin = this.min;\n    const currentMax = this.max;\n    this._units = val;\n    this.min = currentMin;\n    this.max = currentMax;\n  }\n  get state() {\n    return this._oscillator.state;\n  }\n  connect(node, outputNum, inputNum) {\n    if (node instanceof Param || node instanceof Signal) {\n      this.convert = node.convert;\n      this.units = node.units;\n    }\n    connectSignal(this, node, outputNum, inputNum);\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._oscillator.dispose();\n    this._stoppedSignal.dispose();\n    this._zeros.dispose();\n    this._scaler.dispose();\n    this._a2g.dispose();\n    this._amplitudeGain.dispose();\n    this.amplitude.dispose();\n    return this;\n  }\n}\nfunction range(min, max = Infinity) {\n  const valueMap = /* @__PURE__ */ new WeakMap();\n  return function(target, propertyKey) {\n    Reflect.defineProperty(target, propertyKey, {\n      configurable: true,\n      enumerable: true,\n      get: function() {\n        return valueMap.get(this);\n      },\n      set: function(newValue) {\n        assertRange(newValue, min, max);\n        valueMap.set(this, newValue);\n      }\n    });\n  };\n}\nfunction timeRange(min, max = Infinity) {\n  const valueMap = /* @__PURE__ */ new WeakMap();\n  return function(target, propertyKey) {\n    Reflect.defineProperty(target, propertyKey, {\n      configurable: true,\n      enumerable: true,\n      get: function() {\n        return valueMap.get(this);\n      },\n      set: function(newValue) {\n        assertRange(this.toSeconds(newValue), min, max);\n        valueMap.set(this, newValue);\n      }\n    });\n  };\n}\nclass Player extends Source {\n  constructor() {\n    super(optionsFromArguments(Player.getDefaults(), arguments, [\n      \"url\",\n      \"onload\"\n    ]));\n    this.name = \"Player\";\n    this._activeSources = /* @__PURE__ */ new Set();\n    const options = optionsFromArguments(Player.getDefaults(), arguments, [\n      \"url\",\n      \"onload\"\n    ]);\n    this._buffer = new ToneAudioBuffer({\n      onload: this._onload.bind(this, options.onload),\n      onerror: options.onerror,\n      reverse: options.reverse,\n      url: options.url\n    });\n    this.autostart = options.autostart;\n    this._loop = options.loop;\n    this._loopStart = options.loopStart;\n    this._loopEnd = options.loopEnd;\n    this._playbackRate = options.playbackRate;\n    this.fadeIn = options.fadeIn;\n    this.fadeOut = options.fadeOut;\n  }\n  static getDefaults() {\n    return Object.assign(Source.getDefaults(), {\n      autostart: false,\n      fadeIn: 0,\n      fadeOut: 0,\n      loop: false,\n      loopEnd: 0,\n      loopStart: 0,\n      onload: noOp,\n      onerror: noOp,\n      playbackRate: 1,\n      reverse: false\n    });\n  }\n  load(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._buffer.load(url);\n      this._onload();\n      return this;\n    });\n  }\n  _onload(callback = noOp) {\n    callback();\n    if (this.autostart) {\n      this.start();\n    }\n  }\n  _onSourceEnd(source) {\n    this.onstop(this);\n    this._activeSources.delete(source);\n    if (this._activeSources.size === 0 && !this._synced && this._state.getValueAtTime(this.now()) === \"started\") {\n      this._state.cancel(this.now());\n      this._state.setStateAtTime(\"stopped\", this.now());\n    }\n  }\n  start(time, offset, duration) {\n    super.start(time, offset, duration);\n    return this;\n  }\n  _start(startTime, offset, duration) {\n    if (this._loop) {\n      offset = defaultArg(offset, this._loopStart);\n    } else {\n      offset = defaultArg(offset, 0);\n    }\n    const computedOffset = this.toSeconds(offset);\n    const origDuration = duration;\n    duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n    let computedDuration = this.toSeconds(duration);\n    computedDuration = computedDuration / this._playbackRate;\n    startTime = this.toSeconds(startTime);\n    const source = new ToneBufferSource({\n      url: this._buffer,\n      context: this.context,\n      fadeIn: this.fadeIn,\n      fadeOut: this.fadeOut,\n      loop: this._loop,\n      loopEnd: this._loopEnd,\n      loopStart: this._loopStart,\n      onended: this._onSourceEnd.bind(this),\n      playbackRate: this._playbackRate\n    }).connect(this.output);\n    if (!this._loop && !this._synced) {\n      this._state.cancel(startTime + computedDuration);\n      this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n        implicitEnd: true\n      });\n    }\n    this._activeSources.add(source);\n    if (this._loop && isUndef(origDuration)) {\n      source.start(startTime, computedOffset);\n    } else {\n      source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n    }\n  }\n  _stop(time) {\n    const computedTime = this.toSeconds(time);\n    this._activeSources.forEach((source) => source.stop(computedTime));\n  }\n  restart(time, offset, duration) {\n    super.restart(time, offset, duration);\n    return this;\n  }\n  _restart(time, offset, duration) {\n    var _a;\n    (_a = [...this._activeSources].pop()) === null || _a === void 0 ? void 0 : _a.stop(time);\n    this._start(time, offset, duration);\n  }\n  seek(offset, when) {\n    const computedTime = this.toSeconds(when);\n    if (this._state.getValueAtTime(computedTime) === \"started\") {\n      const computedOffset = this.toSeconds(offset);\n      this._stop(computedTime);\n      this._start(computedTime, computedOffset);\n    }\n    return this;\n  }\n  setLoopPoints(loopStart, loopEnd) {\n    this.loopStart = loopStart;\n    this.loopEnd = loopEnd;\n    return this;\n  }\n  get loopStart() {\n    return this._loopStart;\n  }\n  set loopStart(loopStart) {\n    this._loopStart = loopStart;\n    if (this.buffer.loaded) {\n      assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n    }\n    this._activeSources.forEach((source) => {\n      source.loopStart = loopStart;\n    });\n  }\n  get loopEnd() {\n    return this._loopEnd;\n  }\n  set loopEnd(loopEnd) {\n    this._loopEnd = loopEnd;\n    if (this.buffer.loaded) {\n      assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n    }\n    this._activeSources.forEach((source) => {\n      source.loopEnd = loopEnd;\n    });\n  }\n  get buffer() {\n    return this._buffer;\n  }\n  set buffer(buffer) {\n    this._buffer.set(buffer);\n  }\n  get loop() {\n    return this._loop;\n  }\n  set loop(loop) {\n    if (this._loop === loop) {\n      return;\n    }\n    this._loop = loop;\n    this._activeSources.forEach((source) => {\n      source.loop = loop;\n    });\n    if (loop) {\n      const stopEvent = this._state.getNextState(\"stopped\", this.now());\n      if (stopEvent) {\n        this._state.cancel(stopEvent.time);\n      }\n    }\n  }\n  get playbackRate() {\n    return this._playbackRate;\n  }\n  set playbackRate(rate) {\n    this._playbackRate = rate;\n    const now2 = this.now();\n    const stopEvent = this._state.getNextState(\"stopped\", now2);\n    if (stopEvent && stopEvent.implicitEnd) {\n      this._state.cancel(stopEvent.time);\n      this._activeSources.forEach((source) => source.cancelStop());\n    }\n    this._activeSources.forEach((source) => {\n      source.playbackRate.setValueAtTime(rate, now2);\n    });\n  }\n  get reverse() {\n    return this._buffer.reverse;\n  }\n  set reverse(rev) {\n    this._buffer.reverse = rev;\n  }\n  get loaded() {\n    return this._buffer.loaded;\n  }\n  dispose() {\n    super.dispose();\n    this._activeSources.forEach((source) => source.dispose());\n    this._activeSources.clear();\n    this._buffer.dispose();\n    return this;\n  }\n}\n__decorate([\n  timeRange(0)\n], Player.prototype, \"fadeIn\", void 0);\n__decorate([\n  timeRange(0)\n], Player.prototype, \"fadeOut\", void 0);\nclass Abs extends SignalOperator {\n  constructor() {\n    super(...arguments);\n    this.name = \"Abs\";\n    this._abs = new WaveShaper({\n      context: this.context,\n      mapping: (val) => {\n        if (Math.abs(val) < 1e-3) {\n          return 0;\n        } else {\n          return Math.abs(val);\n        }\n      }\n    });\n    this.input = this._abs;\n    this.output = this._abs;\n  }\n  dispose() {\n    super.dispose();\n    this._abs.dispose();\n    return this;\n  }\n}\nclass GainToAudio extends SignalOperator {\n  constructor() {\n    super(...arguments);\n    this.name = \"GainToAudio\";\n    this._norm = new WaveShaper({\n      context: this.context,\n      mapping: (x) => Math.abs(x) * 2 - 1\n    });\n    this.input = this._norm;\n    this.output = this._norm;\n  }\n  dispose() {\n    super.dispose();\n    this._norm.dispose();\n    return this;\n  }\n}\nclass Negate extends SignalOperator {\n  constructor() {\n    super(...arguments);\n    this.name = \"Negate\";\n    this._multiply = new Multiply({\n      context: this.context,\n      value: -1\n    });\n    this.input = this._multiply;\n    this.output = this._multiply;\n  }\n  dispose() {\n    super.dispose();\n    this._multiply.dispose();\n    return this;\n  }\n}\nclass Subtract extends Signal {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"])));\n    this.override = false;\n    this.name = \"Subtract\";\n    this._sum = new Gain({ context: this.context });\n    this.input = this._sum;\n    this.output = this._sum;\n    this._neg = new Negate({ context: this.context });\n    this.subtrahend = this._param;\n    connectSeries(this._constantSource, this._neg, this._sum);\n  }\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._neg.dispose();\n    this._sum.dispose();\n    return this;\n  }\n}\nclass GreaterThanZero extends SignalOperator {\n  constructor() {\n    super(Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments)));\n    this.name = \"GreaterThanZero\";\n    this._thresh = this.output = new WaveShaper({\n      context: this.context,\n      length: 127,\n      mapping: (val) => {\n        if (val <= 0) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    });\n    this._scale = this.input = new Multiply({\n      context: this.context,\n      value: 1e4\n    });\n    this._scale.connect(this._thresh);\n  }\n  dispose() {\n    super.dispose();\n    this._scale.dispose();\n    this._thresh.dispose();\n    return this;\n  }\n}\nclass GreaterThan extends Signal {\n  constructor() {\n    super(Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"])));\n    this.name = \"GreaterThan\";\n    this.override = false;\n    const options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n    this._subtract = this.input = new Subtract({\n      context: this.context,\n      value: options.value\n    });\n    this._gtz = this.output = new GreaterThanZero({ context: this.context });\n    this.comparator = this._param = this._subtract.subtrahend;\n    readOnly(this, \"comparator\");\n    this._subtract.connect(this._gtz);\n  }\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._gtz.dispose();\n    this._subtract.dispose();\n    this.comparator.dispose();\n    return this;\n  }\n}\nclass Pow extends SignalOperator {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"])));\n    this.name = \"Pow\";\n    const options = optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]);\n    this._exponentScaler = this.input = this.output = new WaveShaper({\n      context: this.context,\n      mapping: this._expFunc(options.value),\n      length: 8192\n    });\n    this._exponent = options.value;\n  }\n  static getDefaults() {\n    return Object.assign(SignalOperator.getDefaults(), {\n      value: 1\n    });\n  }\n  _expFunc(exponent) {\n    return (val) => {\n      return Math.pow(Math.abs(val), exponent);\n    };\n  }\n  get value() {\n    return this._exponent;\n  }\n  set value(exponent) {\n    this._exponent = exponent;\n    this._exponentScaler.setMap(this._expFunc(this._exponent));\n  }\n  dispose() {\n    super.dispose();\n    this._exponentScaler.dispose();\n    return this;\n  }\n}\nclass Envelope extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n    this.name = \"Envelope\";\n    this._sig = new Signal({\n      context: this.context,\n      value: 0\n    });\n    this.output = this._sig;\n    this.input = void 0;\n    const options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n    this.attack = options.attack;\n    this.decay = options.decay;\n    this.sustain = options.sustain;\n    this.release = options.release;\n    this.attackCurve = options.attackCurve;\n    this.releaseCurve = options.releaseCurve;\n    this.decayCurve = options.decayCurve;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      attack: 0.01,\n      attackCurve: \"linear\",\n      decay: 0.1,\n      decayCurve: \"exponential\",\n      release: 1,\n      releaseCurve: \"exponential\",\n      sustain: 0.5\n    });\n  }\n  get value() {\n    return this.getValueAtTime(this.now());\n  }\n  _getCurve(curve, direction) {\n    if (isString(curve)) {\n      return curve;\n    } else {\n      let curveName;\n      for (curveName in EnvelopeCurves) {\n        if (EnvelopeCurves[curveName][direction] === curve) {\n          return curveName;\n        }\n      }\n      return curve;\n    }\n  }\n  _setCurve(name, direction, curve) {\n    if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n      const curveDef = EnvelopeCurves[curve];\n      if (isObject(curveDef)) {\n        if (name !== \"_decayCurve\") {\n          this[name] = curveDef[direction];\n        }\n      } else {\n        this[name] = curveDef;\n      }\n    } else if (isArray(curve) && name !== \"_decayCurve\") {\n      this[name] = curve;\n    } else {\n      throw new Error(\"Envelope: invalid curve: \" + curve);\n    }\n  }\n  get attackCurve() {\n    return this._getCurve(this._attackCurve, \"In\");\n  }\n  set attackCurve(curve) {\n    this._setCurve(\"_attackCurve\", \"In\", curve);\n  }\n  get releaseCurve() {\n    return this._getCurve(this._releaseCurve, \"Out\");\n  }\n  set releaseCurve(curve) {\n    this._setCurve(\"_releaseCurve\", \"Out\", curve);\n  }\n  get decayCurve() {\n    return this._decayCurve;\n  }\n  set decayCurve(curve) {\n    assert([\"linear\", \"exponential\"].some((c) => c === curve), `Invalid envelope curve: ${curve}`);\n    this._decayCurve = curve;\n  }\n  triggerAttack(time, velocity = 1) {\n    this.log(\"triggerAttack\", time, velocity);\n    time = this.toSeconds(time);\n    const originalAttack = this.toSeconds(this.attack);\n    let attack = originalAttack;\n    const decay = this.toSeconds(this.decay);\n    const currentValue = this.getValueAtTime(time);\n    if (currentValue > 0) {\n      const attackRate = 1 / attack;\n      const remainingDistance = 1 - currentValue;\n      attack = remainingDistance / attackRate;\n    }\n    if (attack < this.sampleTime) {\n      this._sig.cancelScheduledValues(time);\n      this._sig.setValueAtTime(velocity, time);\n    } else if (this._attackCurve === \"linear\") {\n      this._sig.linearRampTo(velocity, attack, time);\n    } else if (this._attackCurve === \"exponential\") {\n      this._sig.targetRampTo(velocity, attack, time);\n    } else {\n      this._sig.cancelAndHoldAtTime(time);\n      let curve = this._attackCurve;\n      for (let i = 1; i < curve.length; i++) {\n        if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n          curve = this._attackCurve.slice(i);\n          curve[0] = currentValue;\n          break;\n        }\n      }\n      this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n    }\n    if (decay && this.sustain < 1) {\n      const decayValue = velocity * this.sustain;\n      const decayStart = time + attack;\n      this.log(\"decay\", decayStart);\n      if (this._decayCurve === \"linear\") {\n        this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n      } else {\n        this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n      }\n    }\n    return this;\n  }\n  triggerRelease(time) {\n    this.log(\"triggerRelease\", time);\n    time = this.toSeconds(time);\n    const currentValue = this.getValueAtTime(time);\n    if (currentValue > 0) {\n      const release = this.toSeconds(this.release);\n      if (release < this.sampleTime) {\n        this._sig.setValueAtTime(0, time);\n      } else if (this._releaseCurve === \"linear\") {\n        this._sig.linearRampTo(0, release, time);\n      } else if (this._releaseCurve === \"exponential\") {\n        this._sig.targetRampTo(0, release, time);\n      } else {\n        assert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n        this._sig.cancelAndHoldAtTime(time);\n        this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n      }\n    }\n    return this;\n  }\n  getValueAtTime(time) {\n    return this._sig.getValueAtTime(time);\n  }\n  triggerAttackRelease(duration, time, velocity = 1) {\n    time = this.toSeconds(time);\n    this.triggerAttack(time, velocity);\n    this.triggerRelease(time + this.toSeconds(duration));\n    return this;\n  }\n  cancel(after) {\n    this._sig.cancelScheduledValues(this.toSeconds(after));\n    return this;\n  }\n  connect(destination, outputNumber = 0, inputNumber = 0) {\n    connectSignal(this, destination, outputNumber, inputNumber);\n    return this;\n  }\n  asArray(length = 1024) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const duration = length / this.context.sampleRate;\n      const context2 = new OfflineContext(1, duration, this.context.sampleRate);\n      const attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n      const envelopeDuration = attackPortion + this.toSeconds(this.release);\n      const sustainTime = envelopeDuration * 0.1;\n      const totalDuration = envelopeDuration + sustainTime;\n      const clone = new this.constructor(Object.assign(this.get(), {\n        attack: duration * this.toSeconds(this.attack) / totalDuration,\n        decay: duration * this.toSeconds(this.decay) / totalDuration,\n        release: duration * this.toSeconds(this.release) / totalDuration,\n        context: context2\n      }));\n      clone._sig.toDestination();\n      clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n      const buffer = yield context2.render();\n      return buffer.getChannelData(0);\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._sig.dispose();\n    return this;\n  }\n}\n__decorate([\n  timeRange(0)\n], Envelope.prototype, \"attack\", void 0);\n__decorate([\n  timeRange(0)\n], Envelope.prototype, \"decay\", void 0);\n__decorate([\n  range(0, 1)\n], Envelope.prototype, \"sustain\", void 0);\n__decorate([\n  timeRange(0)\n], Envelope.prototype, \"release\", void 0);\nconst EnvelopeCurves = (() => {\n  const curveLen = 128;\n  let i;\n  let k;\n  const cosineCurve = [];\n  for (i = 0; i < curveLen; i++) {\n    cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n  }\n  const rippleCurve = [];\n  const rippleCurveFreq = 6.4;\n  for (i = 0; i < curveLen - 1; i++) {\n    k = i / (curveLen - 1);\n    const sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n    rippleCurve[i] = sineWave / 10 + k * 0.83;\n  }\n  rippleCurve[curveLen - 1] = 1;\n  const stairsCurve = [];\n  const steps = 5;\n  for (i = 0; i < curveLen; i++) {\n    stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n  }\n  const sineCurve = [];\n  for (i = 0; i < curveLen; i++) {\n    k = i / (curveLen - 1);\n    sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n  }\n  const bounceCurve = [];\n  for (i = 0; i < curveLen; i++) {\n    k = i / (curveLen - 1);\n    const freq = Math.pow(k, 3) * 4 + 0.2;\n    const val = Math.cos(freq * Math.PI * 2 * k);\n    bounceCurve[i] = Math.abs(val * (1 - k));\n  }\n  function invertCurve(curve) {\n    const out = new Array(curve.length);\n    for (let j = 0; j < curve.length; j++) {\n      out[j] = 1 - curve[j];\n    }\n    return out;\n  }\n  function reverseCurve(curve) {\n    return curve.slice(0).reverse();\n  }\n  return {\n    bounce: {\n      In: invertCurve(bounceCurve),\n      Out: bounceCurve\n    },\n    cosine: {\n      In: cosineCurve,\n      Out: reverseCurve(cosineCurve)\n    },\n    exponential: \"exponential\",\n    linear: \"linear\",\n    ripple: {\n      In: rippleCurve,\n      Out: invertCurve(rippleCurve)\n    },\n    sine: {\n      In: sineCurve,\n      Out: invertCurve(sineCurve)\n    },\n    step: {\n      In: stairsCurve,\n      Out: invertCurve(stairsCurve)\n    }\n  };\n})();\nclass Instrument extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Instrument.getDefaults(), arguments));\n    this._scheduledEvents = [];\n    this._synced = false;\n    this._original_triggerAttack = this.triggerAttack;\n    this._original_triggerRelease = this.triggerRelease;\n    this._syncedRelease = (time) => this._original_triggerRelease(time);\n    const options = optionsFromArguments(Instrument.getDefaults(), arguments);\n    this._volume = this.output = new Volume({\n      context: this.context,\n      volume: options.volume\n    });\n    this.volume = this._volume.volume;\n    readOnly(this, \"volume\");\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      volume: 0\n    });\n  }\n  sync() {\n    if (this._syncState()) {\n      this._syncMethod(\"triggerAttack\", 1);\n      this._syncMethod(\"triggerRelease\", 0);\n      this.context.transport.on(\"stop\", this._syncedRelease);\n      this.context.transport.on(\"pause\", this._syncedRelease);\n      this.context.transport.on(\"loopEnd\", this._syncedRelease);\n    }\n    return this;\n  }\n  _syncState() {\n    let changed = false;\n    if (!this._synced) {\n      this._synced = true;\n      changed = true;\n    }\n    return changed;\n  }\n  _syncMethod(method, timePosition) {\n    const originalMethod = this[\"_original_\" + method] = this[method];\n    this[method] = (...args) => {\n      const time = args[timePosition];\n      const id = this.context.transport.schedule((t) => {\n        args[timePosition] = t;\n        originalMethod.apply(this, args);\n      }, time);\n      this._scheduledEvents.push(id);\n    };\n  }\n  unsync() {\n    this._scheduledEvents.forEach((id) => this.context.transport.clear(id));\n    this._scheduledEvents = [];\n    if (this._synced) {\n      this._synced = false;\n      this.triggerAttack = this._original_triggerAttack;\n      this.triggerRelease = this._original_triggerRelease;\n      this.context.transport.off(\"stop\", this._syncedRelease);\n      this.context.transport.off(\"pause\", this._syncedRelease);\n      this.context.transport.off(\"loopEnd\", this._syncedRelease);\n    }\n    return this;\n  }\n  triggerAttackRelease(note, duration, time, velocity) {\n    const computedTime = this.toSeconds(time);\n    const computedDuration = this.toSeconds(duration);\n    this.triggerAttack(note, computedTime, velocity);\n    this.triggerRelease(computedTime + computedDuration);\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._volume.dispose();\n    this.unsync();\n    this._scheduledEvents = [];\n    return this;\n  }\n}\nclass Monophonic extends Instrument {\n  constructor() {\n    super(optionsFromArguments(Monophonic.getDefaults(), arguments));\n    const options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n    this.portamento = options.portamento;\n    this.onsilence = options.onsilence;\n  }\n  static getDefaults() {\n    return Object.assign(Instrument.getDefaults(), {\n      detune: 0,\n      onsilence: noOp,\n      portamento: 0\n    });\n  }\n  triggerAttack(note, time, velocity = 1) {\n    this.log(\"triggerAttack\", note, time, velocity);\n    const seconds = this.toSeconds(time);\n    this._triggerEnvelopeAttack(seconds, velocity);\n    this.setNote(note, seconds);\n    return this;\n  }\n  triggerRelease(time) {\n    this.log(\"triggerRelease\", time);\n    const seconds = this.toSeconds(time);\n    this._triggerEnvelopeRelease(seconds);\n    return this;\n  }\n  setNote(note, time) {\n    const computedTime = this.toSeconds(time);\n    const computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n    if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n      const portTime = this.toSeconds(this.portamento);\n      this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n    } else {\n      this.frequency.setValueAtTime(computedFrequency, computedTime);\n    }\n    return this;\n  }\n}\n__decorate([\n  timeRange(0)\n], Monophonic.prototype, \"portamento\", void 0);\nclass AmplitudeEnvelope extends Envelope {\n  constructor() {\n    super(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n    this.name = \"AmplitudeEnvelope\";\n    this._gainNode = new Gain({\n      context: this.context,\n      gain: 0\n    });\n    this.output = this._gainNode;\n    this.input = this._gainNode;\n    this._sig.connect(this._gainNode.gain);\n    this.output = this._gainNode;\n    this.input = this._gainNode;\n  }\n  dispose() {\n    super.dispose();\n    this._gainNode.dispose();\n    return this;\n  }\n}\nclass Synth extends Monophonic {\n  constructor() {\n    super(optionsFromArguments(Synth.getDefaults(), arguments));\n    this.name = \"Synth\";\n    const options = optionsFromArguments(Synth.getDefaults(), arguments);\n    this.oscillator = new OmniOscillator(Object.assign({\n      context: this.context,\n      detune: options.detune,\n      onstop: () => this.onsilence(this)\n    }, options.oscillator));\n    this.frequency = this.oscillator.frequency;\n    this.detune = this.oscillator.detune;\n    this.envelope = new AmplitudeEnvelope(Object.assign({\n      context: this.context\n    }, options.envelope));\n    this.oscillator.chain(this.envelope, this.output);\n    readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n  }\n  static getDefaults() {\n    return Object.assign(Monophonic.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 5e-3,\n        decay: 0.1,\n        release: 1,\n        sustain: 0.3\n      }),\n      oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]), {\n        type: \"triangle\"\n      })\n    });\n  }\n  _triggerEnvelopeAttack(time, velocity) {\n    this.envelope.triggerAttack(time, velocity);\n    this.oscillator.start(time);\n    if (this.envelope.sustain === 0) {\n      const computedAttack = this.toSeconds(this.envelope.attack);\n      const computedDecay = this.toSeconds(this.envelope.decay);\n      this.oscillator.stop(time + computedAttack + computedDecay);\n    }\n  }\n  _triggerEnvelopeRelease(time) {\n    this.envelope.triggerRelease(time);\n    this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n  }\n  getLevelAtTime(time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  }\n  dispose() {\n    super.dispose();\n    this.oscillator.dispose();\n    this.envelope.dispose();\n    return this;\n  }\n}\nclass BiquadFilter extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n    this.name = \"BiquadFilter\";\n    const options = optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    this._filter = this.context.createBiquadFilter();\n    this.input = this.output = this._filter;\n    this.Q = new Param({\n      context: this.context,\n      units: \"number\",\n      value: options.Q,\n      param: this._filter.Q\n    });\n    this.frequency = new Param({\n      context: this.context,\n      units: \"frequency\",\n      value: options.frequency,\n      param: this._filter.frequency\n    });\n    this.detune = new Param({\n      context: this.context,\n      units: \"cents\",\n      value: options.detune,\n      param: this._filter.detune\n    });\n    this.gain = new Param({\n      context: this.context,\n      units: \"decibels\",\n      convert: false,\n      value: options.gain,\n      param: this._filter.gain\n    });\n    this.type = options.type;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      Q: 1,\n      type: \"lowpass\",\n      frequency: 350,\n      detune: 0,\n      gain: 0\n    });\n  }\n  get type() {\n    return this._filter.type;\n  }\n  set type(type) {\n    const types = [\n      \"lowpass\",\n      \"highpass\",\n      \"bandpass\",\n      \"lowshelf\",\n      \"highshelf\",\n      \"notch\",\n      \"allpass\",\n      \"peaking\"\n    ];\n    assert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n    this._filter.type = type;\n  }\n  getFrequencyResponse(len = 128) {\n    const freqValues = new Float32Array(len);\n    for (let i = 0; i < len; i++) {\n      const norm = Math.pow(i / len, 2);\n      const freq = norm * (2e4 - 20) + 20;\n      freqValues[i] = freq;\n    }\n    const magValues = new Float32Array(len);\n    const phaseValues = new Float32Array(len);\n    const filterClone = this.context.createBiquadFilter();\n    filterClone.type = this.type;\n    filterClone.Q.value = this.Q.value;\n    filterClone.frequency.value = this.frequency.value;\n    filterClone.gain.value = this.gain.value;\n    filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n    return magValues;\n  }\n  dispose() {\n    super.dispose();\n    this._filter.disconnect();\n    this.Q.dispose();\n    this.frequency.dispose();\n    this.gain.dispose();\n    this.detune.dispose();\n    return this;\n  }\n}\nclass Filter extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]));\n    this.name = \"Filter\";\n    this.input = new Gain({ context: this.context });\n    this.output = new Gain({ context: this.context });\n    this._filters = [];\n    const options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n    this._filters = [];\n    this.Q = new Signal({\n      context: this.context,\n      units: \"positive\",\n      value: options.Q\n    });\n    this.frequency = new Signal({\n      context: this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    this.detune = new Signal({\n      context: this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    this.gain = new Signal({\n      context: this.context,\n      units: \"decibels\",\n      convert: false,\n      value: options.gain\n    });\n    this._type = options.type;\n    this.rolloff = options.rolloff;\n    readOnly(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      Q: 1,\n      detune: 0,\n      frequency: 350,\n      gain: 0,\n      rolloff: -12,\n      type: \"lowpass\"\n    });\n  }\n  get type() {\n    return this._type;\n  }\n  set type(type) {\n    const types = [\n      \"lowpass\",\n      \"highpass\",\n      \"bandpass\",\n      \"lowshelf\",\n      \"highshelf\",\n      \"notch\",\n      \"allpass\",\n      \"peaking\"\n    ];\n    assert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n    this._type = type;\n    this._filters.forEach((filter) => filter.type = type);\n  }\n  get rolloff() {\n    return this._rolloff;\n  }\n  set rolloff(rolloff) {\n    const rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10);\n    const possibilities = [-12, -24, -48, -96];\n    let cascadingCount = possibilities.indexOf(rolloffNum);\n    assert(cascadingCount !== -1, `rolloff can only be ${possibilities.join(\", \")}`);\n    cascadingCount += 1;\n    this._rolloff = rolloffNum;\n    this.input.disconnect();\n    this._filters.forEach((filter) => filter.disconnect());\n    this._filters = new Array(cascadingCount);\n    for (let count = 0; count < cascadingCount; count++) {\n      const filter = new BiquadFilter({\n        context: this.context\n      });\n      filter.type = this._type;\n      this.frequency.connect(filter.frequency);\n      this.detune.connect(filter.detune);\n      this.Q.connect(filter.Q);\n      this.gain.connect(filter.gain);\n      this._filters[count] = filter;\n    }\n    this._internalChannels = this._filters;\n    connectSeries(this.input, ...this._internalChannels, this.output);\n  }\n  getFrequencyResponse(len = 128) {\n    const filterClone = new BiquadFilter({\n      frequency: this.frequency.value,\n      gain: this.gain.value,\n      Q: this.Q.value,\n      type: this._type,\n      detune: this.detune.value\n    });\n    const totalResponse = new Float32Array(len).map(() => 1);\n    this._filters.forEach(() => {\n      const response = filterClone.getFrequencyResponse(len);\n      response.forEach((val, i) => totalResponse[i] *= val);\n    });\n    filterClone.dispose();\n    return totalResponse;\n  }\n  dispose() {\n    super.dispose();\n    this._filters.forEach((filter) => {\n      filter.dispose();\n    });\n    writable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n    this.frequency.dispose();\n    this.Q.dispose();\n    this.detune.dispose();\n    this.gain.dispose();\n    return this;\n  }\n}\nclass FrequencyEnvelope extends Envelope {\n  constructor() {\n    super(optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n    this.name = \"FrequencyEnvelope\";\n    const options = optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n    this._octaves = options.octaves;\n    this._baseFrequency = this.toFrequency(options.baseFrequency);\n    this._exponent = this.input = new Pow({\n      context: this.context,\n      value: options.exponent\n    });\n    this._scale = this.output = new Scale({\n      context: this.context,\n      min: this._baseFrequency,\n      max: this._baseFrequency * Math.pow(2, this._octaves)\n    });\n    this._sig.chain(this._exponent, this._scale);\n  }\n  static getDefaults() {\n    return Object.assign(Envelope.getDefaults(), {\n      baseFrequency: 200,\n      exponent: 1,\n      octaves: 4\n    });\n  }\n  get baseFrequency() {\n    return this._baseFrequency;\n  }\n  set baseFrequency(min) {\n    const freq = this.toFrequency(min);\n    assertRange(freq, 0);\n    this._baseFrequency = freq;\n    this._scale.min = this._baseFrequency;\n    this.octaves = this._octaves;\n  }\n  get octaves() {\n    return this._octaves;\n  }\n  set octaves(octaves) {\n    this._octaves = octaves;\n    this._scale.max = this._baseFrequency * Math.pow(2, octaves);\n  }\n  get exponent() {\n    return this._exponent.value;\n  }\n  set exponent(exponent) {\n    this._exponent.value = exponent;\n  }\n  dispose() {\n    super.dispose();\n    this._exponent.dispose();\n    this._scale.dispose();\n    return this;\n  }\n}\nclass MonoSynth extends Monophonic {\n  constructor() {\n    super(optionsFromArguments(MonoSynth.getDefaults(), arguments));\n    this.name = \"MonoSynth\";\n    const options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n    this.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n      context: this.context,\n      detune: options.detune,\n      onstop: () => this.onsilence(this)\n    }));\n    this.frequency = this.oscillator.frequency;\n    this.detune = this.oscillator.detune;\n    this.filter = new Filter(Object.assign(options.filter, { context: this.context }));\n    this.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, { context: this.context }));\n    this.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, { context: this.context }));\n    this.oscillator.chain(this.filter, this.envelope, this.output);\n    this.filterEnvelope.connect(this.filter.frequency);\n    readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n  }\n  static getDefaults() {\n    return Object.assign(Monophonic.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 5e-3,\n        decay: 0.1,\n        release: 1,\n        sustain: 0.9\n      }),\n      filter: Object.assign(omitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        Q: 1,\n        rolloff: -12,\n        type: \"lowpass\"\n      }),\n      filterEnvelope: Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        attack: 0.6,\n        baseFrequency: 200,\n        decay: 0.2,\n        exponent: 2,\n        octaves: 3,\n        release: 2,\n        sustain: 0.5\n      }),\n      oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n        type: \"sawtooth\"\n      })\n    });\n  }\n  _triggerEnvelopeAttack(time, velocity = 1) {\n    this.envelope.triggerAttack(time, velocity);\n    this.filterEnvelope.triggerAttack(time);\n    this.oscillator.start(time);\n    if (this.envelope.sustain === 0) {\n      const computedAttack = this.toSeconds(this.envelope.attack);\n      const computedDecay = this.toSeconds(this.envelope.decay);\n      this.oscillator.stop(time + computedAttack + computedDecay);\n    }\n  }\n  _triggerEnvelopeRelease(time) {\n    this.envelope.triggerRelease(time);\n    this.filterEnvelope.triggerRelease(time);\n    this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n  }\n  getLevelAtTime(time) {\n    time = this.toSeconds(time);\n    return this.envelope.getValueAtTime(time);\n  }\n  dispose() {\n    super.dispose();\n    this.oscillator.dispose();\n    this.envelope.dispose();\n    this.filterEnvelope.dispose();\n    this.filter.dispose();\n    return this;\n  }\n}\nclass MembraneSynth extends Synth {\n  constructor() {\n    super(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n    this.name = \"MembraneSynth\";\n    this.portamento = 0;\n    const options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n    this.pitchDecay = options.pitchDecay;\n    this.octaves = options.octaves;\n    readOnly(this, [\"oscillator\", \"envelope\"]);\n  }\n  static getDefaults() {\n    return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n      envelope: {\n        attack: 1e-3,\n        attackCurve: \"exponential\",\n        decay: 0.4,\n        release: 1.4,\n        sustain: 0.01\n      },\n      octaves: 10,\n      oscillator: {\n        type: \"sine\"\n      },\n      pitchDecay: 0.05\n    });\n  }\n  setNote(note, time) {\n    const seconds = this.toSeconds(time);\n    const hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n    const maxNote = hertz * this.octaves;\n    this.oscillator.frequency.setValueAtTime(maxNote, seconds);\n    this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    return this;\n  }\n}\n__decorate([\n  range(0)\n], MembraneSynth.prototype, \"octaves\", void 0);\n__decorate([\n  timeRange(0)\n], MembraneSynth.prototype, \"pitchDecay\", void 0);\nclass NoiseSynth extends Instrument {\n  constructor() {\n    super(optionsFromArguments(NoiseSynth.getDefaults(), arguments));\n    this.name = \"NoiseSynth\";\n    const options = optionsFromArguments(NoiseSynth.getDefaults(), arguments);\n    this.noise = new Noise(Object.assign({\n      context: this.context\n    }, options.noise));\n    this.envelope = new AmplitudeEnvelope(Object.assign({\n      context: this.context\n    }, options.envelope));\n    this.noise.chain(this.envelope, this.output);\n  }\n  static getDefaults() {\n    return Object.assign(Instrument.getDefaults(), {\n      envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n        decay: 0.1,\n        sustain: 0\n      }),\n      noise: Object.assign(omitFromObject(Noise.getDefaults(), Object.keys(Source.getDefaults())), {\n        type: \"white\"\n      })\n    });\n  }\n  triggerAttack(time, velocity = 1) {\n    time = this.toSeconds(time);\n    this.envelope.triggerAttack(time, velocity);\n    this.noise.start(time);\n    if (this.envelope.sustain === 0) {\n      this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n    }\n    return this;\n  }\n  triggerRelease(time) {\n    time = this.toSeconds(time);\n    this.envelope.triggerRelease(time);\n    this.noise.stop(time + this.toSeconds(this.envelope.release));\n    return this;\n  }\n  sync() {\n    if (this._syncState()) {\n      this._syncMethod(\"triggerAttack\", 0);\n      this._syncMethod(\"triggerRelease\", 0);\n    }\n    return this;\n  }\n  triggerAttackRelease(duration, time, velocity = 1) {\n    time = this.toSeconds(time);\n    duration = this.toSeconds(duration);\n    this.triggerAttack(time, velocity);\n    this.triggerRelease(time + duration);\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this.noise.dispose();\n    this.envelope.dispose();\n    return this;\n  }\n}\nconst workletContext = /* @__PURE__ */ new Set();\nfunction addToWorklet(classOrFunction) {\n  workletContext.add(classOrFunction);\n}\nfunction registerProcessor(name, classDesc) {\n  const processor = `registerProcessor(\"${name}\", ${classDesc})`;\n  workletContext.add(processor);\n}\nfunction getWorkletGlobalScope() {\n  return Array.from(workletContext).join(\"\\n\");\n}\nclass ToneAudioWorklet extends ToneAudioNode {\n  constructor(options) {\n    super(options);\n    this.name = \"ToneAudioWorklet\";\n    this.workletOptions = {};\n    this.onprocessorerror = noOp;\n    const blobUrl = URL.createObjectURL(new Blob([getWorkletGlobalScope()], { type: \"text/javascript\" }));\n    const name = this._audioWorkletName();\n    this._dummyGain = this.context.createGain();\n    this._dummyParam = this._dummyGain.gain;\n    this.context.addAudioWorkletModule(blobUrl).then(() => {\n      if (!this.disposed) {\n        this._worklet = this.context.createAudioWorkletNode(name, this.workletOptions);\n        this._worklet.onprocessorerror = this.onprocessorerror.bind(this);\n        this.onReady(this._worklet);\n      }\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._dummyGain.disconnect();\n    if (this._worklet) {\n      this._worklet.port.postMessage(\"dispose\");\n      this._worklet.disconnect();\n    }\n    return this;\n  }\n}\nconst toneAudioWorkletProcessor = `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\naddToWorklet(toneAudioWorkletProcessor);\nconst singleIOProcess = `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\naddToWorklet(singleIOProcess);\nconst delayLine = `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\naddToWorklet(delayLine);\nconst workletName$1 = \"feedback-comb-filter\";\nconst feedbackCombFilter = `\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName$1, feedbackCombFilter);\nclass OnePoleFilter extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n    this.name = \"OnePoleFilter\";\n    const options = optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    this._frequency = options.frequency;\n    this._type = options.type;\n    this.input = new Gain({ context: this.context });\n    this.output = new Gain({ context: this.context });\n    this._createFilter();\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      frequency: 880,\n      type: \"lowpass\"\n    });\n  }\n  _createFilter() {\n    const oldFilter = this._filter;\n    const freq = this.toFrequency(this._frequency);\n    const t = 1 / (2 * Math.PI * freq);\n    if (this._type === \"lowpass\") {\n      const a0 = 1 / (t * this.context.sampleRate);\n      const b1 = a0 - 1;\n      this._filter = this.context.createIIRFilter([a0, 0], [1, b1]);\n    } else {\n      const b1 = 1 / (t * this.context.sampleRate) - 1;\n      this._filter = this.context.createIIRFilter([1, -1], [1, b1]);\n    }\n    this.input.chain(this._filter, this.output);\n    if (oldFilter) {\n      this.context.setTimeout(() => {\n        if (!this.disposed) {\n          this.input.disconnect(oldFilter);\n          oldFilter.disconnect();\n        }\n      }, this.blockTime);\n    }\n  }\n  get frequency() {\n    return this._frequency;\n  }\n  set frequency(fq) {\n    this._frequency = fq;\n    this._createFilter();\n  }\n  get type() {\n    return this._type;\n  }\n  set type(t) {\n    this._type = t;\n    this._createFilter();\n  }\n  getFrequencyResponse(len = 128) {\n    const freqValues = new Float32Array(len);\n    for (let i = 0; i < len; i++) {\n      const norm = Math.pow(i / len, 2);\n      const freq = norm * (2e4 - 20) + 20;\n      freqValues[i] = freq;\n    }\n    const magValues = new Float32Array(len);\n    const phaseValues = new Float32Array(len);\n    this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);\n    return magValues;\n  }\n  dispose() {\n    super.dispose();\n    this.input.dispose();\n    this.output.dispose();\n    this._filter.disconnect();\n    return this;\n  }\n}\nclass PolySynth extends Instrument {\n  constructor() {\n    super(optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]));\n    this.name = \"PolySynth\";\n    this._availableVoices = [];\n    this._activeVoices = [];\n    this._voices = [];\n    this._gcTimeout = -1;\n    this._averageActiveVoices = 0;\n    this._syncedRelease = (time) => this.releaseAll(time);\n    const options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]);\n    assert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n    const defaults = options.voice.getDefaults();\n    this.options = Object.assign(defaults, options.options);\n    this.voice = options.voice;\n    this.maxPolyphony = options.maxPolyphony;\n    this._dummyVoice = this._getNextAvailableVoice();\n    const index = this._voices.indexOf(this._dummyVoice);\n    this._voices.splice(index, 1);\n    this._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);\n  }\n  static getDefaults() {\n    return Object.assign(Instrument.getDefaults(), {\n      maxPolyphony: 32,\n      options: {},\n      voice: Synth\n    });\n  }\n  get activeVoices() {\n    return this._activeVoices.length;\n  }\n  _makeVoiceAvailable(voice) {\n    this._availableVoices.push(voice);\n    const activeVoiceIndex = this._activeVoices.findIndex((e) => e.voice === voice);\n    this._activeVoices.splice(activeVoiceIndex, 1);\n  }\n  _getNextAvailableVoice() {\n    if (this._availableVoices.length) {\n      return this._availableVoices.shift();\n    } else if (this._voices.length < this.maxPolyphony) {\n      const voice = new this.voice(Object.assign(this.options, {\n        context: this.context,\n        onsilence: this._makeVoiceAvailable.bind(this)\n      }));\n      assert(voice instanceof Monophonic, \"Voice must extend Monophonic class\");\n      voice.connect(this.output);\n      this._voices.push(voice);\n      return voice;\n    } else {\n      warn(\"Max polyphony exceeded. Note dropped.\");\n    }\n  }\n  _collectGarbage() {\n    this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n    if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n      const firstAvail = this._availableVoices.shift();\n      const index = this._voices.indexOf(firstAvail);\n      this._voices.splice(index, 1);\n      if (!this.context.isOffline) {\n        firstAvail.dispose();\n      }\n    }\n  }\n  _triggerAttack(notes, time, velocity) {\n    notes.forEach((note) => {\n      const midiNote = new MidiClass(this.context, note).toMidi();\n      const voice = this._getNextAvailableVoice();\n      if (voice) {\n        voice.triggerAttack(note, time, velocity);\n        this._activeVoices.push({\n          midi: midiNote,\n          voice,\n          released: false\n        });\n        this.log(\"triggerAttack\", note, time);\n      }\n    });\n  }\n  _triggerRelease(notes, time) {\n    notes.forEach((note) => {\n      const midiNote = new MidiClass(this.context, note).toMidi();\n      const event = this._activeVoices.find(({ midi, released }) => midi === midiNote && !released);\n      if (event) {\n        event.voice.triggerRelease(time);\n        event.released = true;\n        this.log(\"triggerRelease\", note, time);\n      }\n    });\n  }\n  _scheduleEvent(type, notes, time, velocity) {\n    assert(!this.disposed, \"Synth was already disposed\");\n    if (time <= this.now()) {\n      if (type === \"attack\") {\n        this._triggerAttack(notes, time, velocity);\n      } else {\n        this._triggerRelease(notes, time);\n      }\n    } else {\n      this.context.setTimeout(() => {\n        if (!this.disposed) {\n          this._scheduleEvent(type, notes, time, velocity);\n        }\n      }, time - this.now());\n    }\n  }\n  triggerAttack(notes, time, velocity) {\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n    const computedTime = this.toSeconds(time);\n    this._scheduleEvent(\"attack\", notes, computedTime, velocity);\n    return this;\n  }\n  triggerRelease(notes, time) {\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n    const computedTime = this.toSeconds(time);\n    this._scheduleEvent(\"release\", notes, computedTime);\n    return this;\n  }\n  triggerAttackRelease(notes, duration, time, velocity) {\n    const computedTime = this.toSeconds(time);\n    this.triggerAttack(notes, computedTime, velocity);\n    if (isArray(duration)) {\n      assert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n      notes = notes;\n      for (let i = 0; i < notes.length; i++) {\n        const d = duration[Math.min(i, duration.length - 1)];\n        const durationSeconds = this.toSeconds(d);\n        assert(durationSeconds > 0, \"The duration must be greater than 0\");\n        this.triggerRelease(notes[i], computedTime + durationSeconds);\n      }\n    } else {\n      const durationSeconds = this.toSeconds(duration);\n      assert(durationSeconds > 0, \"The duration must be greater than 0\");\n      this.triggerRelease(notes, computedTime + durationSeconds);\n    }\n    return this;\n  }\n  sync() {\n    if (this._syncState()) {\n      this._syncMethod(\"triggerAttack\", 1);\n      this._syncMethod(\"triggerRelease\", 1);\n      this.context.transport.on(\"stop\", this._syncedRelease);\n      this.context.transport.on(\"pause\", this._syncedRelease);\n      this.context.transport.on(\"loopEnd\", this._syncedRelease);\n    }\n    return this;\n  }\n  set(options) {\n    const sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]);\n    this.options = deepMerge(this.options, sanitizedOptions);\n    this._voices.forEach((voice) => voice.set(sanitizedOptions));\n    this._dummyVoice.set(sanitizedOptions);\n    return this;\n  }\n  get() {\n    return this._dummyVoice.get();\n  }\n  releaseAll(time) {\n    const computedTime = this.toSeconds(time);\n    this._activeVoices.forEach(({ voice }) => {\n      voice.triggerRelease(computedTime);\n    });\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._dummyVoice.dispose();\n    this._voices.forEach((v) => v.dispose());\n    this._activeVoices = [];\n    this._availableVoices = [];\n    this.context.clearInterval(this._gcTimeout);\n    return this;\n  }\n}\nclass Sampler extends Instrument {\n  constructor() {\n    super(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n    this.name = \"Sampler\";\n    this._activeSources = /* @__PURE__ */ new Map();\n    const options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n    const urlMap = {};\n    Object.keys(options.urls).forEach((note) => {\n      const noteNumber = parseInt(note, 10);\n      assert(isNote(note) || isNumber(noteNumber) && isFinite(noteNumber), `url key is neither a note or midi pitch: ${note}`);\n      if (isNote(note)) {\n        const mid = new FrequencyClass(this.context, note).toMidi();\n        urlMap[mid] = options.urls[note];\n      } else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n        urlMap[noteNumber] = options.urls[noteNumber];\n      }\n    });\n    this._buffers = new ToneAudioBuffers({\n      urls: urlMap,\n      onload: options.onload,\n      baseUrl: options.baseUrl,\n      onerror: options.onerror\n    });\n    this.attack = options.attack;\n    this.release = options.release;\n    this.curve = options.curve;\n    if (this._buffers.loaded) {\n      Promise.resolve().then(options.onload);\n    }\n  }\n  static getDefaults() {\n    return Object.assign(Instrument.getDefaults(), {\n      attack: 0,\n      baseUrl: \"\",\n      curve: \"exponential\",\n      onload: noOp,\n      onerror: noOp,\n      release: 0.1,\n      urls: {}\n    });\n  }\n  _findClosest(midi) {\n    const MAX_INTERVAL = 96;\n    let interval = 0;\n    while (interval < MAX_INTERVAL) {\n      if (this._buffers.has(midi + interval)) {\n        return -interval;\n      } else if (this._buffers.has(midi - interval)) {\n        return interval;\n      }\n      interval++;\n    }\n    throw new Error(`No available buffers for note: ${midi}`);\n  }\n  triggerAttack(notes, time, velocity = 1) {\n    this.log(\"triggerAttack\", notes, time, velocity);\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n    notes.forEach((note) => {\n      const midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());\n      const midi = Math.round(midiFloat);\n      const remainder = midiFloat - midi;\n      const difference = this._findClosest(midi);\n      const closestNote = midi - difference;\n      const buffer = this._buffers.get(closestNote);\n      const playbackRate = intervalToFrequencyRatio(difference + remainder);\n      const source = new ToneBufferSource({\n        url: buffer,\n        context: this.context,\n        curve: this.curve,\n        fadeIn: this.attack,\n        fadeOut: this.release,\n        playbackRate\n      }).connect(this.output);\n      source.start(time, 0, buffer.duration / playbackRate, velocity);\n      if (!isArray(this._activeSources.get(midi))) {\n        this._activeSources.set(midi, []);\n      }\n      this._activeSources.get(midi).push(source);\n      source.onended = () => {\n        if (this._activeSources && this._activeSources.has(midi)) {\n          const sources = this._activeSources.get(midi);\n          const index = sources.indexOf(source);\n          if (index !== -1) {\n            sources.splice(index, 1);\n          }\n        }\n      };\n    });\n    return this;\n  }\n  triggerRelease(notes, time) {\n    this.log(\"triggerRelease\", notes, time);\n    if (!Array.isArray(notes)) {\n      notes = [notes];\n    }\n    notes.forEach((note) => {\n      const midi = new FrequencyClass(this.context, note).toMidi();\n      if (this._activeSources.has(midi) && this._activeSources.get(midi).length) {\n        const sources = this._activeSources.get(midi);\n        time = this.toSeconds(time);\n        sources.forEach((source) => {\n          source.stop(time);\n        });\n        this._activeSources.set(midi, []);\n      }\n    });\n    return this;\n  }\n  releaseAll(time) {\n    const computedTime = this.toSeconds(time);\n    this._activeSources.forEach((sources) => {\n      while (sources.length) {\n        const source = sources.shift();\n        source.stop(computedTime);\n      }\n    });\n    return this;\n  }\n  sync() {\n    if (this._syncState()) {\n      this._syncMethod(\"triggerAttack\", 1);\n      this._syncMethod(\"triggerRelease\", 1);\n    }\n    return this;\n  }\n  triggerAttackRelease(notes, duration, time, velocity = 1) {\n    const computedTime = this.toSeconds(time);\n    this.triggerAttack(notes, computedTime, velocity);\n    if (isArray(duration)) {\n      assert(isArray(notes), \"notes must be an array when duration is array\");\n      notes.forEach((note, index) => {\n        const d = duration[Math.min(index, duration.length - 1)];\n        this.triggerRelease(note, computedTime + this.toSeconds(d));\n      });\n    } else {\n      this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n    }\n    return this;\n  }\n  add(note, url, callback) {\n    assert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n    if (isNote(note)) {\n      const mid = new FrequencyClass(this.context, note).toMidi();\n      this._buffers.add(mid, url, callback);\n    } else {\n      this._buffers.add(note, url, callback);\n    }\n    return this;\n  }\n  get loaded() {\n    return this._buffers.loaded;\n  }\n  dispose() {\n    super.dispose();\n    this._buffers.dispose();\n    this._activeSources.forEach((sources) => {\n      sources.forEach((source) => source.dispose());\n    });\n    this._activeSources.clear();\n    return this;\n  }\n}\n__decorate([\n  timeRange(0)\n], Sampler.prototype, \"attack\", void 0);\n__decorate([\n  timeRange(0)\n], Sampler.prototype, \"release\", void 0);\nclass ToneEvent extends ToneWithContext {\n  constructor() {\n    super(optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]));\n    this.name = \"ToneEvent\";\n    this._state = new StateTimeline(\"stopped\");\n    this._startOffset = 0;\n    const options = optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]);\n    this._loop = options.loop;\n    this.callback = options.callback;\n    this.value = options.value;\n    this._loopStart = this.toTicks(options.loopStart);\n    this._loopEnd = this.toTicks(options.loopEnd);\n    this._playbackRate = options.playbackRate;\n    this._probability = options.probability;\n    this._humanize = options.humanize;\n    this.mute = options.mute;\n    this._playbackRate = options.playbackRate;\n    this._state.increasing = true;\n    this._rescheduleEvents();\n  }\n  static getDefaults() {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      callback: noOp,\n      humanize: false,\n      loop: false,\n      loopEnd: \"1m\",\n      loopStart: 0,\n      mute: false,\n      playbackRate: 1,\n      probability: 1,\n      value: null\n    });\n  }\n  _rescheduleEvents(after = -1) {\n    this._state.forEachFrom(after, (event) => {\n      let duration;\n      if (event.state === \"started\") {\n        if (event.id !== -1) {\n          this.context.transport.clear(event.id);\n        }\n        const startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n        if (this._loop === true || isNumber(this._loop) && this._loop > 1) {\n          duration = Infinity;\n          if (isNumber(this._loop)) {\n            duration = this._loop * this._getLoopDuration();\n          }\n          const nextEvent = this._state.getAfter(startTick);\n          if (nextEvent !== null) {\n            duration = Math.min(duration, nextEvent.time - startTick);\n          }\n          if (duration !== Infinity) {\n            duration = new TicksClass(this.context, duration);\n          }\n          const interval = new TicksClass(this.context, this._getLoopDuration());\n          event.id = this.context.transport.scheduleRepeat(this._tick.bind(this), interval, new TicksClass(this.context, startTick), duration);\n        } else {\n          event.id = this.context.transport.schedule(this._tick.bind(this), new TicksClass(this.context, startTick));\n        }\n      }\n    });\n  }\n  get state() {\n    return this._state.getValueAtTime(this.context.transport.ticks);\n  }\n  get startOffset() {\n    return this._startOffset;\n  }\n  set startOffset(offset) {\n    this._startOffset = offset;\n  }\n  get probability() {\n    return this._probability;\n  }\n  set probability(prob) {\n    this._probability = prob;\n  }\n  get humanize() {\n    return this._humanize;\n  }\n  set humanize(variation) {\n    this._humanize = variation;\n  }\n  start(time) {\n    const ticks = this.toTicks(time);\n    if (this._state.getValueAtTime(ticks) === \"stopped\") {\n      this._state.add({\n        id: -1,\n        state: \"started\",\n        time: ticks\n      });\n      this._rescheduleEvents(ticks);\n    }\n    return this;\n  }\n  stop(time) {\n    this.cancel(time);\n    const ticks = this.toTicks(time);\n    if (this._state.getValueAtTime(ticks) === \"started\") {\n      this._state.setStateAtTime(\"stopped\", ticks, { id: -1 });\n      const previousEvent = this._state.getBefore(ticks);\n      let rescheduleTime = ticks;\n      if (previousEvent !== null) {\n        rescheduleTime = previousEvent.time;\n      }\n      this._rescheduleEvents(rescheduleTime);\n    }\n    return this;\n  }\n  cancel(time) {\n    time = defaultArg(time, -Infinity);\n    const ticks = this.toTicks(time);\n    this._state.forEachFrom(ticks, (event) => {\n      this.context.transport.clear(event.id);\n    });\n    this._state.cancel(ticks);\n    return this;\n  }\n  _tick(time) {\n    const ticks = this.context.transport.getTicksAtTime(time);\n    if (!this.mute && this._state.getValueAtTime(ticks) === \"started\") {\n      if (this.probability < 1 && Math.random() > this.probability) {\n        return;\n      }\n      if (this.humanize) {\n        let variation = 0.02;\n        if (!isBoolean(this.humanize)) {\n          variation = this.toSeconds(this.humanize);\n        }\n        time += (Math.random() * 2 - 1) * variation;\n      }\n      this.callback(time, this.value);\n    }\n  }\n  _getLoopDuration() {\n    return (this._loopEnd - this._loopStart) / this._playbackRate;\n  }\n  get loop() {\n    return this._loop;\n  }\n  set loop(loop) {\n    this._loop = loop;\n    this._rescheduleEvents();\n  }\n  get playbackRate() {\n    return this._playbackRate;\n  }\n  set playbackRate(rate) {\n    this._playbackRate = rate;\n    this._rescheduleEvents();\n  }\n  get loopEnd() {\n    return new TicksClass(this.context, this._loopEnd).toSeconds();\n  }\n  set loopEnd(loopEnd) {\n    this._loopEnd = this.toTicks(loopEnd);\n    if (this._loop) {\n      this._rescheduleEvents();\n    }\n  }\n  get loopStart() {\n    return new TicksClass(this.context, this._loopStart).toSeconds();\n  }\n  set loopStart(loopStart) {\n    this._loopStart = this.toTicks(loopStart);\n    if (this._loop) {\n      this._rescheduleEvents();\n    }\n  }\n  get progress() {\n    if (this._loop) {\n      const ticks = this.context.transport.ticks;\n      const lastEvent = this._state.get(ticks);\n      if (lastEvent !== null && lastEvent.state === \"started\") {\n        const loopDuration = this._getLoopDuration();\n        const progress = (ticks - lastEvent.time) % loopDuration;\n        return progress / loopDuration;\n      } else {\n        return 0;\n      }\n    } else {\n      return 0;\n    }\n  }\n  dispose() {\n    super.dispose();\n    this.cancel();\n    this._state.dispose();\n    return this;\n  }\n}\nclass Loop extends ToneWithContext {\n  constructor() {\n    super(optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]));\n    this.name = \"Loop\";\n    const options = optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]);\n    this._event = new ToneEvent({\n      context: this.context,\n      callback: this._tick.bind(this),\n      loop: true,\n      loopEnd: options.interval,\n      playbackRate: options.playbackRate,\n      probability: options.probability\n    });\n    this.callback = options.callback;\n    this.iterations = options.iterations;\n  }\n  static getDefaults() {\n    return Object.assign(ToneWithContext.getDefaults(), {\n      interval: \"4n\",\n      callback: noOp,\n      playbackRate: 1,\n      iterations: Infinity,\n      probability: 1,\n      mute: false,\n      humanize: false\n    });\n  }\n  start(time) {\n    this._event.start(time);\n    return this;\n  }\n  stop(time) {\n    this._event.stop(time);\n    return this;\n  }\n  cancel(time) {\n    this._event.cancel(time);\n    return this;\n  }\n  _tick(time) {\n    this.callback(time);\n  }\n  get state() {\n    return this._event.state;\n  }\n  get progress() {\n    return this._event.progress;\n  }\n  get interval() {\n    return this._event.loopEnd;\n  }\n  set interval(interval) {\n    this._event.loopEnd = interval;\n  }\n  get playbackRate() {\n    return this._event.playbackRate;\n  }\n  set playbackRate(rate) {\n    this._event.playbackRate = rate;\n  }\n  get humanize() {\n    return this._event.humanize;\n  }\n  set humanize(variation) {\n    this._event.humanize = variation;\n  }\n  get probability() {\n    return this._event.probability;\n  }\n  set probability(prob) {\n    this._event.probability = prob;\n  }\n  get mute() {\n    return this._event.mute;\n  }\n  set mute(mute) {\n    this._event.mute = mute;\n  }\n  get iterations() {\n    if (this._event.loop === true) {\n      return Infinity;\n    } else {\n      return this._event.loop;\n    }\n  }\n  set iterations(iters) {\n    if (iters === Infinity) {\n      this._event.loop = true;\n    } else {\n      this._event.loop = iters;\n    }\n  }\n  dispose() {\n    super.dispose();\n    this._event.dispose();\n    return this;\n  }\n}\nclass Part extends ToneEvent {\n  constructor() {\n    super(optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]));\n    this.name = \"Part\";\n    this._state = new StateTimeline(\"stopped\");\n    this._events = /* @__PURE__ */ new Set();\n    const options = optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]);\n    this._state.increasing = true;\n    options.events.forEach((event) => {\n      if (isArray(event)) {\n        this.add(event[0], event[1]);\n      } else {\n        this.add(event);\n      }\n    });\n  }\n  static getDefaults() {\n    return Object.assign(ToneEvent.getDefaults(), {\n      events: []\n    });\n  }\n  start(time, offset) {\n    const ticks = this.toTicks(time);\n    if (this._state.getValueAtTime(ticks) !== \"started\") {\n      offset = defaultArg(offset, this._loop ? this._loopStart : 0);\n      if (this._loop) {\n        offset = defaultArg(offset, this._loopStart);\n      } else {\n        offset = defaultArg(offset, 0);\n      }\n      const computedOffset = this.toTicks(offset);\n      this._state.add({\n        id: -1,\n        offset: computedOffset,\n        state: \"started\",\n        time: ticks\n      });\n      this._forEach((event) => {\n        this._startNote(event, ticks, computedOffset);\n      });\n    }\n    return this;\n  }\n  _startNote(event, ticks, offset) {\n    ticks -= offset;\n    if (this._loop) {\n      if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n        if (event.startOffset < offset) {\n          ticks += this._getLoopDuration();\n        }\n        event.start(new TicksClass(this.context, ticks));\n      } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n        event.loop = false;\n        event.start(new TicksClass(this.context, ticks));\n      }\n    } else if (event.startOffset >= offset) {\n      event.start(new TicksClass(this.context, ticks));\n    }\n  }\n  get startOffset() {\n    return this._startOffset;\n  }\n  set startOffset(offset) {\n    this._startOffset = offset;\n    this._forEach((event) => {\n      event.startOffset += this._startOffset;\n    });\n  }\n  stop(time) {\n    const ticks = this.toTicks(time);\n    this._state.cancel(ticks);\n    this._state.setStateAtTime(\"stopped\", ticks);\n    this._forEach((event) => {\n      event.stop(time);\n    });\n    return this;\n  }\n  at(time, value) {\n    const timeInTicks = new TransportTimeClass(this.context, time).toTicks();\n    const tickTime = new TicksClass(this.context, 1).toSeconds();\n    const iterator = this._events.values();\n    let result = iterator.next();\n    while (!result.done) {\n      const event = result.value;\n      if (Math.abs(timeInTicks - event.startOffset) < tickTime) {\n        if (isDefined(value)) {\n          event.value = value;\n        }\n        return event;\n      }\n      result = iterator.next();\n    }\n    if (isDefined(value)) {\n      this.add(time, value);\n      return this.at(time);\n    } else {\n      return null;\n    }\n  }\n  add(time, value) {\n    if (time instanceof Object && Reflect.has(time, \"time\")) {\n      value = time;\n      time = value.time;\n    }\n    const ticks = this.toTicks(time);\n    let event;\n    if (value instanceof ToneEvent) {\n      event = value;\n      event.callback = this._tick.bind(this);\n    } else {\n      event = new ToneEvent({\n        callback: this._tick.bind(this),\n        context: this.context,\n        value\n      });\n    }\n    event.startOffset = ticks;\n    event.set({\n      humanize: this.humanize,\n      loop: this.loop,\n      loopEnd: this.loopEnd,\n      loopStart: this.loopStart,\n      playbackRate: this.playbackRate,\n      probability: this.probability\n    });\n    this._events.add(event);\n    this._restartEvent(event);\n    return this;\n  }\n  _restartEvent(event) {\n    this._state.forEach((stateEvent) => {\n      if (stateEvent.state === \"started\") {\n        this._startNote(event, stateEvent.time, stateEvent.offset);\n      } else {\n        event.stop(new TicksClass(this.context, stateEvent.time));\n      }\n    });\n  }\n  remove(time, value) {\n    if (isObject(time) && time.hasOwnProperty(\"time\")) {\n      value = time;\n      time = value.time;\n    }\n    time = this.toTicks(time);\n    this._events.forEach((event) => {\n      if (event.startOffset === time) {\n        if (isUndef(value) || isDefined(value) && event.value === value) {\n          this._events.delete(event);\n          event.dispose();\n        }\n      }\n    });\n    return this;\n  }\n  clear() {\n    this._forEach((event) => event.dispose());\n    this._events.clear();\n    return this;\n  }\n  cancel(after) {\n    this._forEach((event) => event.cancel(after));\n    this._state.cancel(this.toTicks(after));\n    return this;\n  }\n  _forEach(callback) {\n    if (this._events) {\n      this._events.forEach((event) => {\n        if (event instanceof Part) {\n          event._forEach(callback);\n        } else {\n          callback(event);\n        }\n      });\n    }\n    return this;\n  }\n  _setAll(attr, value) {\n    this._forEach((event) => {\n      event[attr] = value;\n    });\n  }\n  _tick(time, value) {\n    if (!this.mute) {\n      this.callback(time, value);\n    }\n  }\n  _testLoopBoundries(event) {\n    if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {\n      event.cancel(0);\n    } else if (event.state === \"stopped\") {\n      this._restartEvent(event);\n    }\n  }\n  get probability() {\n    return this._probability;\n  }\n  set probability(prob) {\n    this._probability = prob;\n    this._setAll(\"probability\", prob);\n  }\n  get humanize() {\n    return this._humanize;\n  }\n  set humanize(variation) {\n    this._humanize = variation;\n    this._setAll(\"humanize\", variation);\n  }\n  get loop() {\n    return this._loop;\n  }\n  set loop(loop) {\n    this._loop = loop;\n    this._forEach((event) => {\n      event.loopStart = this.loopStart;\n      event.loopEnd = this.loopEnd;\n      event.loop = loop;\n      this._testLoopBoundries(event);\n    });\n  }\n  get loopEnd() {\n    return new TicksClass(this.context, this._loopEnd).toSeconds();\n  }\n  set loopEnd(loopEnd) {\n    this._loopEnd = this.toTicks(loopEnd);\n    if (this._loop) {\n      this._forEach((event) => {\n        event.loopEnd = loopEnd;\n        this._testLoopBoundries(event);\n      });\n    }\n  }\n  get loopStart() {\n    return new TicksClass(this.context, this._loopStart).toSeconds();\n  }\n  set loopStart(loopStart) {\n    this._loopStart = this.toTicks(loopStart);\n    if (this._loop) {\n      this._forEach((event) => {\n        event.loopStart = this.loopStart;\n        this._testLoopBoundries(event);\n      });\n    }\n  }\n  get playbackRate() {\n    return this._playbackRate;\n  }\n  set playbackRate(rate) {\n    this._playbackRate = rate;\n    this._setAll(\"playbackRate\", rate);\n  }\n  get length() {\n    return this._events.size;\n  }\n  dispose() {\n    super.dispose();\n    this.clear();\n    return this;\n  }\n}\nclass Sequence extends ToneEvent {\n  constructor() {\n    super(optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]));\n    this.name = \"Sequence\";\n    this._part = new Part({\n      callback: this._seqCallback.bind(this),\n      context: this.context\n    });\n    this._events = [];\n    this._eventsArray = [];\n    const options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n    this._subdivision = this.toTicks(options.subdivision);\n    this.events = options.events;\n    this.loop = options.loop;\n    this.loopStart = options.loopStart;\n    this.loopEnd = options.loopEnd;\n    this.playbackRate = options.playbackRate;\n    this.probability = options.probability;\n    this.humanize = options.humanize;\n    this.mute = options.mute;\n    this.playbackRate = options.playbackRate;\n  }\n  static getDefaults() {\n    return Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n      events: [],\n      loop: true,\n      loopEnd: 0,\n      loopStart: 0,\n      subdivision: \"8n\"\n    });\n  }\n  _seqCallback(time, value) {\n    if (value !== null && !this.mute) {\n      this.callback(time, value);\n    }\n  }\n  get events() {\n    return this._events;\n  }\n  set events(s) {\n    this.clear();\n    this._eventsArray = s;\n    this._events = this._createSequence(this._eventsArray);\n    this._eventsUpdated();\n  }\n  start(time, offset) {\n    this._part.start(time, offset ? this._indexTime(offset) : offset);\n    return this;\n  }\n  stop(time) {\n    this._part.stop(time);\n    return this;\n  }\n  get subdivision() {\n    return new TicksClass(this.context, this._subdivision).toSeconds();\n  }\n  _createSequence(array) {\n    return new Proxy(array, {\n      get: (target, property) => {\n        return target[property];\n      },\n      set: (target, property, value) => {\n        if (isString(property) && isFinite(parseInt(property, 10))) {\n          if (isArray(value)) {\n            target[property] = this._createSequence(value);\n          } else {\n            target[property] = value;\n          }\n        } else {\n          target[property] = value;\n        }\n        this._eventsUpdated();\n        return true;\n      }\n    });\n  }\n  _eventsUpdated() {\n    this._part.clear();\n    this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);\n    this.loopEnd = this.loopEnd;\n  }\n  _rescheduleSequence(sequence, subdivision, startOffset) {\n    sequence.forEach((value, index) => {\n      const eventOffset = index * subdivision + startOffset;\n      if (isArray(value)) {\n        this._rescheduleSequence(value, subdivision / value.length, eventOffset);\n      } else {\n        const startTime = new TicksClass(this.context, eventOffset, \"i\").toSeconds();\n        this._part.add(startTime, value);\n      }\n    });\n  }\n  _indexTime(index) {\n    return new TicksClass(this.context, index * this._subdivision + this.startOffset).toSeconds();\n  }\n  clear() {\n    this._part.clear();\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._part.dispose();\n    return this;\n  }\n  get loop() {\n    return this._part.loop;\n  }\n  set loop(l) {\n    this._part.loop = l;\n  }\n  get loopStart() {\n    return this._loopStart;\n  }\n  set loopStart(index) {\n    this._loopStart = index;\n    this._part.loopStart = this._indexTime(index);\n  }\n  get loopEnd() {\n    return this._loopEnd;\n  }\n  set loopEnd(index) {\n    this._loopEnd = index;\n    if (index === 0) {\n      this._part.loopEnd = this._indexTime(this._eventsArray.length);\n    } else {\n      this._part.loopEnd = this._indexTime(index);\n    }\n  }\n  get startOffset() {\n    return this._part.startOffset;\n  }\n  set startOffset(start2) {\n    this._part.startOffset = start2;\n  }\n  get playbackRate() {\n    return this._part.playbackRate;\n  }\n  set playbackRate(rate) {\n    this._part.playbackRate = rate;\n  }\n  get probability() {\n    return this._part.probability;\n  }\n  set probability(prob) {\n    this._part.probability = prob;\n  }\n  get progress() {\n    return this._part.progress;\n  }\n  get humanize() {\n    return this._part.humanize;\n  }\n  set humanize(variation) {\n    this._part.humanize = variation;\n  }\n  get length() {\n    return this._part.length;\n  }\n}\nclass CrossFade extends ToneAudioNode {\n  constructor() {\n    super(Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"])));\n    this.name = \"CrossFade\";\n    this._panner = this.context.createStereoPanner();\n    this._split = this.context.createChannelSplitter(2);\n    this._g2a = new GainToAudio({ context: this.context });\n    this.a = new Gain({\n      context: this.context,\n      gain: 0\n    });\n    this.b = new Gain({\n      context: this.context,\n      gain: 0\n    });\n    this.output = new Gain({ context: this.context });\n    this._internalChannels = [this.a, this.b];\n    const options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n    this.fade = new Signal({\n      context: this.context,\n      units: \"normalRange\",\n      value: options.fade\n    });\n    readOnly(this, \"fade\");\n    this.context.getConstant(1).connect(this._panner);\n    this._panner.connect(this._split);\n    this._panner.channelCount = 1;\n    this._panner.channelCountMode = \"explicit\";\n    connect(this._split, this.a.gain, 0);\n    connect(this._split, this.b.gain, 1);\n    this.fade.chain(this._g2a, this._panner.pan);\n    this.a.connect(this.output);\n    this.b.connect(this.output);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      fade: 0.5\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.a.dispose();\n    this.b.dispose();\n    this.output.dispose();\n    this.fade.dispose();\n    this._g2a.dispose();\n    this._panner.disconnect();\n    this._split.disconnect();\n    return this;\n  }\n}\nclass Effect extends ToneAudioNode {\n  constructor(options) {\n    super(options);\n    this.name = \"Effect\";\n    this._dryWet = new CrossFade({ context: this.context });\n    this.wet = this._dryWet.fade;\n    this.effectSend = new Gain({ context: this.context });\n    this.effectReturn = new Gain({ context: this.context });\n    this.input = new Gain({ context: this.context });\n    this.output = this._dryWet;\n    this.input.fan(this._dryWet.a, this.effectSend);\n    this.effectReturn.connect(this._dryWet.b);\n    this.wet.setValueAtTime(options.wet, 0);\n    this._internalChannels = [this.effectReturn, this.effectSend];\n    readOnly(this, \"wet\");\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      wet: 1\n    });\n  }\n  connectEffect(effect) {\n    this._internalChannels.push(effect);\n    this.effectSend.chain(effect, this.effectReturn);\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._dryWet.dispose();\n    this.effectSend.dispose();\n    this.effectReturn.dispose();\n    this.wet.dispose();\n    return this;\n  }\n}\nclass LFOEffect extends Effect {\n  constructor(options) {\n    super(options);\n    this.name = \"LFOEffect\";\n    this._lfo = new LFO({\n      context: this.context,\n      frequency: options.frequency,\n      amplitude: options.depth\n    });\n    this.depth = this._lfo.amplitude;\n    this.frequency = this._lfo.frequency;\n    this.type = options.type;\n    readOnly(this, [\"frequency\", \"depth\"]);\n  }\n  static getDefaults() {\n    return Object.assign(Effect.getDefaults(), {\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n  }\n  start(time) {\n    this._lfo.start(time);\n    return this;\n  }\n  stop(time) {\n    this._lfo.stop(time);\n    return this;\n  }\n  sync() {\n    this._lfo.sync();\n    return this;\n  }\n  unsync() {\n    this._lfo.unsync();\n    return this;\n  }\n  get type() {\n    return this._lfo.type;\n  }\n  set type(type) {\n    this._lfo.type = type;\n  }\n  dispose() {\n    super.dispose();\n    this._lfo.dispose();\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  }\n}\nclass AutoFilter extends LFOEffect {\n  constructor() {\n    super(optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]));\n    this.name = \"AutoFilter\";\n    const options = optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]);\n    this.filter = new Filter(Object.assign(options.filter, {\n      context: this.context\n    }));\n    this.connectEffect(this.filter);\n    this._lfo.connect(this.filter.frequency);\n    this.octaves = options.octaves;\n    this.baseFrequency = options.baseFrequency;\n  }\n  static getDefaults() {\n    return Object.assign(LFOEffect.getDefaults(), {\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n  }\n  get baseFrequency() {\n    return this._lfo.min;\n  }\n  set baseFrequency(freq) {\n    this._lfo.min = this.toFrequency(freq);\n    this.octaves = this._octaves;\n  }\n  get octaves() {\n    return this._octaves;\n  }\n  set octaves(oct) {\n    this._octaves = oct;\n    this._lfo.max = this._lfo.min * Math.pow(2, oct);\n  }\n  dispose() {\n    super.dispose();\n    this.filter.dispose();\n    return this;\n  }\n}\nclass Panner extends ToneAudioNode {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n    this.name = \"Panner\";\n    this._panner = this.context.createStereoPanner();\n    this.input = this._panner;\n    this.output = this._panner;\n    const options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n    this.pan = new Param({\n      context: this.context,\n      param: this._panner.pan,\n      value: options.pan,\n      minValue: -1,\n      maxValue: 1\n    });\n    this._panner.channelCount = options.channelCount;\n    this._panner.channelCountMode = \"explicit\";\n    readOnly(this, \"pan\");\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      pan: 0,\n      channelCount: 1\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._panner.disconnect();\n    this.pan.dispose();\n    return this;\n  }\n}\nclass AutoPanner extends LFOEffect {\n  constructor() {\n    super(optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]));\n    this.name = \"AutoPanner\";\n    const options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n    this._panner = new Panner({\n      context: this.context,\n      channelCount: options.channelCount\n    });\n    this.connectEffect(this._panner);\n    this._lfo.connect(this._panner.pan);\n    this._lfo.min = -1;\n    this._lfo.max = 1;\n  }\n  static getDefaults() {\n    return Object.assign(LFOEffect.getDefaults(), {\n      channelCount: 1\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._panner.dispose();\n    return this;\n  }\n}\nclass Follower extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]));\n    this.name = \"Follower\";\n    const options = optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]);\n    this._abs = this.input = new Abs({ context: this.context });\n    this._lowpass = this.output = new OnePoleFilter({\n      context: this.context,\n      frequency: 1 / this.toSeconds(options.smoothing),\n      type: \"lowpass\"\n    });\n    this._abs.connect(this._lowpass);\n    this._smoothing = options.smoothing;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      smoothing: 0.05\n    });\n  }\n  get smoothing() {\n    return this._smoothing;\n  }\n  set smoothing(smoothing) {\n    this._smoothing = smoothing;\n    this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);\n  }\n  dispose() {\n    super.dispose();\n    this._abs.dispose();\n    this._lowpass.dispose();\n    return this;\n  }\n}\nconst workletName = \"bit-crusher\";\nconst bitCrusherWorklet = `\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, bitCrusherWorklet);\nclass BitCrusher extends Effect {\n  constructor() {\n    super(optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]));\n    this.name = \"BitCrusher\";\n    const options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n    this._bitCrusherWorklet = new BitCrusherWorklet({\n      context: this.context,\n      bits: options.bits\n    });\n    this.connectEffect(this._bitCrusherWorklet);\n    this.bits = this._bitCrusherWorklet.bits;\n  }\n  static getDefaults() {\n    return Object.assign(Effect.getDefaults(), {\n      bits: 4\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._bitCrusherWorklet.dispose();\n    return this;\n  }\n}\nclass BitCrusherWorklet extends ToneAudioWorklet {\n  constructor() {\n    super(optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments));\n    this.name = \"BitCrusherWorklet\";\n    const options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n    this.input = new Gain({ context: this.context });\n    this.output = new Gain({ context: this.context });\n    this.bits = new Param({\n      context: this.context,\n      value: options.bits,\n      units: \"positive\",\n      minValue: 1,\n      maxValue: 16,\n      param: this._dummyParam,\n      swappable: true\n    });\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioWorklet.getDefaults(), {\n      bits: 12\n    });\n  }\n  _audioWorkletName() {\n    return workletName;\n  }\n  onReady(node) {\n    connectSeries(this.input, node, this.output);\n    const bits = node.parameters.get(\"bits\");\n    this.bits.setParam(bits);\n  }\n  dispose() {\n    super.dispose();\n    this.input.dispose();\n    this.output.dispose();\n    this.bits.dispose();\n    return this;\n  }\n}\nclass Split extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]));\n    this.name = \"Split\";\n    const options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n    this._splitter = this.input = this.output = this.context.createChannelSplitter(options.channels);\n    this._internalChannels = [this._splitter];\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      channels: 2\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._splitter.disconnect();\n    return this;\n  }\n}\nclass Merge extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]));\n    this.name = \"Merge\";\n    const options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n    this._merger = this.output = this.input = this.context.createChannelMerger(options.channels);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      channels: 2\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._merger.disconnect();\n    return this;\n  }\n}\nclass StereoEffect extends ToneAudioNode {\n  constructor(options) {\n    super(options);\n    this.name = \"StereoEffect\";\n    this.input = new Gain({ context: this.context });\n    this.input.channelCount = 2;\n    this.input.channelCountMode = \"explicit\";\n    this._dryWet = this.output = new CrossFade({\n      context: this.context,\n      fade: options.wet\n    });\n    this.wet = this._dryWet.fade;\n    this._split = new Split({ context: this.context, channels: 2 });\n    this._merge = new Merge({ context: this.context, channels: 2 });\n    this.input.connect(this._split);\n    this.input.connect(this._dryWet.a);\n    this._merge.connect(this._dryWet.b);\n    readOnly(this, [\"wet\"]);\n  }\n  connectEffectLeft(...nodes) {\n    this._split.connect(nodes[0], 0, 0);\n    connectSeries(...nodes);\n    connect(nodes[nodes.length - 1], this._merge, 0, 0);\n  }\n  connectEffectRight(...nodes) {\n    this._split.connect(nodes[0], 1, 0);\n    connectSeries(...nodes);\n    connect(nodes[nodes.length - 1], this._merge, 0, 1);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      wet: 1\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._dryWet.dispose();\n    this._split.dispose();\n    this._merge.dispose();\n    return this;\n  }\n}\nclass StereoFeedbackEffect extends StereoEffect {\n  constructor(options) {\n    super(options);\n    this.feedback = new Signal({\n      context: this.context,\n      value: options.feedback,\n      units: \"normalRange\"\n    });\n    this._feedbackL = new Gain({ context: this.context });\n    this._feedbackR = new Gain({ context: this.context });\n    this._feedbackSplit = new Split({ context: this.context, channels: 2 });\n    this._feedbackMerge = new Merge({ context: this.context, channels: 2 });\n    this._merge.connect(this._feedbackSplit);\n    this._feedbackMerge.connect(this._split);\n    this._feedbackSplit.connect(this._feedbackL, 0, 0);\n    this._feedbackL.connect(this._feedbackMerge, 0, 0);\n    this._feedbackSplit.connect(this._feedbackR, 1, 0);\n    this._feedbackR.connect(this._feedbackMerge, 0, 1);\n    this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n    readOnly(this, [\"feedback\"]);\n  }\n  static getDefaults() {\n    return Object.assign(StereoEffect.getDefaults(), {\n      feedback: 0.5\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.feedback.dispose();\n    this._feedbackL.dispose();\n    this._feedbackR.dispose();\n    this._feedbackSplit.dispose();\n    this._feedbackMerge.dispose();\n    return this;\n  }\n}\nclass StereoXFeedbackEffect extends StereoFeedbackEffect {\n  constructor(options) {\n    super(options);\n    this._feedbackL.disconnect();\n    this._feedbackL.connect(this._feedbackMerge, 0, 1);\n    this._feedbackR.disconnect();\n    this._feedbackR.connect(this._feedbackMerge, 0, 0);\n    readOnly(this, [\"feedback\"]);\n  }\n}\nclass PingPongDelay extends StereoXFeedbackEffect {\n  constructor() {\n    super(optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n    this.name = \"PingPongDelay\";\n    const options = optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n    this._leftDelay = new Delay({\n      context: this.context,\n      maxDelay: options.maxDelay\n    });\n    this._rightDelay = new Delay({\n      context: this.context,\n      maxDelay: options.maxDelay\n    });\n    this._rightPreDelay = new Delay({\n      context: this.context,\n      maxDelay: options.maxDelay\n    });\n    this.delayTime = new Signal({\n      context: this.context,\n      units: \"time\",\n      value: options.delayTime\n    });\n    this.connectEffectLeft(this._leftDelay);\n    this.connectEffectRight(this._rightPreDelay, this._rightDelay);\n    this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n    this._feedbackL.disconnect();\n    this._feedbackL.connect(this._rightDelay);\n    readOnly(this, [\"delayTime\"]);\n  }\n  static getDefaults() {\n    return Object.assign(StereoXFeedbackEffect.getDefaults(), {\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._leftDelay.dispose();\n    this._rightDelay.dispose();\n    this._rightPreDelay.dispose();\n    this.delayTime.dispose();\n    return this;\n  }\n}\nclass Reverb extends Effect {\n  constructor() {\n    super(optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]));\n    this.name = \"Reverb\";\n    this._convolver = this.context.createConvolver();\n    this.ready = Promise.resolve();\n    const options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n    this._decay = options.decay;\n    this._preDelay = options.preDelay;\n    this.generate();\n    this.connectEffect(this._convolver);\n  }\n  static getDefaults() {\n    return Object.assign(Effect.getDefaults(), {\n      decay: 1.5,\n      preDelay: 0.01\n    });\n  }\n  get decay() {\n    return this._decay;\n  }\n  set decay(time) {\n    time = this.toSeconds(time);\n    assertRange(time, 1e-3);\n    this._decay = time;\n    this.generate();\n  }\n  get preDelay() {\n    return this._preDelay;\n  }\n  set preDelay(time) {\n    time = this.toSeconds(time);\n    assertRange(time, 0);\n    this._preDelay = time;\n    this.generate();\n  }\n  generate() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const previousReady = this.ready;\n      const context2 = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n      const noiseL = new Noise({ context: context2 });\n      const noiseR = new Noise({ context: context2 });\n      const merge = new Merge({ context: context2 });\n      noiseL.connect(merge, 0, 0);\n      noiseR.connect(merge, 0, 1);\n      const gainNode = new Gain({ context: context2 }).toDestination();\n      merge.connect(gainNode);\n      noiseL.start(0);\n      noiseR.start(0);\n      gainNode.gain.setValueAtTime(0, 0);\n      gainNode.gain.setValueAtTime(1, this._preDelay);\n      gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n      const renderPromise = context2.render();\n      this.ready = renderPromise.then(noOp);\n      yield previousReady;\n      this._convolver.buffer = (yield renderPromise).get();\n      return this;\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._convolver.disconnect();\n    return this;\n  }\n}\nclass MidSideSplit extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n    this.name = \"MidSideSplit\";\n    this._split = this.input = new Split({\n      channels: 2,\n      context: this.context\n    });\n    this._midAdd = new Add({ context: this.context });\n    this.mid = new Multiply({\n      context: this.context,\n      value: Math.SQRT1_2\n    });\n    this._sideSubtract = new Subtract({ context: this.context });\n    this.side = new Multiply({\n      context: this.context,\n      value: Math.SQRT1_2\n    });\n    this._split.connect(this._midAdd, 0);\n    this._split.connect(this._midAdd.addend, 1);\n    this._split.connect(this._sideSubtract, 0);\n    this._split.connect(this._sideSubtract.subtrahend, 1);\n    this._midAdd.connect(this.mid);\n    this._sideSubtract.connect(this.side);\n  }\n  dispose() {\n    super.dispose();\n    this.mid.dispose();\n    this.side.dispose();\n    this._midAdd.dispose();\n    this._sideSubtract.dispose();\n    this._split.dispose();\n    return this;\n  }\n}\nclass MidSideMerge extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(MidSideMerge.getDefaults(), arguments));\n    this.name = \"MidSideMerge\";\n    this.mid = new Gain({ context: this.context });\n    this.side = new Gain({ context: this.context });\n    this._left = new Add({ context: this.context });\n    this._leftMult = new Multiply({\n      context: this.context,\n      value: Math.SQRT1_2\n    });\n    this._right = new Subtract({ context: this.context });\n    this._rightMult = new Multiply({\n      context: this.context,\n      value: Math.SQRT1_2\n    });\n    this._merge = this.output = new Merge({ context: this.context });\n    this.mid.fan(this._left);\n    this.side.connect(this._left.addend);\n    this.mid.connect(this._right);\n    this.side.connect(this._right.subtrahend);\n    this._left.connect(this._leftMult);\n    this._right.connect(this._rightMult);\n    this._leftMult.connect(this._merge, 0, 0);\n    this._rightMult.connect(this._merge, 0, 1);\n  }\n  dispose() {\n    super.dispose();\n    this.mid.dispose();\n    this.side.dispose();\n    this._leftMult.dispose();\n    this._rightMult.dispose();\n    this._left.dispose();\n    this._right.dispose();\n    return this;\n  }\n}\nclass MidSideEffect extends Effect {\n  constructor(options) {\n    super(options);\n    this.name = \"MidSideEffect\";\n    this._midSideMerge = new MidSideMerge({ context: this.context });\n    this._midSideSplit = new MidSideSplit({ context: this.context });\n    this._midSend = this._midSideSplit.mid;\n    this._sideSend = this._midSideSplit.side;\n    this._midReturn = this._midSideMerge.mid;\n    this._sideReturn = this._midSideMerge.side;\n    this.effectSend.connect(this._midSideSplit);\n    this._midSideMerge.connect(this.effectReturn);\n  }\n  connectEffectMid(...nodes) {\n    this._midSend.chain(...nodes, this._midReturn);\n  }\n  connectEffectSide(...nodes) {\n    this._sideSend.chain(...nodes, this._sideReturn);\n  }\n  dispose() {\n    super.dispose();\n    this._midSideSplit.dispose();\n    this._midSideMerge.dispose();\n    this._midSend.dispose();\n    this._sideSend.dispose();\n    this._midReturn.dispose();\n    this._sideReturn.dispose();\n    return this;\n  }\n}\nclass StereoWidener extends MidSideEffect {\n  constructor() {\n    super(optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]));\n    this.name = \"StereoWidener\";\n    const options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n    this.width = new Signal({\n      context: this.context,\n      value: options.width,\n      units: \"normalRange\"\n    });\n    readOnly(this, [\"width\"]);\n    this._twoTimesWidthMid = new Multiply({\n      context: this.context,\n      value: 2\n    });\n    this._twoTimesWidthSide = new Multiply({\n      context: this.context,\n      value: 2\n    });\n    this._midMult = new Multiply({ context: this.context });\n    this._twoTimesWidthMid.connect(this._midMult.factor);\n    this.connectEffectMid(this._midMult);\n    this._oneMinusWidth = new Subtract({ context: this.context });\n    this._oneMinusWidth.connect(this._twoTimesWidthMid);\n    connect(this.context.getConstant(1), this._oneMinusWidth);\n    this.width.connect(this._oneMinusWidth.subtrahend);\n    this._sideMult = new Multiply({ context: this.context });\n    this.width.connect(this._twoTimesWidthSide);\n    this._twoTimesWidthSide.connect(this._sideMult.factor);\n    this.connectEffectSide(this._sideMult);\n  }\n  static getDefaults() {\n    return Object.assign(MidSideEffect.getDefaults(), {\n      width: 0.5\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.width.dispose();\n    this._midMult.dispose();\n    this._sideMult.dispose();\n    this._twoTimesWidthMid.dispose();\n    this._twoTimesWidthSide.dispose();\n    this._oneMinusWidth.dispose();\n    return this;\n  }\n}\nclass Analyser extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]));\n    this.name = \"Analyser\";\n    this._analysers = [];\n    this._buffers = [];\n    const options = optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]);\n    this.input = this.output = this._gain = new Gain({ context: this.context });\n    this._split = new Split({\n      context: this.context,\n      channels: options.channels\n    });\n    this.input.connect(this._split);\n    assertRange(options.channels, 1);\n    for (let channel = 0; channel < options.channels; channel++) {\n      this._analysers[channel] = this.context.createAnalyser();\n      this._split.connect(this._analysers[channel], channel, 0);\n    }\n    this.size = options.size;\n    this.type = options.type;\n    this.smoothing = options.smoothing;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      size: 1024,\n      smoothing: 0.8,\n      type: \"fft\",\n      channels: 1\n    });\n  }\n  getValue() {\n    this._analysers.forEach((analyser, index) => {\n      const buffer = this._buffers[index];\n      if (this._type === \"fft\") {\n        analyser.getFloatFrequencyData(buffer);\n      } else if (this._type === \"waveform\") {\n        analyser.getFloatTimeDomainData(buffer);\n      }\n    });\n    if (this.channels === 1) {\n      return this._buffers[0];\n    } else {\n      return this._buffers;\n    }\n  }\n  get size() {\n    return this._analysers[0].frequencyBinCount;\n  }\n  set size(size) {\n    this._analysers.forEach((analyser, index) => {\n      analyser.fftSize = size * 2;\n      this._buffers[index] = new Float32Array(size);\n    });\n  }\n  get channels() {\n    return this._analysers.length;\n  }\n  get type() {\n    return this._type;\n  }\n  set type(type) {\n    assert(type === \"waveform\" || type === \"fft\", `Analyser: invalid type: ${type}`);\n    this._type = type;\n  }\n  get smoothing() {\n    return this._analysers[0].smoothingTimeConstant;\n  }\n  set smoothing(val) {\n    this._analysers.forEach((a) => a.smoothingTimeConstant = val);\n  }\n  dispose() {\n    super.dispose();\n    this._analysers.forEach((a) => a.disconnect());\n    this._split.dispose();\n    this._gain.dispose();\n    return this;\n  }\n}\nclass MeterBase extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(MeterBase.getDefaults(), arguments));\n    this.name = \"MeterBase\";\n    this.input = this.output = this._analyser = new Analyser({\n      context: this.context,\n      size: 256,\n      type: \"waveform\"\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._analyser.dispose();\n    return this;\n  }\n}\nclass Meter extends MeterBase {\n  constructor() {\n    super(optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]));\n    this.name = \"Meter\";\n    const options = optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]);\n    this.input = this.output = this._analyser = new Analyser({\n      context: this.context,\n      size: 256,\n      type: \"waveform\",\n      channels: options.channelCount\n    });\n    this.smoothing = options.smoothing, this.normalRange = options.normalRange;\n    this._rms = new Array(options.channelCount);\n    this._rms.fill(0);\n  }\n  static getDefaults() {\n    return Object.assign(MeterBase.getDefaults(), {\n      smoothing: 0.8,\n      normalRange: false,\n      channelCount: 1\n    });\n  }\n  getLevel() {\n    warn(\"'getLevel' has been changed to 'getValue'\");\n    return this.getValue();\n  }\n  getValue() {\n    const aValues = this._analyser.getValue();\n    const channelValues = this.channels === 1 ? [aValues] : aValues;\n    const vals = channelValues.map((values, index) => {\n      const totalSquared = values.reduce((total, current) => total + current * current, 0);\n      const rms = Math.sqrt(totalSquared / values.length);\n      this._rms[index] = Math.max(rms, this._rms[index] * this.smoothing);\n      return this.normalRange ? this._rms[index] : gainToDb(this._rms[index]);\n    });\n    if (this.channels === 1) {\n      return vals[0];\n    } else {\n      return vals;\n    }\n  }\n  get channels() {\n    return this._analyser.channels;\n  }\n  dispose() {\n    super.dispose();\n    this._analyser.dispose();\n    return this;\n  }\n}\nclass FFT extends MeterBase {\n  constructor() {\n    super(optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]));\n    this.name = \"FFT\";\n    const options = optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]);\n    this.normalRange = options.normalRange;\n    this._analyser.type = \"fft\";\n    this.size = options.size;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      normalRange: false,\n      size: 1024,\n      smoothing: 0.8\n    });\n  }\n  getValue() {\n    const values = this._analyser.getValue();\n    return values.map((v) => this.normalRange ? dbToGain(v) : v);\n  }\n  get size() {\n    return this._analyser.size;\n  }\n  set size(size) {\n    this._analyser.size = size;\n  }\n  get smoothing() {\n    return this._analyser.smoothing;\n  }\n  set smoothing(val) {\n    this._analyser.smoothing = val;\n  }\n  getFrequencyOfIndex(index) {\n    assert(0 <= index && index < this.size, `index must be greater than or equal to 0 and less than ${this.size}`);\n    return index * this.context.sampleRate / (this.size * 2);\n  }\n}\nclass Solo extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n    this.name = \"Solo\";\n    const options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n    this.input = this.output = new Gain({\n      context: this.context\n    });\n    if (!Solo._allSolos.has(this.context)) {\n      Solo._allSolos.set(this.context, /* @__PURE__ */ new Set());\n    }\n    Solo._allSolos.get(this.context).add(this);\n    this.solo = options.solo;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      solo: false\n    });\n  }\n  get solo() {\n    return this._isSoloed();\n  }\n  set solo(solo) {\n    if (solo) {\n      this._addSolo();\n    } else {\n      this._removeSolo();\n    }\n    Solo._allSolos.get(this.context).forEach((instance) => instance._updateSolo());\n  }\n  get muted() {\n    return this.input.gain.value === 0;\n  }\n  _addSolo() {\n    if (!Solo._soloed.has(this.context)) {\n      Solo._soloed.set(this.context, /* @__PURE__ */ new Set());\n    }\n    Solo._soloed.get(this.context).add(this);\n  }\n  _removeSolo() {\n    if (Solo._soloed.has(this.context)) {\n      Solo._soloed.get(this.context).delete(this);\n    }\n  }\n  _isSoloed() {\n    return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n  }\n  _noSolos() {\n    return !Solo._soloed.has(this.context) || Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0;\n  }\n  _updateSolo() {\n    if (this._isSoloed()) {\n      this.input.gain.value = 1;\n    } else if (this._noSolos()) {\n      this.input.gain.value = 1;\n    } else {\n      this.input.gain.value = 0;\n    }\n  }\n  dispose() {\n    super.dispose();\n    Solo._allSolos.get(this.context).delete(this);\n    this._removeSolo();\n    return this;\n  }\n}\nSolo._allSolos = /* @__PURE__ */ new Map();\nSolo._soloed = /* @__PURE__ */ new Map();\nclass PanVol extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n    this.name = \"PanVol\";\n    const options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n    this._panner = this.input = new Panner({\n      context: this.context,\n      pan: options.pan,\n      channelCount: options.channelCount\n    });\n    this.pan = this._panner.pan;\n    this._volume = this.output = new Volume({\n      context: this.context,\n      volume: options.volume\n    });\n    this.volume = this._volume.volume;\n    this._panner.connect(this._volume);\n    this.mute = options.mute;\n    readOnly(this, [\"pan\", \"volume\"]);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      pan: 0,\n      volume: 0,\n      channelCount: 1\n    });\n  }\n  get mute() {\n    return this._volume.mute;\n  }\n  set mute(mute) {\n    this._volume.mute = mute;\n  }\n  dispose() {\n    super.dispose();\n    this._panner.dispose();\n    this.pan.dispose();\n    this._volume.dispose();\n    this.volume.dispose();\n    return this;\n  }\n}\nclass Channel extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n    this.name = \"Channel\";\n    const options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n    this._solo = this.input = new Solo({\n      solo: options.solo,\n      context: this.context\n    });\n    this._panVol = this.output = new PanVol({\n      context: this.context,\n      pan: options.pan,\n      volume: options.volume,\n      mute: options.mute,\n      channelCount: options.channelCount\n    });\n    this.pan = this._panVol.pan;\n    this.volume = this._panVol.volume;\n    this._solo.connect(this._panVol);\n    readOnly(this, [\"pan\", \"volume\"]);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      pan: 0,\n      volume: 0,\n      mute: false,\n      solo: false,\n      channelCount: 1\n    });\n  }\n  get solo() {\n    return this._solo.solo;\n  }\n  set solo(solo) {\n    this._solo.solo = solo;\n  }\n  get muted() {\n    return this._solo.muted || this.mute;\n  }\n  get mute() {\n    return this._panVol.mute;\n  }\n  set mute(mute) {\n    this._panVol.mute = mute;\n  }\n  _getBus(name) {\n    if (!Channel.buses.has(name)) {\n      Channel.buses.set(name, new Gain({ context: this.context }));\n    }\n    return Channel.buses.get(name);\n  }\n  send(name, volume = 0) {\n    const bus = this._getBus(name);\n    const sendKnob = new Gain({\n      context: this.context,\n      units: \"decibels\",\n      gain: volume\n    });\n    this.connect(sendKnob);\n    sendKnob.connect(bus);\n    return sendKnob;\n  }\n  receive(name) {\n    const bus = this._getBus(name);\n    bus.connect(this);\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._panVol.dispose();\n    this.pan.dispose();\n    this.volume.dispose();\n    this._solo.dispose();\n    return this;\n  }\n}\nChannel.buses = /* @__PURE__ */ new Map();\nclass Listener extends ToneAudioNode {\n  constructor() {\n    super(...arguments);\n    this.name = \"Listener\";\n    this.positionX = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.positionX\n    });\n    this.positionY = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.positionY\n    });\n    this.positionZ = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.positionZ\n    });\n    this.forwardX = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.forwardX\n    });\n    this.forwardY = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.forwardY\n    });\n    this.forwardZ = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.forwardZ\n    });\n    this.upX = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.upX\n    });\n    this.upY = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.upY\n    });\n    this.upZ = new Param({\n      context: this.context,\n      param: this.context.rawContext.listener.upZ\n    });\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      positionX: 0,\n      positionY: 0,\n      positionZ: 0,\n      forwardX: 0,\n      forwardY: 0,\n      forwardZ: -1,\n      upX: 0,\n      upY: 1,\n      upZ: 0\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.positionX.dispose();\n    this.positionY.dispose();\n    this.positionZ.dispose();\n    this.forwardX.dispose();\n    this.forwardY.dispose();\n    this.forwardZ.dispose();\n    this.upX.dispose();\n    this.upY.dispose();\n    this.upZ.dispose();\n    return this;\n  }\n}\nonContextInit((context2) => {\n  context2.listener = new Listener({ context: context2 });\n});\nonContextClose((context2) => {\n  context2.listener.dispose();\n});\nclass Recorder extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Recorder.getDefaults(), arguments));\n    this.name = \"Recorder\";\n    const options = optionsFromArguments(Recorder.getDefaults(), arguments);\n    this.input = new Gain({\n      context: this.context\n    });\n    assert(Recorder.supported, \"Media Recorder API is not available\");\n    this._stream = this.context.createMediaStreamDestination();\n    this.input.connect(this._stream);\n    this._recorder = new MediaRecorder(this._stream.stream, {\n      mimeType: options.mimeType\n    });\n  }\n  static getDefaults() {\n    return ToneAudioNode.getDefaults();\n  }\n  get mimeType() {\n    return this._recorder.mimeType;\n  }\n  static get supported() {\n    return theWindow !== null && Reflect.has(theWindow, \"MediaRecorder\");\n  }\n  get state() {\n    if (this._recorder.state === \"inactive\") {\n      return \"stopped\";\n    } else if (this._recorder.state === \"paused\") {\n      return \"paused\";\n    } else {\n      return \"started\";\n    }\n  }\n  start() {\n    return __awaiter(this, void 0, void 0, function* () {\n      assert(this.state !== \"started\", \"Recorder is already started\");\n      const startPromise = new Promise((done) => {\n        const handleStart = () => {\n          this._recorder.removeEventListener(\"start\", handleStart, false);\n          done();\n        };\n        this._recorder.addEventListener(\"start\", handleStart, false);\n      });\n      this._recorder.start();\n      return yield startPromise;\n    });\n  }\n  stop() {\n    return __awaiter(this, void 0, void 0, function* () {\n      assert(this.state !== \"stopped\", \"Recorder is not started\");\n      const dataPromise = new Promise((done) => {\n        const handleData = (e) => {\n          this._recorder.removeEventListener(\"dataavailable\", handleData, false);\n          done(e.data);\n        };\n        this._recorder.addEventListener(\"dataavailable\", handleData, false);\n      });\n      this._recorder.stop();\n      return yield dataPromise;\n    });\n  }\n  pause() {\n    assert(this.state === \"started\", \"Recorder must be started\");\n    this._recorder.pause();\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this.input.dispose();\n    this._stream.disconnect();\n    return this;\n  }\n}\nclass Compressor extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]));\n    this.name = \"Compressor\";\n    this._compressor = this.context.createDynamicsCompressor();\n    this.input = this._compressor;\n    this.output = this._compressor;\n    const options = optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]);\n    this.threshold = new Param({\n      minValue: this._compressor.threshold.minValue,\n      maxValue: this._compressor.threshold.maxValue,\n      context: this.context,\n      convert: false,\n      param: this._compressor.threshold,\n      units: \"decibels\",\n      value: options.threshold\n    });\n    this.attack = new Param({\n      minValue: this._compressor.attack.minValue,\n      maxValue: this._compressor.attack.maxValue,\n      context: this.context,\n      param: this._compressor.attack,\n      units: \"time\",\n      value: options.attack\n    });\n    this.release = new Param({\n      minValue: this._compressor.release.minValue,\n      maxValue: this._compressor.release.maxValue,\n      context: this.context,\n      param: this._compressor.release,\n      units: \"time\",\n      value: options.release\n    });\n    this.knee = new Param({\n      minValue: this._compressor.knee.minValue,\n      maxValue: this._compressor.knee.maxValue,\n      context: this.context,\n      convert: false,\n      param: this._compressor.knee,\n      units: \"decibels\",\n      value: options.knee\n    });\n    this.ratio = new Param({\n      minValue: this._compressor.ratio.minValue,\n      maxValue: this._compressor.ratio.maxValue,\n      context: this.context,\n      convert: false,\n      param: this._compressor.ratio,\n      units: \"positive\",\n      value: options.ratio\n    });\n    readOnly(this, [\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      attack: 3e-3,\n      knee: 30,\n      ratio: 12,\n      release: 0.25,\n      threshold: -24\n    });\n  }\n  get reduction() {\n    return this._compressor.reduction;\n  }\n  dispose() {\n    super.dispose();\n    this._compressor.disconnect();\n    this.attack.dispose();\n    this.release.dispose();\n    this.threshold.dispose();\n    this.ratio.dispose();\n    this.knee.dispose();\n    return this;\n  }\n}\nclass Gate extends ToneAudioNode {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"])));\n    this.name = \"Gate\";\n    const options = optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]);\n    this._follower = new Follower({\n      context: this.context,\n      smoothing: options.smoothing\n    });\n    this._gt = new GreaterThan({\n      context: this.context,\n      value: dbToGain(options.threshold)\n    });\n    this.input = new Gain({ context: this.context });\n    this._gate = this.output = new Gain({ context: this.context });\n    this.input.connect(this._gate);\n    this.input.chain(this._follower, this._gt, this._gate.gain);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      smoothing: 0.1,\n      threshold: -40\n    });\n  }\n  get threshold() {\n    return gainToDb(this._gt.value);\n  }\n  set threshold(thresh) {\n    this._gt.value = dbToGain(thresh);\n  }\n  get smoothing() {\n    return this._follower.smoothing;\n  }\n  set smoothing(smoothingTime) {\n    this._follower.smoothing = smoothingTime;\n  }\n  dispose() {\n    super.dispose();\n    this.input.dispose();\n    this._follower.dispose();\n    this._gt.dispose();\n    this._gate.dispose();\n    return this;\n  }\n}\nclass Limiter extends ToneAudioNode {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"])));\n    this.name = \"Limiter\";\n    const options = optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]);\n    this._compressor = this.input = this.output = new Compressor({\n      context: this.context,\n      ratio: 20,\n      attack: 3e-3,\n      release: 0.01,\n      threshold: options.threshold\n    });\n    this.threshold = this._compressor.threshold;\n    readOnly(this, \"threshold\");\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      threshold: -12\n    });\n  }\n  get reduction() {\n    return this._compressor.reduction;\n  }\n  dispose() {\n    super.dispose();\n    this._compressor.dispose();\n    this.threshold.dispose();\n    return this;\n  }\n}\nfunction now() {\n  return getContext().now();\n}\nconst Transport = getContext().transport;\ngetContext().destination;\ngetContext().destination;\nfunction getDestination() {\n  return getContext().destination;\n}\ngetContext().listener;\nconst Draw = getContext().draw;\nconst context = getContext();\nexport { AutoPanner as A, BitCrusher as B, Compressor as C, Draw as D, Frequency as F, Gate as G, Limiter as L, Meter as M, NoiseSynth as N, PingPongDelay as P, Recorder as R, StereoWidener as S, Transport as T, UserMedia as U, Reverb as a, gainToDb as b, context as c, Midi as d, PolySynth as e, MonoSynth as f, getDestination as g, Sampler as h, Loop as i, PanVol as j, Sequence as k, Time as l, FFT as m, Gain as n, AutoFilter as o, dbToGain as p, now as q, start as s };\n", "import { unref, ref, watch, isRef, getCurrentScope, onScopeDispose, getCurrentInstance, onMounted, nextTick, shallowRef, computed, reactive, shallowReactive, watchEffect, onBeforeUnmount } from \"vue\";\nimport { R as Recorder, s as start$1, c as context, M as Meter, L as Limiter, a as Reverb, g as getDestination, b as gainToDb, d as Midi$1, S as StereoWidener, P as PingPongDelay, A as AutoPanner, C as Compressor, e as PolySynth, f as MonoSynth, F as Frequency, h as Sampler, i as Loop, T as Transport, j as PanVol, k as Sequence, D as Draw, l as Time, U as UserMedia, G as Gate, m as FFT, n as Gain, B as BitCrusher, o as AutoFilter, N as NoiseSynth, p as dbToGain, q as now } from \"./tone.js\";\nvar Aubio = function(Aubio2) {\n  Aubio2 = Aubio2 || {};\n  var c2;\n  c2 || (c2 = typeof Aubio2 !== \"undefined\" ? Aubio2 : {});\n  var n2 = {}, r2;\n  for (r2 in c2)\n    c2.hasOwnProperty(r2) && (n2[r2] = c2[r2]);\n  c2.arguments = [];\n  c2.thisProgram = \"./this.program\";\n  c2.quit = function(a2, b2) {\n    throw b2;\n  };\n  c2.preRun = [];\n  c2.postRun = [];\n  var u2 = false, v2 = false, aa = false, ba = false;\n  u2 = typeof window === \"object\";\n  v2 = typeof importScripts === \"function\";\n  aa = typeof process === \"object\" && typeof require === \"function\" && !u2 && !v2;\n  ba = !u2 && !aa && !v2;\n  var w2 = \"\";\n  function ca(a2) {\n    return c2.locateFile ? c2.locateFile(a2, w2) : w2 + a2;\n  }\n  if (aa) {\n    w2 = __dirname + \"/\";\n    var da, ea;\n    c2.read = function(a2, b2) {\n      da || (da = require(\"fs\"));\n      ea || (ea = require(\"path\"));\n      a2 = ea.normalize(a2);\n      a2 = da.readFileSync(a2);\n      return b2 ? a2 : a2.toString();\n    };\n    c2.readBinary = function(a2) {\n      a2 = c2.read(a2, true);\n      a2.buffer || (a2 = new Uint8Array(a2));\n      assert(a2.buffer);\n      return a2;\n    };\n    1 < process.argv.length && (c2.thisProgram = process.argv[1].replace(/\\\\/g, \"/\"));\n    c2.arguments = process.argv.slice(2);\n    process.on(\"uncaughtException\", function(a2) {\n      throw a2;\n    });\n    process.on(\"unhandledRejection\", function() {\n      process.exit(1);\n    });\n    c2.quit = function(a2) {\n      process.exit(a2);\n    };\n    c2.inspect = function() {\n      return \"[Emscripten Module object]\";\n    };\n  } else if (ba)\n    typeof read != \"undefined\" && (c2.read = function(a2) {\n      return read(a2);\n    }), c2.readBinary = function(a2) {\n      if (typeof readbuffer === \"function\")\n        return new Uint8Array(readbuffer(a2));\n      a2 = read(a2, \"binary\");\n      assert(typeof a2 === \"object\");\n      return a2;\n    }, typeof scriptArgs != \"undefined\" ? c2.arguments = scriptArgs : typeof arguments != \"undefined\" && (c2.arguments = arguments), typeof quit === \"function\" && (c2.quit = function(a2) {\n      quit(a2);\n    });\n  else if (u2 || v2) {\n    if (u2) {\n      var fa = this._currentScript;\n      fa.src.indexOf(\"blob:\") !== 0 && (w2 = \"/\");\n    } else\n      v2 && (w2 = \"/\");\n    c2.read = function(a2) {\n      var b2 = new XMLHttpRequest();\n      b2.open(\"GET\", a2, false);\n      b2.send(null);\n      return b2.responseText;\n    };\n    v2 && (c2.readBinary = function(a2) {\n      var b2 = new XMLHttpRequest();\n      b2.open(\"GET\", a2, false);\n      b2.responseType = \"arraybuffer\";\n      b2.send(null);\n      return new Uint8Array(b2.response);\n    });\n    c2.readAsync = function(a2, b2, d2) {\n      var e2 = new XMLHttpRequest();\n      e2.open(\"GET\", a2, true);\n      e2.responseType = \"arraybuffer\";\n      e2.onload = function() {\n        e2.status == 200 || e2.status == 0 && e2.response ? b2(e2.response) : d2();\n      };\n      e2.onerror = d2;\n      e2.send(null);\n    };\n    c2.setWindowTitle = function(a2) {\n    };\n  }\n  var ha = c2.print || (typeof console !== \"undefined\" ? console.log.bind(console) : typeof print !== \"undefined\" ? print : null), x2 = c2.printErr || (typeof printErr !== \"undefined\" ? printErr : typeof console !== \"undefined\" && console.warn.bind(console) || ha);\n  for (r2 in n2)\n    n2.hasOwnProperty(r2) && (c2[r2] = n2[r2]);\n  n2 = void 0;\n  function ia(a2) {\n    var b2;\n    b2 || (b2 = 16);\n    return Math.ceil(a2 / b2) * b2;\n  }\n  var ja = {\n    \"f64-rem\": function(a2, b2) {\n      return a2 % b2;\n    },\n    debugger: function() {\n      debugger;\n    }\n  }, ka = 0;\n  function assert(a2, b2) {\n    a2 || y2(\"Assertion failed: \" + b2);\n  }\n  var la = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\n  typeof TextDecoder !== \"undefined\" && new TextDecoder(\"utf-16le\");\n  var buffer, ma, z, na, oa, A, B, pa, qa;\n  function ra() {\n    c2.HEAP8 = ma = new Int8Array(buffer);\n    c2.HEAP16 = na = new Int16Array(buffer);\n    c2.HEAP32 = A = new Int32Array(buffer);\n    c2.HEAPU8 = z = new Uint8Array(buffer);\n    c2.HEAPU16 = oa = new Uint16Array(buffer);\n    c2.HEAPU32 = B = new Uint32Array(buffer);\n    c2.HEAPF32 = pa = new Float32Array(buffer);\n    c2.HEAPF64 = qa = new Float64Array(buffer);\n  }\n  var sa, C, ta, ua, va, wa, xa;\n  sa = C = ta = ua = va = wa = xa = 0;\n  function ya() {\n    y2(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \" + E + \", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \");\n  }\n  var za = c2.TOTAL_STACK || 5242880, E = c2.TOTAL_MEMORY || 16777216;\n  E < za && x2(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \" + E + \"! (TOTAL_STACK=\" + za + \")\");\n  c2.buffer ? buffer = c2.buffer : (typeof WebAssembly === \"object\" && typeof WebAssembly.Memory === \"function\" ? (c2.wasmMemory = new WebAssembly.Memory({\n    initial: E / 65536,\n    maximum: E / 65536\n  }), buffer = c2.wasmMemory.buffer) : buffer = new ArrayBuffer(E), c2.buffer = buffer);\n  ra();\n  function Aa(a2) {\n    for (; 0 < a2.length; ) {\n      var b2 = a2.shift();\n      if (typeof b2 == \"function\")\n        b2();\n      else {\n        var d2 = b2.B;\n        typeof d2 === \"number\" ? b2.F === void 0 ? c2.dynCall_v(d2) : c2.dynCall_vi(d2, b2.F) : d2(b2.F === void 0 ? null : b2.F);\n      }\n    }\n  }\n  var Ba = [], Ca = [], Da = [], Ea = [], Fa = false;\n  function Ga() {\n    var a2 = c2.preRun.shift();\n    Ba.unshift(a2);\n  }\n  var Ha = Math.cos, Ia = Math.sin, F = 0, G = null;\n  c2.preloadedImages = {};\n  c2.preloadedAudios = {};\n  function Ka(a2) {\n    return String.prototype.startsWith ? a2.startsWith(\"data:application/octet-stream;base64,\") : a2.indexOf(\"data:application/octet-stream;base64,\") === 0;\n  }\n  (function() {\n    function a2() {\n      try {\n        if (c2.wasmBinary)\n          return new Uint8Array(c2.wasmBinary);\n        if (c2.readBinary)\n          return c2.readBinary(f2);\n        throw \"both async and sync fetching of the wasm failed\";\n      } catch (g2) {\n        y2(g2);\n      }\n    }\n    function b2() {\n      return c2.wasmBinary || !u2 && !v2 || typeof fetch !== \"function\" ? new Promise(function(b3) {\n        b3(a2());\n      }) : fetch(f2, { credentials: \"same-origin\" }).then(function(a3) {\n        if (!a3.ok)\n          throw \"failed to load wasm binary file at '\" + f2 + \"'\";\n        return a3.arrayBuffer();\n      }).catch(function() {\n        return a2();\n      });\n    }\n    function d2(a3) {\n      function d3(a4) {\n        k2 = a4.exports;\n        if (k2.memory) {\n          a4 = k2.memory;\n          var b3 = c2.buffer;\n          a4.byteLength < b3.byteLength && x2(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\");\n          b3 = new Int8Array(b3);\n          new Int8Array(a4).set(b3);\n          c2.buffer = buffer = a4;\n          ra();\n        }\n        c2.asm = k2;\n        c2.usingWasm = true;\n        F--;\n        c2.monitorRunDependencies && c2.monitorRunDependencies(F);\n        F == 0 && (G && (a4 = G, G = null, a4()));\n      }\n      function e3(a4) {\n        d3(a4.instance);\n      }\n      function g2(a4) {\n        b2().then(function(a5) {\n          return WebAssembly.instantiate(a5, h2);\n        }).then(a4).catch(function(a5) {\n          x2(\"failed to asynchronously prepare wasm: \" + a5);\n          y2(a5);\n        });\n      }\n      if (typeof WebAssembly !== \"object\")\n        return x2(\"no native wasm support detected\"), false;\n      if (!(c2.wasmMemory instanceof WebAssembly.Memory))\n        return x2(\"no native wasm Memory in use\"), false;\n      a3.memory = c2.wasmMemory;\n      h2.global = { NaN: NaN, Infinity: Infinity };\n      h2[\"global.Math\"] = Math;\n      h2.env = a3;\n      F++;\n      c2.monitorRunDependencies && c2.monitorRunDependencies(F);\n      if (c2.instantiateWasm)\n        try {\n          return c2.instantiateWasm(h2, d3);\n        } catch (vb) {\n          return x2(\"Module.instantiateWasm callback failed with error: \" + vb), false;\n        }\n      c2.wasmBinary || typeof WebAssembly.instantiateStreaming !== \"function\" || Ka(f2) || typeof fetch !== \"function\" ? g2(e3) : WebAssembly.instantiateStreaming(fetch(f2, { credentials: \"same-origin\" }), h2).then(e3).catch(function(a4) {\n        x2(\"wasm streaming compile failed: \" + a4);\n        x2(\"falling back to ArrayBuffer instantiation\");\n        g2(e3);\n      });\n      return {};\n    }\n    var e2 = \"aubio.wast\", f2 = \"aubio.wasm\", l2 = \"aubio.temp.asm.js\";\n    Ka(e2) || (e2 = ca(e2));\n    Ka(f2) || (f2 = ca(f2));\n    Ka(l2) || (l2 = ca(l2));\n    var h2 = { global: null, env: null, asm2wasm: ja, parent: c2 }, k2 = null;\n    c2.asmPreload = c2.asm;\n    var m2 = c2.reallocBuffer;\n    c2.reallocBuffer = function(a3) {\n      if (p2 === \"asmjs\")\n        var b3 = m2(a3);\n      else\n        a: {\n          var d3 = c2.usingWasm ? 65536 : 16777216;\n          0 < a3 % d3 && (a3 += d3 - a3 % d3);\n          d3 = c2.buffer.byteLength;\n          if (c2.usingWasm)\n            try {\n              b3 = c2.wasmMemory.grow((a3 - d3) / 65536) !== -1 ? c2.buffer = c2.wasmMemory.buffer : null;\n              break a;\n            } catch (t2) {\n              b3 = null;\n              break a;\n            }\n          b3 = void 0;\n        }\n      return b3;\n    };\n    var p2 = \"\";\n    c2.asm = function(a3, b3) {\n      if (!b3.table) {\n        a3 = c2.wasmTableSize;\n        a3 === void 0 && (a3 = 1024);\n        var e3 = c2.wasmMaxTableSize;\n        b3.table = typeof WebAssembly === \"object\" && typeof WebAssembly.Table === \"function\" ? e3 !== void 0 ? new WebAssembly.Table({\n          initial: a3,\n          maximum: e3,\n          element: \"anyfunc\"\n        }) : new WebAssembly.Table({ initial: a3, element: \"anyfunc\" }) : Array(a3);\n        c2.wasmTable = b3.table;\n      }\n      b3.memoryBase || (b3.memoryBase = c2.STATIC_BASE);\n      b3.tableBase || (b3.tableBase = 0);\n      b3 = d2(b3);\n      assert(b3, \"no binaryen method succeeded.\");\n      return b3;\n    };\n  })();\n  sa = 1024;\n  C = sa + 9312;\n  Ca.push({\n    B: function() {\n      La();\n    }\n  }, {\n    B: function() {\n      Ma();\n    }\n  }, {\n    B: function() {\n      Na();\n    }\n  }, {\n    B: function() {\n      Oa();\n    }\n  });\n  c2.STATIC_BASE = sa;\n  c2.STATIC_BUMP = 9312;\n  C += 16;\n  var H2 = 0;\n  function I() {\n    H2 += 4;\n    return A[H2 - 4 >> 2];\n  }\n  var Pa = {};\n  function J(a2, b2) {\n    H2 = b2;\n    try {\n      var d2 = I(), e2 = I(), f2 = I();\n      a2 = 0;\n      J.J || (J.J = [null, [], []], J.P = function(a3, b3) {\n        var d3 = J.J[a3];\n        assert(d3);\n        if (b3 === 0 || b3 === 10) {\n          a3 = a3 === 1 ? ha : x2;\n          a: {\n            for (var e3 = b3 = 0; d3[e3]; )\n              ++e3;\n            if (16 < e3 - b3 && d3.subarray && la)\n              b3 = la.decode(d3.subarray(b3, e3));\n            else\n              for (e3 = \"\"; ; ) {\n                var f3 = d3[b3++];\n                if (!f3) {\n                  b3 = e3;\n                  break a;\n                }\n                if (f3 & 128) {\n                  var k3 = d3[b3++] & 63;\n                  if ((f3 & 224) == 192)\n                    e3 += String.fromCharCode((f3 & 31) << 6 | k3);\n                  else {\n                    var l3 = d3[b3++] & 63;\n                    if ((f3 & 240) == 224)\n                      f3 = (f3 & 15) << 12 | k3 << 6 | l3;\n                    else {\n                      var h3 = d3[b3++] & 63;\n                      if ((f3 & 248) == 240)\n                        f3 = (f3 & 7) << 18 | k3 << 12 | l3 << 6 | h3;\n                      else {\n                        var bb = d3[b3++] & 63;\n                        if ((f3 & 252) == 248)\n                          f3 = (f3 & 3) << 24 | k3 << 18 | l3 << 12 | h3 << 6 | bb;\n                        else {\n                          var m2 = d3[b3++] & 63;\n                          f3 = (f3 & 1) << 30 | k3 << 24 | l3 << 18 | h3 << 12 | bb << 6 | m2;\n                        }\n                      }\n                    }\n                    65536 > f3 ? e3 += String.fromCharCode(f3) : (f3 -= 65536, e3 += String.fromCharCode(55296 | f3 >> 10, 56320 | f3 & 1023));\n                  }\n                } else\n                  e3 += String.fromCharCode(f3);\n              }\n          }\n          a3(b3);\n          d3.length = 0;\n        } else\n          d3.push(b3);\n      });\n      for (b2 = 0; b2 < f2; b2++) {\n        for (var l2 = A[e2 + 8 * b2 >> 2], h2 = A[e2 + (8 * b2 + 4) >> 2], k2 = 0; k2 < h2; k2++)\n          J.P(d2, z[l2 + k2]);\n        a2 += h2;\n      }\n      return a2;\n    } catch (m2) {\n      return typeof FS !== \"undefined\" && m2 instanceof FS.I || y2(m2), -m2.L;\n    }\n  }\n  function Qa(a2) {\n    switch (a2) {\n      case 1:\n        return 0;\n      case 2:\n        return 1;\n      case 4:\n        return 2;\n      case 8:\n        return 3;\n      default:\n        throw new TypeError(\"Unknown type size: \" + a2);\n    }\n  }\n  var Ra = void 0;\n  function K(a2) {\n    for (var b2 = \"\"; z[a2]; )\n      b2 += Ra[z[a2++]];\n    return b2;\n  }\n  var L = {}, M2 = {}, Sa = {};\n  function Ta(a2) {\n    if (a2 === void 0)\n      return \"_unknown\";\n    a2 = a2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n    var b2 = a2.charCodeAt(0);\n    return 48 <= b2 && 57 >= b2 ? \"_\" + a2 : a2;\n  }\n  function Ua(a2, b2) {\n    a2 = Ta(a2);\n    return new Function(\"body\", \"return function \" + a2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(b2);\n  }\n  function Va(a2) {\n    var b2 = Error, d2 = Ua(a2, function(b3) {\n      this.name = a2;\n      this.message = b3;\n      b3 = Error(b3).stack;\n      b3 !== void 0 && (this.stack = this.toString() + \"\\n\" + b3.replace(/^Error(:[^\\n]*)?\\n/, \"\"));\n    });\n    d2.prototype = Object.create(b2.prototype);\n    d2.prototype.constructor = d2;\n    d2.prototype.toString = function() {\n      return this.message === void 0 ? this.name : this.name + \": \" + this.message;\n    };\n    return d2;\n  }\n  var O = void 0;\n  function P(a2) {\n    throw new O(a2);\n  }\n  var Wa = void 0;\n  function Xa(a2) {\n    throw new Wa(a2);\n  }\n  function Ya(a2, b2, d2) {\n    function e2(b3) {\n      b3 = d2(b3);\n      b3.length !== a2.length && Xa(\"Mismatched type converter count\");\n      for (var e3 = 0; e3 < a2.length; ++e3)\n        Q(a2[e3], b3[e3]);\n    }\n    a2.forEach(function(a3) {\n      Sa[a3] = b2;\n    });\n    var f2 = Array(b2.length), l2 = [], h2 = 0;\n    b2.forEach(function(a3, b3) {\n      M2.hasOwnProperty(a3) ? f2[b3] = M2[a3] : (l2.push(a3), L.hasOwnProperty(a3) || (L[a3] = []), L[a3].push(function() {\n        f2[b3] = M2[a3];\n        ++h2;\n        h2 === l2.length && e2(f2);\n      }));\n    });\n    l2.length === 0 && e2(f2);\n  }\n  function Q(a2, b2, d2) {\n    d2 = d2 || {};\n    if (!(\"argPackAdvance\" in b2))\n      throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n    var e2 = b2.name;\n    a2 || P('type \"' + e2 + '\" must have a positive integer typeid pointer');\n    if (M2.hasOwnProperty(a2)) {\n      if (d2.X)\n        return;\n      P(\"Cannot register type '\" + e2 + \"' twice\");\n    }\n    M2[a2] = b2;\n    delete Sa[a2];\n    L.hasOwnProperty(a2) && (b2 = L[a2], delete L[a2], b2.forEach(function(a3) {\n      a3();\n    }));\n  }\n  function Za(a2) {\n    P(a2.a.f.b.name + \" instance already deleted\");\n  }\n  var $a = void 0, ab = [];\n  function cb() {\n    for (; ab.length; ) {\n      var a2 = ab.pop();\n      a2.a.s = false;\n      a2[\"delete\"]();\n    }\n  }\n  function R() {\n  }\n  var db = {};\n  function eb(a2, b2, d2) {\n    if (a2[b2].j === void 0) {\n      var e2 = a2[b2];\n      a2[b2] = function() {\n        a2[b2].j.hasOwnProperty(arguments.length) || P(\"Function '\" + d2 + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + a2[b2].j + \")!\");\n        return a2[b2].j[arguments.length].apply(this, arguments);\n      };\n      a2[b2].j = [];\n      a2[b2].j[e2.A] = e2;\n    }\n  }\n  function fb(a2, b2) {\n    c2.hasOwnProperty(a2) ? (P(\"Cannot register public name '\" + a2 + \"' twice\"), eb(c2, a2, a2), c2.hasOwnProperty(void 0) && P(\"Cannot register multiple overloads of a function with the same number of arguments (undefined)!\"), c2[a2].j[void 0] = b2) : c2[a2] = b2;\n  }\n  function gb(a2, b2, d2, e2, f2, l2, h2, k2) {\n    this.name = a2;\n    this.constructor = b2;\n    this.u = d2;\n    this.o = e2;\n    this.i = f2;\n    this.T = l2;\n    this.w = h2;\n    this.S = k2;\n    this.Z = [];\n  }\n  function hb(a2, b2, d2) {\n    for (; b2 !== d2; )\n      b2.w || P(\"Expected null or instance of \" + d2.name + \", got an instance of \" + b2.name), a2 = b2.w(a2), b2 = b2.i;\n    return a2;\n  }\n  function ib(a2, b2) {\n    if (b2 === null)\n      return this.G && P(\"null is not a valid \" + this.name), 0;\n    b2.a || P('Cannot pass \"' + S2(b2) + '\" as a ' + this.name);\n    b2.a.c || P(\"Cannot pass deleted object as a pointer of type \" + this.name);\n    return hb(b2.a.c, b2.a.f.b, this.b);\n  }\n  function jb(a2, b2) {\n    if (b2 === null) {\n      this.G && P(\"null is not a valid \" + this.name);\n      if (this.D) {\n        var d2 = this.$();\n        a2 !== null && a2.push(this.o, d2);\n        return d2;\n      }\n      return 0;\n    }\n    b2.a || P('Cannot pass \"' + S2(b2) + '\" as a ' + this.name);\n    b2.a.c || P(\"Cannot pass deleted object as a pointer of type \" + this.name);\n    !this.C && b2.a.f.C && P(\"Cannot convert argument of type \" + (b2.a.h ? b2.a.h.name : b2.a.f.name) + \" to parameter type \" + this.name);\n    d2 = hb(b2.a.c, b2.a.f.b, this.b);\n    if (this.D)\n      switch (b2.a.g === void 0 && P(\"Passing raw pointer to smart pointer is illegal\"), this.ba) {\n        case 0:\n          b2.a.h === this ? d2 = b2.a.g : P(\"Cannot convert argument of type \" + (b2.a.h ? b2.a.h.name : b2.a.f.name) + \" to parameter type \" + this.name);\n          break;\n        case 1:\n          d2 = b2.a.g;\n          break;\n        case 2:\n          if (b2.a.h === this)\n            d2 = b2.a.g;\n          else {\n            var e2 = b2.clone();\n            d2 = this.aa(d2, T(function() {\n              e2[\"delete\"]();\n            }));\n            a2 !== null && a2.push(this.o, d2);\n          }\n          break;\n        default:\n          P(\"Unsupporting sharing policy\");\n      }\n    return d2;\n  }\n  function kb(a2, b2) {\n    if (b2 === null)\n      return this.G && P(\"null is not a valid \" + this.name), 0;\n    b2.a || P('Cannot pass \"' + S2(b2) + '\" as a ' + this.name);\n    b2.a.c || P(\"Cannot pass deleted object as a pointer of type \" + this.name);\n    b2.a.f.C && P(\"Cannot convert argument of type \" + b2.a.f.name + \" to parameter type \" + this.name);\n    return hb(b2.a.c, b2.a.f.b, this.b);\n  }\n  function lb(a2) {\n    return this.fromWireType(B[a2 >> 2]);\n  }\n  function ob(a2, b2, d2) {\n    if (b2 === d2)\n      return a2;\n    if (d2.i === void 0)\n      return null;\n    a2 = ob(a2, b2, d2.i);\n    return a2 === null ? null : d2.S(a2);\n  }\n  var pb = {};\n  function qb(a2, b2) {\n    for (b2 === void 0 && P(\"ptr should not be undefined\"); a2.i; )\n      b2 = a2.w(b2), a2 = a2.i;\n    return pb[b2];\n  }\n  function rb(a2, b2) {\n    b2.f && b2.c || Xa(\"makeClassHandle requires ptr and ptrType\");\n    !!b2.h !== !!b2.g && Xa(\"Both smartPtrType and smartPtr must be specified\");\n    b2.count = { value: 1 };\n    return Object.create(a2, { a: { value: b2 } });\n  }\n  function U(a2, b2, d2, e2, f2, l2, h2, k2, m2, p2, g2) {\n    this.name = a2;\n    this.b = b2;\n    this.G = d2;\n    this.C = e2;\n    this.D = f2;\n    this.Y = l2;\n    this.ba = h2;\n    this.M = k2;\n    this.$ = m2;\n    this.aa = p2;\n    this.o = g2;\n    f2 || b2.i !== void 0 ? this.toWireType = jb : (this.toWireType = e2 ? ib : kb, this.l = null);\n  }\n  function sb(a2, b2) {\n    c2.hasOwnProperty(a2) || Xa(\"Replacing nonexistant public symbol\");\n    c2[a2] = b2;\n    c2[a2].A = void 0;\n  }\n  function V(a2, b2) {\n    a2 = K(a2);\n    if (c2[\"FUNCTION_TABLE_\" + a2] !== void 0)\n      var d2 = c2[\"FUNCTION_TABLE_\" + a2][b2];\n    else if (typeof FUNCTION_TABLE !== \"undefined\")\n      d2 = FUNCTION_TABLE[b2];\n    else {\n      d2 = c2.asm[\"dynCall_\" + a2];\n      d2 === void 0 && (d2 = c2.asm[\"dynCall_\" + a2.replace(/f/g, \"d\")], d2 === void 0 && P(\"No dynCall invoker for signature: \" + a2));\n      for (var e2 = [], f2 = 1; f2 < a2.length; ++f2)\n        e2.push(\"a\" + f2);\n      f2 = \"return function \" + (\"dynCall_\" + a2 + \"_\" + b2) + \"(\" + e2.join(\", \") + \") {\\n\";\n      f2 += \"    return dynCall(rawFunction\" + (e2.length ? \", \" : \"\") + e2.join(\", \") + \");\\n\";\n      d2 = new Function(\"dynCall\", \"rawFunction\", f2 + \"};\\n\")(d2, b2);\n    }\n    typeof d2 !== \"function\" && P(\"unknown function pointer with signature \" + a2 + \": \" + b2);\n    return d2;\n  }\n  var tb = void 0;\n  function ub(a2) {\n    a2 = wb(a2);\n    var b2 = K(a2);\n    X(a2);\n    return b2;\n  }\n  function xb(a2, b2) {\n    function d2(a3) {\n      f2[a3] || M2[a3] || (Sa[a3] ? Sa[a3].forEach(d2) : (e2.push(a3), f2[a3] = true));\n    }\n    var e2 = [], f2 = {};\n    b2.forEach(d2);\n    throw new tb(a2 + \": \" + e2.map(ub).join([\", \"]));\n  }\n  function yb(a2, b2) {\n    for (var d2 = [], e2 = 0; e2 < a2; e2++)\n      d2.push(A[(b2 >> 2) + e2]);\n    return d2;\n  }\n  function zb(a2) {\n    for (; a2.length; ) {\n      var b2 = a2.pop();\n      a2.pop()(b2);\n    }\n  }\n  function Ab(a2) {\n    var b2 = Function;\n    if (!(b2 instanceof Function))\n      throw new TypeError(\"new_ called with constructor type \" + typeof b2 + \" which is not a function\");\n    var d2 = Ua(b2.name || \"unknownFunctionName\", function() {\n    });\n    d2.prototype = b2.prototype;\n    d2 = new d2();\n    a2 = b2.apply(d2, a2);\n    return a2 instanceof Object ? a2 : d2;\n  }\n  var Bb = [], Y = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n  function Cb(a2) {\n    4 < a2 && --Y[a2].H === 0 && (Y[a2] = void 0, Bb.push(a2));\n  }\n  function T(a2) {\n    switch (a2) {\n      case void 0:\n        return 1;\n      case null:\n        return 2;\n      case true:\n        return 3;\n      case false:\n        return 4;\n      default:\n        var b2 = Bb.length ? Bb.pop() : Y.length;\n        Y[b2] = { H: 1, value: a2 };\n        return b2;\n    }\n  }\n  function S2(a2) {\n    if (a2 === null)\n      return \"null\";\n    var b2 = typeof a2;\n    return b2 === \"object\" || b2 === \"array\" || b2 === \"function\" ? a2.toString() : \"\" + a2;\n  }\n  function Db(a2, b2) {\n    switch (b2) {\n      case 2:\n        return function(a3) {\n          return this.fromWireType(pa[a3 >> 2]);\n        };\n      case 3:\n        return function(a3) {\n          return this.fromWireType(qa[a3 >> 3]);\n        };\n      default:\n        throw new TypeError(\"Unknown float type: \" + a2);\n    }\n  }\n  function Eb(a2, b2, d2) {\n    switch (b2) {\n      case 0:\n        return d2 ? function(a3) {\n          return ma[a3];\n        } : function(a3) {\n          return z[a3];\n        };\n      case 1:\n        return d2 ? function(a3) {\n          return na[a3 >> 1];\n        } : function(a3) {\n          return oa[a3 >> 1];\n        };\n      case 2:\n        return d2 ? function(a3) {\n          return A[a3 >> 2];\n        } : function(a3) {\n          return B[a3 >> 2];\n        };\n      default:\n        throw new TypeError(\"Unknown integer type: \" + a2);\n    }\n  }\n  function Z(a2) {\n    a2 || P(\"Cannot use deleted val. handle = \" + a2);\n    return Y[a2].value;\n  }\n  function Fb(a2, b2) {\n    var d2 = M2[a2];\n    d2 === void 0 && P(b2 + \" has unknown type \" + ub(a2));\n    return d2;\n  }\n  for (var Gb = {}, Hb = Array(256), Ib = 0; 256 > Ib; ++Ib)\n    Hb[Ib] = String.fromCharCode(Ib);\n  Ra = Hb;\n  O = c2.BindingError = Va(\"BindingError\");\n  Wa = c2.InternalError = Va(\"InternalError\");\n  R.prototype.isAliasOf = function(a2) {\n    if (!(this instanceof R && a2 instanceof R))\n      return false;\n    var b2 = this.a.f.b, d2 = this.a.c, e2 = a2.a.f.b;\n    for (a2 = a2.a.c; b2.i; )\n      d2 = b2.w(d2), b2 = b2.i;\n    for (; e2.i; )\n      a2 = e2.w(a2), e2 = e2.i;\n    return b2 === e2 && d2 === a2;\n  };\n  R.prototype.clone = function() {\n    this.a.c || Za(this);\n    if (this.a.v)\n      return this.a.count.value += 1, this;\n    var a2 = this.a;\n    a2 = Object.create(Object.getPrototypeOf(this), {\n      a: {\n        value: {\n          count: a2.count,\n          s: a2.s,\n          v: a2.v,\n          c: a2.c,\n          f: a2.f,\n          g: a2.g,\n          h: a2.h\n        }\n      }\n    });\n    a2.a.count.value += 1;\n    a2.a.s = false;\n    return a2;\n  };\n  R.prototype[\"delete\"] = function() {\n    this.a.c || Za(this);\n    this.a.s && !this.a.v && P(\"Object already scheduled for deletion\");\n    --this.a.count.value;\n    if (this.a.count.value === 0) {\n      var a2 = this.a;\n      a2.g ? a2.h.o(a2.g) : a2.f.b.o(a2.c);\n    }\n    this.a.v || (this.a.g = void 0, this.a.c = void 0);\n  };\n  R.prototype.isDeleted = function() {\n    return !this.a.c;\n  };\n  R.prototype.deleteLater = function() {\n    this.a.c || Za(this);\n    this.a.s && !this.a.v && P(\"Object already scheduled for deletion\");\n    ab.push(this);\n    ab.length === 1 && $a && $a(cb);\n    this.a.s = true;\n    return this;\n  };\n  U.prototype.U = function(a2) {\n    this.M && (a2 = this.M(a2));\n    return a2;\n  };\n  U.prototype.K = function(a2) {\n    this.o && this.o(a2);\n  };\n  U.prototype.argPackAdvance = 8;\n  U.prototype.readValueFromPointer = lb;\n  U.prototype.deleteObject = function(a2) {\n    if (a2 !== null)\n      a2[\"delete\"]();\n  };\n  U.prototype.fromWireType = function(a2) {\n    function b2() {\n      return this.D ? rb(this.b.u, { f: this.Y, c: d2, h: this, g: a2 }) : rb(this.b.u, { f: this, c: a2 });\n    }\n    var d2 = this.U(a2);\n    if (!d2)\n      return this.K(a2), null;\n    var e2 = qb(this.b, d2);\n    if (e2 !== void 0) {\n      if (e2.a.count.value === 0)\n        return e2.a.c = d2, e2.a.g = a2, e2.clone();\n      e2 = e2.clone();\n      this.K(a2);\n      return e2;\n    }\n    e2 = this.b.T(d2);\n    e2 = db[e2];\n    if (!e2)\n      return b2.call(this);\n    e2 = this.C ? e2.R : e2.pointerType;\n    var f2 = ob(d2, this.b, e2.b);\n    return f2 === null ? b2.call(this) : this.D ? rb(e2.b.u, { f: e2, c: f2, h: this, g: a2 }) : rb(e2.b.u, { f: e2, c: f2 });\n  };\n  c2.getInheritedInstanceCount = function() {\n    return Object.keys(pb).length;\n  };\n  c2.getLiveInheritedInstances = function() {\n    var a2 = [], b2;\n    for (b2 in pb)\n      pb.hasOwnProperty(b2) && a2.push(pb[b2]);\n    return a2;\n  };\n  c2.flushPendingDeletes = cb;\n  c2.setDelayFunction = function(a2) {\n    $a = a2;\n    ab.length && $a && $a(cb);\n  };\n  tb = c2.UnboundTypeError = Va(\"UnboundTypeError\");\n  c2.count_emval_handles = function() {\n    for (var a2 = 0, b2 = 5; b2 < Y.length; ++b2)\n      Y[b2] !== void 0 && ++a2;\n    return a2;\n  };\n  c2.get_first_emval = function() {\n    for (var a2 = 5; a2 < Y.length; ++a2)\n      if (Y[a2] !== void 0)\n        return Y[a2];\n    return null;\n  };\n  var Jb = C;\n  C = C + 4 + 15 & -16;\n  xa = Jb;\n  ta = ua = ia(C);\n  va = ta + za;\n  wa = ia(va);\n  A[xa >> 2] = wa;\n  c2.wasmTableSize = 83;\n  c2.wasmMaxTableSize = 83;\n  c2.N = {};\n  c2.O = {\n    abort: y2,\n    enlargeMemory: function() {\n      ya();\n    },\n    getTotalMemory: function() {\n      return E;\n    },\n    abortOnCannotGrowMemory: ya,\n    ___setErrNo: function(a2) {\n      c2.___errno_location && (A[c2.___errno_location() >> 2] = a2);\n      return a2;\n    },\n    ___syscall140: function(a2, b2) {\n      H2 = b2;\n      try {\n        var d2 = Pa.V();\n        I();\n        var e2 = I(), f2 = I(), l2 = I();\n        FS.ea(d2, e2, l2);\n        A[f2 >> 2] = d2.position;\n        d2.W && e2 === 0 && l2 === 0 && (d2.W = null);\n        return 0;\n      } catch (h2) {\n        return typeof FS !== \"undefined\" && h2 instanceof FS.I || y2(h2), -h2.L;\n      }\n    },\n    ___syscall146: J,\n    ___syscall54: function(a2, b2) {\n      H2 = b2;\n      return 0;\n    },\n    ___syscall6: function(a2, b2) {\n      H2 = b2;\n      try {\n        var d2 = Pa.V();\n        FS.close(d2);\n        return 0;\n      } catch (e2) {\n        return typeof FS !== \"undefined\" && e2 instanceof FS.I || y2(e2), -e2.L;\n      }\n    },\n    __embind_register_bool: function(a2, b2, d2, e2, f2) {\n      var l2 = Qa(d2);\n      b2 = K(b2);\n      Q(a2, {\n        name: b2,\n        fromWireType: function(a3) {\n          return !!a3;\n        },\n        toWireType: function(a3, b3) {\n          return b3 ? e2 : f2;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: function(a3) {\n          if (d2 === 1)\n            var e3 = ma;\n          else if (d2 === 2)\n            e3 = na;\n          else if (d2 === 4)\n            e3 = A;\n          else\n            throw new TypeError(\"Unknown boolean type size: \" + b2);\n          return this.fromWireType(e3[a3 >> l2]);\n        },\n        l: null\n      });\n    },\n    __embind_register_class: function(a2, b2, d2, e2, f2, l2, h2, k2, m2, p2, g2, q, D) {\n      g2 = K(g2);\n      l2 = V(f2, l2);\n      k2 && (k2 = V(h2, k2));\n      p2 && (p2 = V(m2, p2));\n      D = V(q, D);\n      var t2 = Ta(g2);\n      fb(t2, function() {\n        xb(\"Cannot construct \" + g2 + \" due to unbound types\", [e2]);\n      });\n      Ya([a2, b2, d2], e2 ? [e2] : [], function(b3) {\n        b3 = b3[0];\n        if (e2) {\n          var d3 = b3.b;\n          var f3 = d3.u;\n        } else\n          f3 = R.prototype;\n        b3 = Ua(t2, function() {\n          if (Object.getPrototypeOf(this) !== h3)\n            throw new O(\"Use 'new' to construct \" + g2);\n          if (m3.m === void 0)\n            throw new O(g2 + \" has no accessible constructor\");\n          var a3 = m3.m[arguments.length];\n          if (a3 === void 0)\n            throw new O(\"Tried to invoke ctor of \" + g2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(m3.m).toString() + \") parameters instead!\");\n          return a3.apply(this, arguments);\n        });\n        var h3 = Object.create(f3, { constructor: { value: b3 } });\n        b3.prototype = h3;\n        var m3 = new gb(g2, b3, h3, D, d3, l2, k2, p2);\n        d3 = new U(g2, m3, true, false, false);\n        f3 = new U(g2 + \"*\", m3, false, false, false);\n        var q2 = new U(g2 + \" const*\", m3, false, true, false);\n        db[a2] = { pointerType: f3, R: q2 };\n        sb(t2, b3);\n        return [d3, f3, q2];\n      });\n    },\n    __embind_register_class_constructor: function(a2, b2, d2, e2, f2, l2) {\n      var h2 = yb(b2, d2);\n      f2 = V(e2, f2);\n      Ya([], [a2], function(a3) {\n        a3 = a3[0];\n        var d3 = \"constructor \" + a3.name;\n        a3.b.m === void 0 && (a3.b.m = []);\n        if (a3.b.m[b2 - 1] !== void 0)\n          throw new O(\"Cannot register multiple constructors with identical number of parameters (\" + (b2 - 1) + \") for class '\" + a3.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n        a3.b.m[b2 - 1] = function() {\n          xb(\"Cannot construct \" + a3.name + \" due to unbound types\", h2);\n        };\n        Ya([], h2, function(e3) {\n          a3.b.m[b2 - 1] = function() {\n            arguments.length !== b2 - 1 && P(d3 + \" called with \" + arguments.length + \" arguments, expected \" + (b2 - 1));\n            var a4 = [], h3 = Array(b2);\n            h3[0] = l2;\n            for (var k2 = 1; k2 < b2; ++k2)\n              h3[k2] = e3[k2].toWireType(a4, arguments[k2 - 1]);\n            h3 = f2.apply(null, h3);\n            zb(a4);\n            return e3[0].fromWireType(h3);\n          };\n          return [];\n        });\n        return [];\n      });\n    },\n    __embind_register_class_function: function(a2, b2, d2, e2, f2, l2, h2, k2) {\n      var m2 = yb(d2, e2);\n      b2 = K(b2);\n      l2 = V(f2, l2);\n      Ya([], [a2], function(a3) {\n        function e3() {\n          xb(\"Cannot call \" + f3 + \" due to unbound types\", m2);\n        }\n        a3 = a3[0];\n        var f3 = a3.name + \".\" + b2;\n        k2 && a3.b.Z.push(b2);\n        var p2 = a3.b.u, t2 = p2[b2];\n        t2 === void 0 || t2.j === void 0 && t2.className !== a3.name && t2.A === d2 - 2 ? (e3.A = d2 - 2, e3.className = a3.name, p2[b2] = e3) : (eb(p2, b2, f3), p2[b2].j[d2 - 2] = e3);\n        Ya([], m2, function(e4) {\n          var k3 = f3, g2 = a3, m3 = l2, q = e4.length;\n          2 > q && P(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          var t3 = e4[1] !== null && g2 !== null, D = false;\n          for (g2 = 1; g2 < e4.length; ++g2)\n            if (e4[g2] !== null && e4[g2].l === void 0) {\n              D = true;\n              break;\n            }\n          var mb = e4[0].name !== \"void\", N2 = \"\", W = \"\";\n          for (g2 = 0; g2 < q - 2; ++g2)\n            N2 += (g2 !== 0 ? \", \" : \"\") + \"arg\" + g2, W += (g2 !== 0 ? \", \" : \"\") + \"arg\" + g2 + \"Wired\";\n          k3 = \"return function \" + Ta(k3) + \"(\" + N2 + \") {\\nif (arguments.length !== \" + (q - 2) + \") {\\nthrowBindingError('function \" + k3 + \" called with ' + arguments.length + ' arguments, expected \" + (q - 2) + \" args!');\\n}\\n\";\n          D && (k3 += \"var destructors = [];\\n\");\n          var nb = D ? \"destructors\" : \"null\";\n          N2 = \"throwBindingError invoker fn runDestructors retType classParam\".split(\" \");\n          m3 = [P, m3, h2, zb, e4[0], e4[1]];\n          t3 && (k3 += \"var thisWired = classParam.toWireType(\" + nb + \", this);\\n\");\n          for (g2 = 0; g2 < q - 2; ++g2)\n            k3 += \"var arg\" + g2 + \"Wired = argType\" + g2 + \".toWireType(\" + nb + \", arg\" + g2 + \"); // \" + e4[g2 + 2].name + \"\\n\", N2.push(\"argType\" + g2), m3.push(e4[g2 + 2]);\n          t3 && (W = \"thisWired\" + (0 < W.length ? \", \" : \"\") + W);\n          k3 += (mb ? \"var rv = \" : \"\") + \"invoker(fn\" + (0 < W.length ? \", \" : \"\") + W + \");\\n\";\n          if (D)\n            k3 += \"runDestructors(destructors);\\n\";\n          else\n            for (g2 = t3 ? 1 : 2; g2 < e4.length; ++g2)\n              q = g2 === 1 ? \"thisWired\" : \"arg\" + (g2 - 2) + \"Wired\", e4[g2].l !== null && (k3 += q + \"_dtor(\" + q + \"); // \" + e4[g2].name + \"\\n\", N2.push(q + \"_dtor\"), m3.push(e4[g2].l));\n          mb && (k3 += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\");\n          N2.push(k3 + \"}\\n\");\n          e4 = Ab(N2).apply(null, m3);\n          p2[b2].j === void 0 ? (e4.A = d2 - 2, p2[b2] = e4) : p2[b2].j[d2 - 2] = e4;\n          return [];\n        });\n        return [];\n      });\n    },\n    __embind_register_emval: function(a2, b2) {\n      b2 = K(b2);\n      Q(a2, {\n        name: b2,\n        fromWireType: function(a3) {\n          var b3 = Y[a3].value;\n          Cb(a3);\n          return b3;\n        },\n        toWireType: function(a3, b3) {\n          return T(b3);\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: lb,\n        l: null\n      });\n    },\n    __embind_register_float: function(a2, b2, d2) {\n      d2 = Qa(d2);\n      b2 = K(b2);\n      Q(a2, {\n        name: b2,\n        fromWireType: function(a3) {\n          return a3;\n        },\n        toWireType: function(a3, b3) {\n          if (typeof b3 !== \"number\" && typeof b3 !== \"boolean\")\n            throw new TypeError('Cannot convert \"' + S2(b3) + '\" to ' + this.name);\n          return b3;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: Db(b2, d2),\n        l: null\n      });\n    },\n    __embind_register_integer: function(a2, b2, d2, e2, f2) {\n      function l2(a3) {\n        return a3;\n      }\n      b2 = K(b2);\n      f2 === -1 && (f2 = 4294967295);\n      var h2 = Qa(d2);\n      if (e2 === 0) {\n        var k2 = 32 - 8 * d2;\n        l2 = function(a3) {\n          return a3 << k2 >>> k2;\n        };\n      }\n      var m2 = b2.indexOf(\"unsigned\") != -1;\n      Q(a2, {\n        name: b2,\n        fromWireType: l2,\n        toWireType: function(a3, d3) {\n          if (typeof d3 !== \"number\" && typeof d3 !== \"boolean\")\n            throw new TypeError('Cannot convert \"' + S2(d3) + '\" to ' + this.name);\n          if (d3 < e2 || d3 > f2)\n            throw new TypeError('Passing a number \"' + S2(d3) + '\" from JS side to C/C++ side to an argument of type \"' + b2 + '\", which is outside the valid range [' + e2 + \", \" + f2 + \"]!\");\n          return m2 ? d3 >>> 0 : d3 | 0;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: Eb(b2, h2, e2 !== 0),\n        l: null\n      });\n    },\n    __embind_register_memory_view: function(a2, b2, d2) {\n      function e2(a3) {\n        a3 >>= 2;\n        var b3 = B;\n        return new f2(b3.buffer, b3[a3 + 1], b3[a3]);\n      }\n      var f2 = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array\n      ][b2];\n      d2 = K(d2);\n      Q(a2, {\n        name: d2,\n        fromWireType: e2,\n        argPackAdvance: 8,\n        readValueFromPointer: e2\n      }, { X: true });\n    },\n    __embind_register_std_string: function(a2, b2) {\n      b2 = K(b2);\n      Q(a2, {\n        name: b2,\n        fromWireType: function(a3) {\n          for (var b3 = B[a3 >> 2], d2 = Array(b3), l2 = 0; l2 < b3; ++l2)\n            d2[l2] = String.fromCharCode(z[a3 + 4 + l2]);\n          X(a3);\n          return d2.join(\"\");\n        },\n        toWireType: function(a3, b3) {\n          function d2(a4, b4) {\n            return a4[b4];\n          }\n          function e2(a4, b4) {\n            return a4.charCodeAt(b4);\n          }\n          b3 instanceof ArrayBuffer && (b3 = new Uint8Array(b3));\n          var h2;\n          b3 instanceof Uint8Array ? h2 = d2 : b3 instanceof Uint8ClampedArray ? h2 = d2 : b3 instanceof Int8Array ? h2 = d2 : typeof b3 === \"string\" ? h2 = e2 : P(\"Cannot pass non-string to std::string\");\n          var k2 = b3.length, m2 = Kb(4 + k2);\n          B[m2 >> 2] = k2;\n          for (var p2 = 0; p2 < k2; ++p2) {\n            var g2 = h2(b3, p2);\n            255 < g2 && (X(m2), P(\"String has UTF-16 code units that do not fit in 8 bits\"));\n            z[m2 + 4 + p2] = g2;\n          }\n          a3 !== null && a3.push(X, m2);\n          return m2;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: lb,\n        l: function(a3) {\n          X(a3);\n        }\n      });\n    },\n    __embind_register_std_wstring: function(a2, b2, d2) {\n      d2 = K(d2);\n      if (b2 === 2) {\n        var e2 = function() {\n          return oa;\n        };\n        var f2 = 1;\n      } else\n        b2 === 4 && (e2 = function() {\n          return B;\n        }, f2 = 2);\n      Q(a2, {\n        name: d2,\n        fromWireType: function(a3) {\n          for (var b3 = e2(), d3 = B[a3 >> 2], l2 = Array(d3), p2 = a3 + 4 >> f2, g2 = 0; g2 < d3; ++g2)\n            l2[g2] = String.fromCharCode(b3[p2 + g2]);\n          X(a3);\n          return l2.join(\"\");\n        },\n        toWireType: function(a3, d3) {\n          var k2 = e2(), h2 = d3.length, l2 = Kb(4 + h2 * b2);\n          B[l2 >> 2] = h2;\n          for (var g2 = l2 + 4 >> f2, q = 0; q < h2; ++q)\n            k2[g2 + q] = d3.charCodeAt(q);\n          a3 !== null && a3.push(X, l2);\n          return l2;\n        },\n        argPackAdvance: 8,\n        readValueFromPointer: lb,\n        l: function(a3) {\n          X(a3);\n        }\n      });\n    },\n    __embind_register_void: function(a2, b2) {\n      b2 = K(b2);\n      Q(a2, {\n        da: true,\n        name: b2,\n        argPackAdvance: 0,\n        fromWireType: function() {\n        },\n        toWireType: function() {\n        }\n      });\n    },\n    __emval_as: function(a2, b2, d2) {\n      a2 = Z(a2);\n      b2 = Fb(b2, \"emval::as\");\n      var e2 = [], f2 = T(e2);\n      A[d2 >> 2] = f2;\n      return b2.toWireType(e2, a2);\n    },\n    __emval_decref: Cb,\n    __emval_get_property: function(a2, b2) {\n      a2 = Z(a2);\n      b2 = Z(b2);\n      return T(a2[b2]);\n    },\n    __emval_incref: function(a2) {\n      4 < a2 && (Y[a2].H += 1);\n    },\n    __emval_new_array: function() {\n      return T([]);\n    },\n    __emval_new_cstring: function(a2) {\n      var b2 = Gb[a2];\n      return T(b2 === void 0 ? K(a2) : b2);\n    },\n    __emval_new_object: function() {\n      return T({});\n    },\n    __emval_run_destructors: function(a2) {\n      zb(Y[a2].value);\n      Cb(a2);\n    },\n    __emval_set_property: function(a2, b2, d2) {\n      a2 = Z(a2);\n      b2 = Z(b2);\n      d2 = Z(d2);\n      a2[b2] = d2;\n    },\n    __emval_take_value: function(a2, b2) {\n      a2 = Fb(a2, \"_emval_take_value\");\n      a2 = a2.readValueFromPointer(b2);\n      return T(a2);\n    },\n    _abort: function() {\n      c2.abort();\n    },\n    _emscripten_memcpy_big: function(a2, b2, d2) {\n      z.set(z.subarray(b2, b2 + d2), a2);\n      return a2;\n    },\n    _llvm_cos_f32: Ha,\n    _llvm_log10_f32: function(a2) {\n      return Math.log(a2) / Math.LN10;\n    },\n    _llvm_sin_f32: Ia,\n    DYNAMICTOP_PTR: xa,\n    STACKTOP: ua\n  };\n  var Lb = c2.asm(c2.N, c2.O, buffer);\n  c2.asm = Lb;\n  var Oa = c2.__GLOBAL__sub_I_bind_cpp = function() {\n    return c2.asm.__GLOBAL__sub_I_bind_cpp.apply(null, arguments);\n  }, La = c2.__GLOBAL__sub_I_fft_cc = function() {\n    return c2.asm.__GLOBAL__sub_I_fft_cc.apply(null, arguments);\n  }, Na = c2.__GLOBAL__sub_I_pitch_cc = function() {\n    return c2.asm.__GLOBAL__sub_I_pitch_cc.apply(null, arguments);\n  }, Ma = c2.__GLOBAL__sub_I_tempo_cc = function() {\n    return c2.asm.__GLOBAL__sub_I_tempo_cc.apply(null, arguments);\n  }, wb = c2.___getTypeName = function() {\n    return c2.asm.___getTypeName.apply(null, arguments);\n  }, X = c2._free = function() {\n    return c2.asm._free.apply(null, arguments);\n  }, Kb = c2._malloc = function() {\n    return c2.asm._malloc.apply(null, arguments);\n  };\n  c2.dynCall_ffii = function() {\n    return c2.asm.dynCall_ffii.apply(null, arguments);\n  };\n  c2.dynCall_fi = function() {\n    return c2.asm.dynCall_fi.apply(null, arguments);\n  };\n  c2.dynCall_fii = function() {\n    return c2.asm.dynCall_fii.apply(null, arguments);\n  };\n  c2.dynCall_fiii = function() {\n    return c2.asm.dynCall_fiii.apply(null, arguments);\n  };\n  c2.dynCall_ii = function() {\n    return c2.asm.dynCall_ii.apply(null, arguments);\n  };\n  c2.dynCall_iii = function() {\n    return c2.asm.dynCall_iii.apply(null, arguments);\n  };\n  c2.dynCall_iiii = function() {\n    return c2.asm.dynCall_iiii.apply(null, arguments);\n  };\n  c2.dynCall_iiiii = function() {\n    return c2.asm.dynCall_iiiii.apply(null, arguments);\n  };\n  c2.dynCall_iiiiii = function() {\n    return c2.asm.dynCall_iiiiii.apply(null, arguments);\n  };\n  c2.dynCall_v = function() {\n    return c2.asm.dynCall_v.apply(null, arguments);\n  };\n  c2.dynCall_vi = function() {\n    return c2.asm.dynCall_vi.apply(null, arguments);\n  };\n  c2.dynCall_viii = function() {\n    return c2.asm.dynCall_viii.apply(null, arguments);\n  };\n  c2.asm = Lb;\n  c2.then = function(a2) {\n    if (c2.calledRun)\n      a2(c2);\n    else {\n      var b2 = c2.onRuntimeInitialized;\n      c2.onRuntimeInitialized = function() {\n        b2 && b2();\n        a2(c2);\n      };\n    }\n    return c2;\n  };\n  G = function Mb() {\n    c2.calledRun || Nb();\n    c2.calledRun || (G = Mb);\n  };\n  function Nb() {\n    function a2() {\n      if (!c2.calledRun && (c2.calledRun = true, !ka)) {\n        Fa || (Fa = true, Aa(Ca));\n        Aa(Da);\n        if (c2.onRuntimeInitialized)\n          c2.onRuntimeInitialized();\n        if (c2.postRun)\n          for (typeof c2.postRun == \"function\" && (c2.postRun = [c2.postRun]); c2.postRun.length; ) {\n            var a3 = c2.postRun.shift();\n            Ea.unshift(a3);\n          }\n        Aa(Ea);\n      }\n    }\n    if (!(0 < F)) {\n      if (c2.preRun)\n        for (typeof c2.preRun == \"function\" && (c2.preRun = [c2.preRun]); c2.preRun.length; )\n          Ga();\n      Aa(Ba);\n      0 < F || c2.calledRun || (c2.setStatus ? (c2.setStatus(\"Running...\"), setTimeout(function() {\n        setTimeout(function() {\n          c2.setStatus(\"\");\n        }, 1);\n        a2();\n      }, 1)) : a2());\n    }\n  }\n  c2.run = Nb;\n  function y2(a2) {\n    if (c2.onAbort)\n      c2.onAbort(a2);\n    a2 !== void 0 ? (ha(a2), x2(a2), a2 = JSON.stringify(a2)) : a2 = \"\";\n    ka = true;\n    throw \"abort(\" + a2 + \"). Build with -s ASSERTIONS=1 for more info.\";\n  }\n  c2.abort = y2;\n  if (c2.preInit)\n    for (typeof c2.preInit == \"function\" && (c2.preInit = [c2.preInit]); 0 < c2.preInit.length; )\n      c2.preInit.pop()();\n  c2.noExitRuntime = true;\n  Nb();\n  return Aubio2;\n};\nvar Aubio$1 = Aubio.bind({\n  _currentScript: {\n    src: \"/aubio.js\"\n  }\n});\nvar _a;\nconst isClient = typeof window !== \"undefined\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst timestamp$1 = () => +Date.now();\nconst clamp = (n2, min, max) => Math.min(max, Math.max(min, n2));\nconst noop = () => {\n};\nisClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);\nfunction resolveUnref(r2) {\n  return typeof r2 === \"function\" ? r2() : unref(r2);\n}\nfunction createFilterWrapper(filter2, fn) {\n  function wrapper(...args) {\n    filter2(() => fn.apply(this, args), { fn, thisArg: this, args });\n  }\n  return wrapper;\n}\nconst bypassFilter = (invoke) => {\n  return invoke();\n};\nfunction pausableFilter(extendFilter = bypassFilter) {\n  const isActive = ref(true);\n  function pause() {\n    isActive.value = false;\n  }\n  function resume() {\n    isActive.value = true;\n  }\n  const eventFilter = (...args) => {\n    if (isActive.value)\n      extendFilter(...args);\n  };\n  return { isActive, pause, resume, eventFilter };\n}\nfunction identity(arg) {\n  return arg;\n}\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction tryOnScopeDispose(fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\nfunction tryOnMounted(fn, sync = true) {\n  if (getCurrentInstance())\n    onMounted(fn);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\nfunction useIntervalFn(cb, interval2 = 1e3, options2 = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options2;\n  let timer2 = null;\n  const isActive = ref(false);\n  function clean() {\n    if (timer2) {\n      clearInterval(timer2);\n      timer2 = null;\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    clean();\n  }\n  function resume() {\n    if (unref(interval2) <= 0)\n      return;\n    isActive.value = true;\n    if (immediateCallback)\n      cb();\n    clean();\n    timer2 = setInterval(cb, resolveUnref(interval2));\n  }\n  if (immediate && isClient)\n    resume();\n  if (isRef(interval2)) {\n    const stopWatch = watch(interval2, () => {\n      if (isActive.value && isClient)\n        resume();\n    });\n    tryOnScopeDispose(stopWatch);\n  }\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\nfunction useLastChanged(source, options2 = {}) {\n  var _a2;\n  const ms = ref((_a2 = options2.initialValue) != null ? _a2 : null);\n  watch(source, () => ms.value = timestamp$1(), options2);\n  return ms;\n}\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\nvar __objRest$5 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$6.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$6.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchWithFilter(source, cb, options2 = {}) {\n  const _a2 = options2, {\n    eventFilter = bypassFilter\n  } = _a2, watchOptions = __objRest$5(_a2, [\n    \"eventFilter\"\n  ]);\n  return watch(source, createFilterWrapper(eventFilter, cb), watchOptions);\n}\nvar __defProp$2 = Object.defineProperty;\nvar __defProps$2 = Object.defineProperties;\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$2 = (a2, b2) => {\n  for (var prop in b2 || (b2 = {}))\n    if (__hasOwnProp$2.call(b2, prop))\n      __defNormalProp$2(a2, prop, b2[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b2)) {\n      if (__propIsEnum$2.call(b2, prop))\n        __defNormalProp$2(a2, prop, b2[prop]);\n    }\n  return a2;\n};\nvar __spreadProps$2 = (a2, b2) => __defProps$2(a2, __getOwnPropDescs$2(b2));\nvar __objRest$1 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchPausable(source, cb, options2 = {}) {\n  const _a2 = options2, {\n    eventFilter: filter2\n  } = _a2, watchOptions = __objRest$1(_a2, [\n    \"eventFilter\"\n  ]);\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter2);\n  const stop = watchWithFilter(source, cb, __spreadProps$2(__spreadValues$2({}, watchOptions), {\n    eventFilter\n  }));\n  return { stop, pause, resume, isActive };\n}\nfunction unrefElement(elRef) {\n  var _a2;\n  const plain = resolveUnref(elRef);\n  return (_a2 = plain == null ? void 0 : plain.$el) != null ? _a2 : plain;\n}\nconst defaultWindow = isClient ? window : void 0;\nconst defaultNavigator = isClient ? window.navigator : void 0;\nfunction useEventListener(...args) {\n  let target;\n  let event;\n  let listener;\n  let options2;\n  if (isString(args[0])) {\n    [event, listener, options2] = args;\n    target = defaultWindow;\n  } else {\n    [target, event, listener, options2] = args;\n  }\n  if (!target)\n    return noop;\n  let cleanup = noop;\n  const stopWatch = watch(() => unrefElement(target), (el) => {\n    cleanup();\n    if (!el)\n      return;\n    el.addEventListener(event, listener, options2);\n    cleanup = () => {\n      el.removeEventListener(event, listener, options2);\n      cleanup = noop;\n    };\n  }, { immediate: true, flush: \"post\" });\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(stop);\n  return stop;\n}\nvar __defProp$l = Object.defineProperty;\nvar __defProps$8 = Object.defineProperties;\nvar __getOwnPropDescs$8 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$n = Object.getOwnPropertySymbols;\nvar __hasOwnProp$n = Object.prototype.hasOwnProperty;\nvar __propIsEnum$n = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$l = (obj, key, value) => key in obj ? __defProp$l(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$l = (a2, b2) => {\n  for (var prop in b2 || (b2 = {}))\n    if (__hasOwnProp$n.call(b2, prop))\n      __defNormalProp$l(a2, prop, b2[prop]);\n  if (__getOwnPropSymbols$n)\n    for (var prop of __getOwnPropSymbols$n(b2)) {\n      if (__propIsEnum$n.call(b2, prop))\n        __defNormalProp$l(a2, prop, b2[prop]);\n    }\n  return a2;\n};\nvar __spreadProps$8 = (a2, b2) => __defProps$8(a2, __getOwnPropDescs$8(b2));\nconst createKeyPredicate = (keyFilter) => {\n  if (typeof keyFilter === \"function\")\n    return keyFilter;\n  else if (typeof keyFilter === \"string\")\n    return (event) => event.key === keyFilter;\n  else if (Array.isArray(keyFilter))\n    return (event) => keyFilter.includes(event.key);\n  else if (keyFilter)\n    return () => true;\n  else\n    return () => false;\n};\nfunction onKeyStroke(key, handler, options2 = {}) {\n  const { target = defaultWindow, eventName = \"keydown\", passive = false } = options2;\n  const predicate = createKeyPredicate(key);\n  const listener = (e2) => {\n    if (predicate(e2))\n      handler(e2);\n  };\n  return useEventListener(target, eventName, listener, passive);\n}\nfunction onKeyDown(key, handler, options2 = {}) {\n  return onKeyStroke(key, handler, __spreadProps$8(__spreadValues$l({}, options2), { eventName: \"keydown\" }));\n}\nfunction useSupported(callback, sync = false) {\n  const isSupported = ref();\n  const update = () => isSupported.value = Boolean(callback());\n  update();\n  tryOnMounted(update, sync);\n  return isSupported;\n}\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__vueuse_ssr_handlers__\";\n_global[globalKey] = _global[globalKey] || {};\nconst handlers = _global[globalKey];\nfunction getSSRHandler(key, fallback) {\n  return handlers[key] || fallback;\n}\nfunction guessSerializerType(rawInit) {\n  return rawInit == null ? \"any\" : rawInit instanceof Set ? \"set\" : rawInit instanceof Map ? \"map\" : rawInit instanceof Date ? \"date\" : typeof rawInit === \"boolean\" ? \"boolean\" : typeof rawInit === \"string\" ? \"string\" : typeof rawInit === \"object\" ? \"object\" : Array.isArray(rawInit) ? \"object\" : !Number.isNaN(rawInit) ? \"number\" : \"any\";\n}\nvar __defProp$j = Object.defineProperty;\nvar __getOwnPropSymbols$l = Object.getOwnPropertySymbols;\nvar __hasOwnProp$l = Object.prototype.hasOwnProperty;\nvar __propIsEnum$l = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$j = (obj, key, value) => key in obj ? __defProp$j(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$j = (a2, b2) => {\n  for (var prop in b2 || (b2 = {}))\n    if (__hasOwnProp$l.call(b2, prop))\n      __defNormalProp$j(a2, prop, b2[prop]);\n  if (__getOwnPropSymbols$l)\n    for (var prop of __getOwnPropSymbols$l(b2)) {\n      if (__propIsEnum$l.call(b2, prop))\n        __defNormalProp$j(a2, prop, b2[prop]);\n    }\n  return a2;\n};\nconst StorageSerializers = {\n  boolean: {\n    read: (v2) => v2 === \"true\",\n    write: (v2) => String(v2)\n  },\n  object: {\n    read: (v2) => JSON.parse(v2),\n    write: (v2) => JSON.stringify(v2)\n  },\n  number: {\n    read: (v2) => Number.parseFloat(v2),\n    write: (v2) => String(v2)\n  },\n  any: {\n    read: (v2) => v2,\n    write: (v2) => String(v2)\n  },\n  string: {\n    read: (v2) => v2,\n    write: (v2) => String(v2)\n  },\n  map: {\n    read: (v2) => new Map(JSON.parse(v2)),\n    write: (v2) => JSON.stringify(Array.from(v2.entries()))\n  },\n  set: {\n    read: (v2) => new Set(JSON.parse(v2)),\n    write: (v2) => JSON.stringify(Array.from(v2))\n  },\n  date: {\n    read: (v2) => new Date(v2),\n    write: (v2) => v2.toISOString()\n  }\n};\nfunction useStorage(key, defaults, storage, options2 = {}) {\n  var _a2;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window: window2 = defaultWindow,\n    eventFilter,\n    onError = (e2) => {\n      console.error(e2);\n    }\n  } = options2;\n  const data = (shallow ? shallowRef : ref)(defaults);\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a22;\n        return (_a22 = defaultWindow) == null ? void 0 : _a22.localStorage;\n      })();\n    } catch (e2) {\n      onError(e2);\n    }\n  }\n  if (!storage)\n    return data;\n  const rawInit = resolveUnref(defaults);\n  const type = guessSerializerType(rawInit);\n  const serializer = (_a2 = options2.serializer) != null ? _a2 : StorageSerializers[type];\n  const { pause: pauseWatch, resume: resumeWatch } = watchPausable(data, () => write(data.value), { flush, deep, eventFilter });\n  if (window2 && listenToStorageChanges)\n    useEventListener(window2, \"storage\", update);\n  update();\n  return data;\n  function write(v2) {\n    try {\n      if (v2 == null)\n        storage.removeItem(key);\n      else\n        storage.setItem(key, serializer.write(v2));\n    } catch (e2) {\n      onError(e2);\n    }\n  }\n  function read2(event) {\n    if (event && event.key !== key)\n      return;\n    pauseWatch();\n    try {\n      const rawValue = event ? event.newValue : storage.getItem(key);\n      if (rawValue == null) {\n        if (writeDefaults && rawInit !== null)\n          storage.setItem(key, serializer.write(rawInit));\n        return rawInit;\n      } else if (!event && mergeDefaults) {\n        const value = serializer.read(rawValue);\n        if (isFunction(mergeDefaults))\n          return mergeDefaults(value, rawInit);\n        else if (type === \"object\" && !Array.isArray(value))\n          return __spreadValues$j(__spreadValues$j({}, rawInit), value);\n        return value;\n      } else if (typeof rawValue !== \"string\") {\n        return rawValue;\n      } else {\n        return serializer.read(rawValue);\n      }\n    } catch (e2) {\n      onError(e2);\n    } finally {\n      resumeWatch();\n    }\n  }\n  function update(event) {\n    if (event && event.key !== key)\n      return;\n    data.value = read2(event);\n  }\n}\nfunction useCycleList(list, options2) {\n  var _a2;\n  const state = shallowRef((_a2 = options2 == null ? void 0 : options2.initialValue) != null ? _a2 : list[0]);\n  const index2 = computed({\n    get() {\n      var _a22;\n      let index22 = (options2 == null ? void 0 : options2.getIndexOf) ? options2.getIndexOf(state.value, list) : list.indexOf(state.value);\n      if (index22 < 0)\n        index22 = (_a22 = options2 == null ? void 0 : options2.fallbackIndex) != null ? _a22 : 0;\n      return index22;\n    },\n    set(v2) {\n      set(v2);\n    }\n  });\n  function set(i2) {\n    const length = list.length;\n    const index22 = (i2 % length + length) % length;\n    const value = list[index22];\n    state.value = value;\n    return value;\n  }\n  function shift(delta = 1) {\n    return set(index2.value + delta);\n  }\n  function next(n2 = 1) {\n    return shift(n2);\n  }\n  function prev(n2 = 1) {\n    return shift(-n2);\n  }\n  return {\n    state,\n    index: index2,\n    next,\n    prev\n  };\n}\nfunction usePermission(permissionDesc, options2 = {}) {\n  const {\n    controls = false,\n    navigator: navigator2 = defaultNavigator\n  } = options2;\n  const isSupported = useSupported(() => navigator2 && \"permissions\" in navigator2);\n  let permissionStatus;\n  const desc = typeof permissionDesc === \"string\" ? { name: permissionDesc } : permissionDesc;\n  const state = ref();\n  const onChange = () => {\n    if (permissionStatus)\n      state.value = permissionStatus.state;\n  };\n  const query = createSingletonPromise(async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionStatus) {\n      try {\n        permissionStatus = await navigator2.permissions.query(desc);\n        useEventListener(permissionStatus, \"change\", onChange);\n        onChange();\n      } catch (e2) {\n        state.value = \"prompt\";\n      }\n    }\n    return permissionStatus;\n  });\n  query();\n  if (controls) {\n    return {\n      state,\n      isSupported,\n      query\n    };\n  } else {\n    return state;\n  }\n}\nfunction useDevicesList(options2 = {}) {\n  const {\n    navigator: navigator2 = defaultNavigator,\n    requestPermissions = false,\n    constraints = { audio: true, video: true },\n    onUpdated\n  } = options2;\n  const devices2 = ref([]);\n  const videoInputs = computed(() => devices2.value.filter((i2) => i2.kind === \"videoinput\"));\n  const audioInputs = computed(() => devices2.value.filter((i2) => i2.kind === \"audioinput\"));\n  const audioOutputs = computed(() => devices2.value.filter((i2) => i2.kind === \"audiooutput\"));\n  const isSupported = useSupported(() => navigator2 && navigator2.mediaDevices && navigator2.mediaDevices.enumerateDevices);\n  const permissionGranted = ref(false);\n  async function update() {\n    if (!isSupported.value)\n      return;\n    devices2.value = await navigator2.mediaDevices.enumerateDevices();\n    onUpdated == null ? void 0 : onUpdated(devices2.value);\n  }\n  async function ensurePermissions() {\n    if (!isSupported.value)\n      return false;\n    if (permissionGranted.value)\n      return true;\n    const { state, query } = usePermission(\"camera\", { controls: true });\n    await query();\n    if (state.value !== \"granted\") {\n      const stream = await navigator2.mediaDevices.getUserMedia(constraints);\n      stream.getTracks().forEach((t2) => t2.stop());\n      update();\n      permissionGranted.value = true;\n    } else {\n      permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  }\n  if (isSupported.value) {\n    if (requestPermissions)\n      ensurePermissions();\n    useEventListener(navigator2.mediaDevices, \"devicechange\", update);\n    update();\n  }\n  return {\n    devices: devices2,\n    ensurePermissions,\n    permissionGranted,\n    videoInputs,\n    audioInputs,\n    audioOutputs,\n    isSupported\n  };\n}\nfunction useRafFn(fn, options2 = {}) {\n  const {\n    immediate = true,\n    window: window2 = defaultWindow\n  } = options2;\n  const isActive = ref(false);\n  let rafId = null;\n  function loop() {\n    if (!isActive.value || !window2)\n      return;\n    fn();\n    rafId = window2.requestAnimationFrame(loop);\n  }\n  function resume() {\n    if (!isActive.value && window2) {\n      isActive.value = true;\n      loop();\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    if (rafId != null && window2) {\n      window2.cancelAnimationFrame(rafId);\n      rafId = null;\n    }\n  }\n  if (immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\nfunction useMouse(options2 = {}) {\n  const {\n    type = \"page\",\n    touch = true,\n    resetOnTouchEnds = false,\n    initialValue = { x: 0, y: 0 },\n    window: window2 = defaultWindow,\n    eventFilter\n  } = options2;\n  const x2 = ref(initialValue.x);\n  const y2 = ref(initialValue.y);\n  const sourceType = ref(null);\n  const mouseHandler = (event) => {\n    if (type === \"page\") {\n      x2.value = event.pageX;\n      y2.value = event.pageY;\n    } else if (type === \"client\") {\n      x2.value = event.clientX;\n      y2.value = event.clientY;\n    }\n    sourceType.value = \"mouse\";\n  };\n  const reset = () => {\n    x2.value = initialValue.x;\n    y2.value = initialValue.y;\n  };\n  const touchHandler = (event) => {\n    if (event.touches.length > 0) {\n      const touch2 = event.touches[0];\n      if (type === \"page\") {\n        x2.value = touch2.pageX;\n        y2.value = touch2.pageY;\n      } else if (type === \"client\") {\n        x2.value = touch2.clientX;\n        y2.value = touch2.clientY;\n      }\n      sourceType.value = \"touch\";\n    }\n  };\n  const mouseHandlerWrapper = (event) => {\n    return eventFilter === void 0 ? mouseHandler(event) : eventFilter(() => mouseHandler(event), {});\n  };\n  const touchHandlerWrapper = (event) => {\n    return eventFilter === void 0 ? touchHandler(event) : eventFilter(() => touchHandler(event), {});\n  };\n  if (window2) {\n    useEventListener(window2, \"mousemove\", mouseHandlerWrapper, { passive: true });\n    useEventListener(window2, \"dragover\", mouseHandlerWrapper, { passive: true });\n    if (touch) {\n      useEventListener(window2, \"touchstart\", touchHandlerWrapper, { passive: true });\n      useEventListener(window2, \"touchmove\", touchHandlerWrapper, { passive: true });\n      if (resetOnTouchEnds)\n        useEventListener(window2, \"touchend\", reset, { passive: true });\n    }\n  }\n  return {\n    x: x2,\n    y: y2,\n    sourceType\n  };\n}\nfunction useMouseInElement(target, options2 = {}) {\n  const {\n    handleOutside = true,\n    window: window2 = defaultWindow\n  } = options2;\n  const { x: x2, y: y2, sourceType } = useMouse(options2);\n  const targetRef = ref(target != null ? target : window2 == null ? void 0 : window2.document.body);\n  const elementX = ref(0);\n  const elementY = ref(0);\n  const elementPositionX = ref(0);\n  const elementPositionY = ref(0);\n  const elementHeight = ref(0);\n  const elementWidth = ref(0);\n  const isOutside = ref(true);\n  let stop = () => {\n  };\n  if (window2) {\n    stop = watch([targetRef, x2, y2], () => {\n      const el = unrefElement(targetRef);\n      if (!el)\n        return;\n      const {\n        left,\n        top,\n        width,\n        height\n      } = el.getBoundingClientRect();\n      elementPositionX.value = left + window2.pageXOffset;\n      elementPositionY.value = top + window2.pageYOffset;\n      elementHeight.value = height;\n      elementWidth.value = width;\n      const elX = x2.value - elementPositionX.value;\n      const elY = y2.value - elementPositionY.value;\n      isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;\n      if (handleOutside || !isOutside.value) {\n        elementX.value = elX;\n        elementY.value = elY;\n      }\n    }, { immediate: true });\n  }\n  return {\n    x: x2,\n    y: y2,\n    sourceType,\n    elementX,\n    elementY,\n    elementPositionX,\n    elementPositionY,\n    elementHeight,\n    elementWidth,\n    isOutside,\n    stop\n  };\n}\nfunction useMousePressed(options2 = {}) {\n  const {\n    touch = true,\n    drag = true,\n    initialValue = false,\n    window: window2 = defaultWindow\n  } = options2;\n  const pressed = ref(initialValue);\n  const sourceType = ref(null);\n  if (!window2) {\n    return {\n      pressed,\n      sourceType\n    };\n  }\n  const onPressed = (srcType) => () => {\n    pressed.value = true;\n    sourceType.value = srcType;\n  };\n  const onReleased = () => {\n    pressed.value = false;\n    sourceType.value = null;\n  };\n  const target = computed(() => unrefElement(options2.target) || window2);\n  useEventListener(target, \"mousedown\", onPressed(\"mouse\"), { passive: true });\n  useEventListener(window2, \"mouseleave\", onReleased, { passive: true });\n  useEventListener(window2, \"mouseup\", onReleased, { passive: true });\n  if (drag) {\n    useEventListener(target, \"dragstart\", onPressed(\"mouse\"), { passive: true });\n    useEventListener(window2, \"drop\", onReleased, { passive: true });\n    useEventListener(window2, \"dragend\", onReleased, { passive: true });\n  }\n  if (touch) {\n    useEventListener(target, \"touchstart\", onPressed(\"touch\"), { passive: true });\n    useEventListener(window2, \"touchend\", onReleased, { passive: true });\n    useEventListener(window2, \"touchcancel\", onReleased, { passive: true });\n  }\n  return {\n    pressed,\n    sourceType\n  };\n}\nvar SwipeDirection;\n(function(SwipeDirection2) {\n  SwipeDirection2[\"UP\"] = \"UP\";\n  SwipeDirection2[\"RIGHT\"] = \"RIGHT\";\n  SwipeDirection2[\"DOWN\"] = \"DOWN\";\n  SwipeDirection2[\"LEFT\"] = \"LEFT\";\n  SwipeDirection2[\"NONE\"] = \"NONE\";\n})(SwipeDirection || (SwipeDirection = {}));\nvar __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a2, b2) => {\n  for (var prop in b2 || (b2 = {}))\n    if (__hasOwnProp$1.call(b2, prop))\n      __defNormalProp$1(a2, prop, b2[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b2)) {\n      if (__propIsEnum$1.call(b2, prop))\n        __defNormalProp$1(a2, prop, b2[prop]);\n    }\n  return a2;\n};\nfunction useTimestamp(options2 = {}) {\n  const {\n    controls: exposeControls = false,\n    offset = 0,\n    immediate = true,\n    interval: interval2 = \"requestAnimationFrame\"\n  } = options2;\n  const ts = ref(timestamp$1() + offset);\n  const update = () => ts.value = timestamp$1() + offset;\n  const controls = interval2 === \"requestAnimationFrame\" ? useRafFn(update, { immediate }) : useIntervalFn(update, interval2, { immediate });\n  if (exposeControls) {\n    return __spreadValues$1({\n      timestamp: ts\n    }, controls);\n  } else {\n    return ts;\n  }\n}\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a2, b2) => {\n  for (var prop in b2 || (b2 = {}))\n    if (__hasOwnProp.call(b2, prop))\n      __defNormalProp(a2, prop, b2[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b2)) {\n      if (__propIsEnum.call(b2, prop))\n        __defNormalProp(a2, prop, b2[prop]);\n    }\n  return a2;\n};\nconst _TransitionPresets = {\n  easeInSine: [0.12, 0, 0.39, 0],\n  easeOutSine: [0.61, 1, 0.88, 1],\n  easeInOutSine: [0.37, 0, 0.63, 1],\n  easeInQuad: [0.11, 0, 0.5, 0],\n  easeOutQuad: [0.5, 1, 0.89, 1],\n  easeInOutQuad: [0.45, 0, 0.55, 1],\n  easeInCubic: [0.32, 0, 0.67, 0],\n  easeOutCubic: [0.33, 1, 0.68, 1],\n  easeInOutCubic: [0.65, 0, 0.35, 1],\n  easeInQuart: [0.5, 0, 0.75, 0],\n  easeOutQuart: [0.25, 1, 0.5, 1],\n  easeInOutQuart: [0.76, 0, 0.24, 1],\n  easeInQuint: [0.64, 0, 0.78, 0],\n  easeOutQuint: [0.22, 1, 0.36, 1],\n  easeInOutQuint: [0.83, 0, 0.17, 1],\n  easeInExpo: [0.7, 0, 0.84, 0],\n  easeOutExpo: [0.16, 1, 0.3, 1],\n  easeInOutExpo: [0.87, 0, 0.13, 1],\n  easeInCirc: [0.55, 0, 1, 0.45],\n  easeOutCirc: [0, 0.55, 0.45, 1],\n  easeInOutCirc: [0.85, 0, 0.15, 1],\n  easeInBack: [0.36, 0, 0.66, -0.56],\n  easeOutBack: [0.34, 1.56, 0.64, 1],\n  easeInOutBack: [0.68, -0.6, 0.32, 1.6]\n};\n__spreadValues({\n  linear: identity\n}, _TransitionPresets);\nfunction useClamp(value, min, max) {\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, resolveUnref(min), resolveUnref(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, resolveUnref(min), resolveUnref(max));\n    }\n  });\n}\nconst currentCamera = useStorage(\"cast-camera\", \"default\");\nconst currentMic = useStorage(\"cast-mic\", \"default\");\nconst showRecordingDialog = ref();\nconst recordingName = ref(\"\");\nconst recordCamera = ref(true);\nconst mimeType = useStorage(\"slidev-record-mimetype\", \"video/webm\");\nconst mimeExtMap = {\n  \"video/webm\": \"webm\",\n  \"video/webm;codecs=h264\": \"mp4\",\n  \"video/x-matroska;codecs=avc1\": \"mkv\"\n};\nfunction getFilename(media, mimeType2) {\n  const d2 = new Date();\n  const pad = (v2) => `${v2}`.padStart(2, \"0\");\n  const date = `${pad(d2.getMonth() + 1)}${pad(d2.getDate())}-${pad(d2.getHours())}${pad(d2.getMinutes())}`;\n  const ext = mimeType2 ? mimeExtMap[mimeType2] : \"webm\";\n  return `${[date, media, recordingName.value].filter((el) => !!el).join(\"-\")}.${ext}`;\n}\nfunction getSupportedMimeTypes() {\n  if (MediaRecorder && typeof (MediaRecorder == null ? void 0 : MediaRecorder.isTypeSupported) === \"function\") {\n    return Object.keys(mimeExtMap).filter((mime) => MediaRecorder.isTypeSupported(mime));\n  }\n  return [];\n}\nconst fileNames = reactive({\n  screen: computed(() => getFilename(\"screen\", mimeType.value)),\n  camera: computed(() => getFilename(\"camera\", mimeType.value))\n});\nconst {\n  devices,\n  videoInputs: cameras,\n  audioInputs: microphones,\n  ensurePermissions: ensureDevicesListPermissions\n} = useDevicesList({\n  onUpdated: function() {\n    var _a2, _b;\n    if (currentCamera.value !== \"none\") {\n      if (!cameras.value.find((i2) => i2.deviceId === currentCamera.value))\n        currentCamera.value = ((_a2 = cameras.value[0]) == null ? void 0 : _a2.deviceId) || \"default\";\n    }\n    if (currentMic.value !== \"none\") {\n      if (!microphones.value.find((i2) => i2.deviceId === currentMic.value))\n        currentMic.value = ((_b = microphones.value[0]) == null ? void 0 : _b.deviceId) || \"default\";\n    }\n  }\n});\nfunction download(name2, url) {\n  const a2 = document.createElement(\"a\");\n  a2.setAttribute(\"href\", url);\n  a2.setAttribute(\"download\", name2);\n  document.body.appendChild(a2);\n  a2.click();\n  document.body.removeChild(a2);\n}\nfunction useRecording() {\n  const recording2 = ref(false);\n  const recordingStartedAt = ref();\n  const timestamp2 = useTimestamp();\n  watch(recording2, (r2) => r2 ? recordingStartedAt.value = Date.now() : recordingStartedAt.value = null);\n  const recordingTime = computed(() => {\n    if (!recordingStartedAt.value)\n      return 0;\n    return timestamp2.value - recordingStartedAt.value;\n  });\n  const showAvatar = ref(false);\n  const recorderCamera = shallowRef();\n  const recorderSlides = shallowRef();\n  const streamCamera = shallowRef();\n  const streamCapture = shallowRef();\n  const streamSlides = shallowRef();\n  const config = {\n    type: \"video\",\n    bitsPerSecond: 4 * 256 * 8 * 1024,\n    timeSlice: 24 * 60 * 60 * 1e3\n  };\n  async function toggleAvatar() {\n    if (currentCamera.value === \"none\")\n      return;\n    if (showAvatar.value) {\n      showAvatar.value = false;\n      if (!recording2.value)\n        closeStream(streamCamera);\n    } else {\n      await startCameraStream();\n      if (streamCamera.value)\n        showAvatar.value = !!streamCamera.value;\n    }\n  }\n  async function startCameraStream() {\n    await ensureDevicesListPermissions();\n    await nextTick();\n    if (!streamCamera.value) {\n      if (currentCamera.value === \"none\" && currentMic.value === \"none\")\n        return;\n      streamCamera.value = await navigator.mediaDevices.getUserMedia({\n        video: currentCamera.value === \"none\" || recordCamera.value !== true ? false : {\n          deviceId: currentCamera.value\n        },\n        audio: currentMic.value === \"none\" ? false : {\n          deviceId: currentMic.value\n        }\n      });\n    }\n  }\n  watch(currentCamera, async (v2) => {\n    if (v2 === \"none\") {\n      closeStream(streamCamera);\n    } else {\n      if (recording2.value)\n        return;\n      if (streamCamera.value) {\n        closeStream(streamCamera);\n        await startCameraStream();\n      }\n    }\n  });\n  async function startRecording(customConfig) {\n    var _a2;\n    await ensureDevicesListPermissions();\n    const { default: Recorder2 } = await import(\"./RecordRTC.js\").then(function(n2) {\n      return n2.R;\n    });\n    await startCameraStream();\n    streamCapture.value = await navigator.mediaDevices.getDisplayMedia({\n      video: {\n        frameRate: 30,\n        width: 3840,\n        height: 2160,\n        cursor: \"motion\",\n        resizeMode: \"crop-and-scale\"\n      }\n    });\n    streamCapture.value.addEventListener(\"inactive\", stopRecording);\n    streamSlides.value = new MediaStream();\n    streamCapture.value.getVideoTracks().forEach((videoTrack) => streamSlides.value.addTrack(videoTrack));\n    Object.assign(config, customConfig);\n    if (streamCamera.value) {\n      streamSlides.value.addTrack((_a2 = master.stream.stream.getAudioTracks()) == null ? void 0 : _a2[0]);\n      recorderCamera.value = new Recorder2(streamCamera.value, config);\n      recorderCamera.value.startRecording();\n    }\n    recorderSlides.value = new Recorder2(streamSlides.value, config);\n    recorderSlides.value.startRecording();\n    recording2.value = true;\n  }\n  async function stopRecording() {\n    var _a2, _b;\n    recording2.value = false;\n    (_a2 = recorderCamera.value) == null ? void 0 : _a2.stopRecording(() => {\n      if (recordCamera.value) {\n        const blob = recorderCamera.value.getBlob();\n        const url = URL.createObjectURL(blob);\n        download(getFilename(\"camera\", config.mimeType), url);\n        window.URL.revokeObjectURL(url);\n      }\n      recorderCamera.value = void 0;\n      if (!showAvatar.value)\n        closeStream(streamCamera);\n    });\n    (_b = recorderSlides.value) == null ? void 0 : _b.stopRecording(() => {\n      const blob = recorderSlides.value.getBlob();\n      const url = URL.createObjectURL(blob);\n      download(getFilename(\"screen\", config.mimeType), url);\n      window.URL.revokeObjectURL(url);\n      closeStream(streamCapture);\n      closeStream(streamSlides);\n      recorderSlides.value = void 0;\n    });\n  }\n  function closeStream(stream) {\n    const s2 = stream.value;\n    if (!s2)\n      return;\n    s2.getTracks().forEach((i2) => {\n      i2.stop();\n      s2.removeTrack(i2);\n    });\n    stream.value = void 0;\n  }\n  function toggleRecording() {\n    if (recording2.value)\n      stopRecording();\n    else\n      startRecording();\n  }\n  useEventListener(\"beforeunload\", (event) => {\n    if (!recording2.value)\n      return;\n    if (confirm(\"Recording is not saved yet, do you want to leave?\"))\n      return;\n    event.preventDefault();\n    event.returnValue = \"\";\n  });\n  return {\n    recording: recording2,\n    recordingTime,\n    showAvatar,\n    toggleRecording,\n    startRecording,\n    stopRecording,\n    toggleAvatar,\n    recorderCamera,\n    recorderSlides,\n    streamCamera,\n    streamCapture,\n    streamSlides\n  };\n}\nconst cast = useRecording();\nlet recorder;\nconst recording = ref(false);\nconst toggled = useLastChanged(recording);\nconst timestamp = useTimestamp();\nconst duration = computed(() => timestamp.value - toggled.value);\nconst record = {\n  start() {\n    if (!recorder)\n      useRecorder();\n    recorder.start();\n    recording.value = true;\n  },\n  async stop() {\n    recording.value = false;\n    const rec = await recorder.stop();\n    const url = URL.createObjectURL(rec);\n    const anchor = document.createElement(\"a\");\n    anchor.download = getFilename(\"rec\");\n    anchor.href = url;\n    anchor.click();\n  }\n};\nfunction useRecorder() {\n  if (!recorder) {\n    recorder = new Recorder();\n  }\n  return { recorder, record, recording, toggled, duration };\n}\nconst audio = reactive({\n  initiated: false,\n  mute: useStorage(\"mute\", false),\n  volume: useClamp(useStorage(\"main-vol\", 1), 0, 2),\n  meter: 0\n});\nconst master = shallowReactive({});\nconst channels = shallowReactive({});\nfunction useAudio() {\n  if (!audio.initiated) {\n    start$1();\n    const { recorder: recorder2 } = useRecorder();\n    master.stream = context.createMediaStreamDestination();\n    master.meter = new Meter().toDestination();\n    master.meter.normalRange = true;\n    master.meter.connect(master.stream);\n    master.meter.connect(recorder2);\n    useRafFn(() => {\n      audio.meter = master.meter.getValue();\n    });\n    master.limiter = new Limiter(-18).connect(master.meter);\n    master.reverb = new Reverb({\n      decay: 1,\n      wet: 0.5\n    }).connect(master.meter);\n    master.limiter.connect(master.reverb);\n    watchEffect(() => {\n      getDestination().mute = audio.mute;\n    });\n    watchEffect(() => {\n      getDestination().volume.targetRampTo(gainToDb(audio.volume), 0.1);\n    });\n    audio.initiated = true;\n  }\n  return { audio, master, channels };\n}\nfunction createChannel$1(title = (Math.random() * 1e3).toFixed(0), options2) {\n  const { master: master2 } = useAudio();\n  const channel = new Limiter(options2).connect(master2.limiter);\n  channels[title] = channel;\n  return { channel };\n}\nfunction initGetUserMedia() {\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\n  if (!window.AudioContext) {\n    return alert(\"AudioContext not supported\");\n  }\n  if (navigator.mediaDevices === void 0) {\n    navigator.mediaDevices = {};\n  }\n  if (navigator.mediaDevices.getUserMedia === void 0) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      const getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n      if (!getUserMedia) {\n        alert(\"getUserMedia is not implemented in this browser\");\n      }\n      return new Promise(function(resolve, reject) {\n        getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n    };\n  }\n}\nconst midiA = 69;\nfunction pitchNoteOctave(pitch) {\n  return {\n    note: pitch > 0 ? pitch % 12 : 12 + pitch % 12,\n    octave: Math.floor(pitch / 12) + 4\n  };\n}\nfunction pitchFreq(pitch = 0, octave2 = 3, middleA = 440, tuning = \"equal\") {\n  let hz = 0;\n  const justCents = [0, 112, 204, 316, 386, 498, 590, 702, 814, 884, 1017, 1088];\n  if (tuning == \"equal\") {\n    hz = Number(middleA * Math.pow(2, octave2 - 3 + pitch / 12));\n  }\n  if (tuning == \"just\") {\n    let diff = Number(Math.pow(Math.pow(2, 1 / 1200), justCents[pitch]));\n    hz = Number(middleA * Math.pow(2, octave2 - 4) * diff);\n  }\n  return hz;\n}\nfunction pitchColor(pitch = 0, octave2, velocity = 1, alpha = 1) {\n  octave2 = octave2 || Math.floor(pitch / 12) + 4;\n  return `hsla(${pitch % 12 * 30},${velocity * 100}%,${Math.abs(octave2 + 2) * 8}%,${alpha})`;\n}\nfunction freqColor$1(freq2) {\n  return pitchColor(freqPitch(freq2));\n}\nfunction freqPitch(freq2, middleA = 440) {\n  return 12 * (Math.log(freq2 / middleA) / Math.log(2));\n}\nfunction isInChroma(chroma2, tonic, note2) {\n  return chroma2.split(\"\")[(24 + note2 - tonic) % 12] == \"1\";\n}\nfunction getCircleCoord(n2 = 0, total = 12, radius = 35, width = 100) {\n  let angle = (n2 - total / 4) / (total / 2) * Math.PI;\n  let x2 = radius * Math.cos(angle) + width / 2;\n  let y2 = radius * Math.sin(angle) + width / 2;\n  return { x: x2, y: y2 };\n}\nfunction rotateArray(arr, count = 1) {\n  return [...arr.slice(count, arr.length), ...arr.slice(0, count)];\n}\nfunction clampNum(main, delta, min = 0, max = 100) {\n  return Math.max(min, Math.min(Number(main) + Number(delta), max));\n}\nfunction getCents$1(frequency, pitch) {\n  return Math.floor(1200 * Math.log(frequency / getStandardFrequency$1(pitch)) / Math.log(2));\n}\nfunction getStandardFrequency$1(pitch, middleA = 440) {\n  return middleA * Math.pow(2, (pitch - 69) / 12);\n}\nclass e$6 {\n  constructor(e2 = false) {\n    this.eventMap = {}, this.eventsSuspended = e2 == 1;\n  }\n  addListener(n2, s2, r2 = {}) {\n    if (typeof n2 == \"string\" && n2.length < 1 || n2 instanceof String && n2.length < 1 || typeof n2 != \"string\" && !(n2 instanceof String) && n2 !== e$6.ANY_EVENT)\n      throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n    if (typeof s2 != \"function\")\n      throw new TypeError(\"The callback must be a function.\");\n    const a2 = new t$6(n2, this, s2, r2);\n    return this.eventMap[n2] || (this.eventMap[n2] = []), r2.prepend ? this.eventMap[n2].unshift(a2) : this.eventMap[n2].push(a2), a2;\n  }\n  addOneTimeListener(e2, t2, n2 = {}) {\n    n2.remaining = 1, this.addListener(e2, t2, n2);\n  }\n  static get ANY_EVENT() {\n    return Symbol.for(\"Any event\");\n  }\n  hasListener(n2, s2) {\n    if (n2 === void 0)\n      return !!(this.eventMap[e$6.ANY_EVENT] && this.eventMap[e$6.ANY_EVENT].length > 0) || Object.entries(this.eventMap).some(([, e2]) => e2.length > 0);\n    if (this.eventMap[n2] && this.eventMap[n2].length > 0) {\n      if (s2 instanceof t$6) {\n        return this.eventMap[n2].filter((e2) => e2 === s2).length > 0;\n      }\n      if (typeof s2 == \"function\") {\n        return this.eventMap[n2].filter((e2) => e2.callback === s2).length > 0;\n      }\n      return s2 == null;\n    }\n    return false;\n  }\n  get eventNames() {\n    return Object.keys(this.eventMap);\n  }\n  getListeners(e2) {\n    return this.eventMap[e2] || [];\n  }\n  suspendEvent(e2) {\n    this.getListeners(e2).forEach((e3) => {\n      e3.suspended = true;\n    });\n  }\n  unsuspendEvent(e2) {\n    this.getListeners(e2).forEach((e3) => {\n      e3.suspended = false;\n    });\n  }\n  getListenerCount(e2) {\n    return this.getListeners(e2).length;\n  }\n  emit(t2, ...n2) {\n    if (typeof t2 != \"string\" && !(t2 instanceof String))\n      throw new TypeError(\"The 'event' parameter must be a string.\");\n    if (this.eventsSuspended)\n      return;\n    let s2 = [], r2 = this.eventMap[e$6.ANY_EVENT] || [];\n    return this.eventMap[t2] && (r2 = r2.concat(this.eventMap[t2])), r2.forEach((e2) => {\n      if (e2.suspended)\n        return;\n      let t3 = [...n2];\n      Array.isArray(e2.arguments) && (t3 = t3.concat(e2.arguments)), e2.remaining > 0 && (s2.push(e2.callback.apply(e2.context, t3)), e2.count++), --e2.remaining < 1 && e2.remove();\n    }), s2;\n  }\n  removeListener(e2, t2, n2 = {}) {\n    if (e2 === void 0)\n      return void (this.eventMap = {});\n    if (!this.eventMap[e2])\n      return;\n    let s2 = this.eventMap[e2].filter((e3) => t2 && e3.callback !== t2 || n2.remaining && n2.remaining !== e3.remaining || n2.context && n2.context !== e3.context);\n    s2.length ? this.eventMap[e2] = s2 : delete this.eventMap[e2];\n  }\n  async waitFor(e2, t2 = {}) {\n    return t2.duration = parseInt(t2.duration), (isNaN(t2.duration) || t2.duration <= 0) && (t2.duration = 1 / 0), new Promise((n2, s2) => {\n      let r2, a2 = this.addListener(e2, () => {\n        clearTimeout(r2), n2();\n      }, { remaining: 1 });\n      t2.duration !== 1 / 0 && (r2 = setTimeout(() => {\n        a2.remove(), s2(\"The duration expired before the event was emitted.\");\n      }, t2.duration));\n    });\n  }\n  get eventCount() {\n    return Object.keys(this.eventMap).length;\n  }\n}\nclass t$6 {\n  constructor(t2, n2, s2, r2 = {}) {\n    if (typeof t2 != \"string\" && !(t2 instanceof String) && t2 !== e$6.ANY_EVENT)\n      throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n    if (!n2)\n      throw new ReferenceError(\"The 'target' parameter is mandatory.\");\n    if (typeof s2 != \"function\")\n      throw new TypeError(\"The 'callback' must be a function.\");\n    r2.arguments === void 0 || Array.isArray(r2.arguments) || (r2.arguments = [r2.arguments]), (r2 = Object.assign({ context: n2, remaining: 1 / 0, arguments: void 0, duration: 1 / 0 }, r2)).duration !== 1 / 0 && setTimeout(() => this.remove(), r2.duration), this.arguments = r2.arguments, this.callback = s2, this.context = r2.context, this.count = 0, this.event = t2, this.remaining = parseInt(r2.remaining) >= 1 ? parseInt(r2.remaining) : 1 / 0, this.suspended = false, this.target = n2;\n  }\n  remove() {\n    this.target.removeListener(this.event, this.callback, { context: this.context, remaining: this.remaining });\n  }\n}\n/**\n * The `Enumerations` class contains enumerations and arrays of elements used throughout the\n * library. All properties are static and should be referenced using the class name. For example:\n * `Enumerations.MIDI_CHANNEL_MESSAGES`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass n$6 {\n  static get MIDI_CHANNEL_MESSAGES() {\n    return { noteoff: 8, noteon: 9, keyaftertouch: 10, controlchange: 11, programchange: 12, channelaftertouch: 13, pitchbend: 14 };\n  }\n  static get MIDI_CHANNEL_NUMBERS() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n  }\n  static get MIDI_CHANNEL_MODE_MESSAGES() {\n    return { allsoundoff: 120, resetallcontrollers: 121, localcontrol: 122, allnotesoff: 123, omnimodeoff: 124, omnimodeon: 125, monomodeon: 126, polymodeon: 127 };\n  }\n  static get MIDI_CONTROL_CHANGE_MESSAGES() {\n    return { bankselectcoarse: 0, modulationwheelcoarse: 1, breathcontrollercoarse: 2, controller3: 3, footcontrollercoarse: 4, portamentotimecoarse: 5, dataentrycoarse: 6, volumecoarse: 7, balancecoarse: 8, controller9: 9, pancoarse: 10, expressioncoarse: 11, effectcontrol1coarse: 12, effectcontrol2coarse: 13, controller14: 14, controller15: 15, generalpurposeslider1: 16, generalpurposeslider2: 17, generalpurposeslider3: 18, generalpurposeslider4: 19, controller20: 20, controller21: 21, controller22: 22, controller23: 23, controller24: 24, controller25: 25, controller26: 26, controller27: 27, controller28: 28, controller29: 29, controller30: 30, controller31: 31, bankselectfine: 32, modulationwheelfine: 33, breathcontrollerfine: 34, controller35: 35, footcontrollerfine: 36, portamentotimefine: 37, dataentryfine: 38, volumefine: 39, balancefine: 40, controller41: 41, panfine: 42, expressionfine: 43, effectcontrol1fine: 44, effectcontrol2fine: 45, controller46: 46, controller47: 47, controller48: 48, controller49: 49, controller50: 50, controller51: 51, controller52: 52, controller53: 53, controller54: 54, controller55: 55, controller56: 56, controller57: 57, controller58: 58, controller59: 59, controller60: 60, controller61: 61, controller62: 62, controller63: 63, holdpedal: 64, portamento: 65, sustenutopedal: 66, softpedal: 67, legatopedal: 68, hold2pedal: 69, soundvariation: 70, resonance: 71, soundreleasetime: 72, soundattacktime: 73, brightness: 74, soundcontrol6: 75, soundcontrol7: 76, soundcontrol8: 77, soundcontrol9: 78, soundcontrol10: 79, generalpurposebutton1: 80, generalpurposebutton2: 81, generalpurposebutton3: 82, generalpurposebutton4: 83, controller84: 84, controller85: 85, controller86: 86, controller87: 87, controller88: 88, controller89: 89, controller90: 90, reverblevel: 91, tremololevel: 92, choruslevel: 93, celestelevel: 94, phaserlevel: 95, databuttonincrement: 96, databuttondecrement: 97, nonregisteredparametercoarse: 98, nonregisteredparameterfine: 99, registeredparametercoarse: 100, registeredparameterfine: 101, controller102: 102, controller103: 103, controller104: 104, controller105: 105, controller106: 106, controller107: 107, controller108: 108, controller109: 109, controller110: 110, controller111: 111, controller112: 112, controller113: 113, controller114: 114, controller115: 115, controller116: 116, controller117: 117, controller118: 118, controller119: 119, allsoundoff: 120, resetallcontrollers: 121, localcontrol: 122, allnotesoff: 123, omnimodeoff: 124, omnimodeon: 125, monomodeon: 126, polymodeon: 127 };\n  }\n  static get MIDI_REGISTERED_PARAMETERS() {\n    return { pitchbendrange: [0, 0], channelfinetuning: [0, 1], channelcoarsetuning: [0, 2], tuningprogram: [0, 3], tuningbank: [0, 4], modulationrange: [0, 5], azimuthangle: [61, 0], elevationangle: [61, 1], gain: [61, 2], distanceratio: [61, 3], maximumdistance: [61, 4], maximumdistancegain: [61, 5], referencedistanceratio: [61, 6], panspreadangle: [61, 7], rollangle: [61, 8] };\n  }\n  static get MIDI_SYSTEM_MESSAGES() {\n    return { sysex: 240, timecode: 241, songposition: 242, songselect: 243, tunerequest: 246, tuningrequest: 246, sysexend: 247, clock: 248, start: 250, continue: 251, stop: 252, activesensing: 254, reset: 255, midimessage: 0, unknownsystemmessage: -1 };\n  }\n  static get CHANNEL_EVENTS() {\n    return [\"noteoff\", \"controlchange\", \"noteon\", \"keyaftertouch\", \"programchange\", \"channelaftertouch\", \"pitchbend\", \"allnotesoff\", \"allsoundoff\", \"localcontrol\", \"monomode\", \"omnimode\", \"resetallcontrollers\", \"nrpn\", \"nrpn-dataentrycoarse\", \"nrpn-dataentryfine\", \"nrpn-databuttonincrement\", \"nrpn-databuttondecrement\", \"rpn\", \"rpn-dataentrycoarse\", \"rpn-dataentryfine\", \"rpn-databuttonincrement\", \"rpn-databuttondecrement\"];\n  }\n}\n/**\n * The `Note` class represents a single musical note such as `\"D3\"`, `\"G#4\"`, `\"F-1\"`, `\"Gb7\"`, etc.\n *\n * `Note` objects can be played back on a single channel by calling\n * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same\n * output, by calling [`Output.playNote()`]{@link Output#playNote}.\n *\n * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.\n * These can be changed by passing in the appropriate option. It is also possible to set a\n * system-wide default for attack and release velocities by using the\n * [`WebMidi.defaults`](WebMidi#defaults) property.\n *\n * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and\n * [`rawRelease`](#rawRelease) to both get and set the values.\n *\n * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped\n * when the duration has elapsed by sending a `\"noteoff\"` event. By default, the duration is set to\n * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a\n * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},\n * [`Output.stopNote()`]{@link Output#stopNote} or similar.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass s$2 {\n  constructor(e2, t2 = {}) {\n    this.duration = d$3.defaults.note.duration, this.attack = d$3.defaults.note.attack, this.release = d$3.defaults.note.release, t2.duration != null && (this.duration = t2.duration), t2.attack != null && (this.attack = t2.attack), t2.rawAttack != null && (this.attack = r$6.from7bitToFloat(t2.rawAttack)), t2.release != null && (this.release = t2.release), t2.rawRelease != null && (this.release = r$6.from7bitToFloat(t2.rawRelease)), Number.isInteger(e2) ? this.identifier = r$6.toNoteIdentifier(e2) : this.identifier = e2;\n  }\n  get identifier() {\n    return this._name + (this._accidental || \"\") + this._octave;\n  }\n  set identifier(e2) {\n    const t2 = r$6.getNoteDetails(e2);\n    if (d$3.validation && !e2)\n      throw new Error(\"Invalid note identifier\");\n    this._name = t2.name, this._accidental = t2.accidental, this._octave = t2.octave;\n  }\n  get name() {\n    return this._name;\n  }\n  set name(e2) {\n    if (d$3.validation && (e2 = e2.toUpperCase(), ![\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"].includes(e2)))\n      throw new Error(\"Invalid name value\");\n    this._name = e2;\n  }\n  get accidental() {\n    return this._accidental;\n  }\n  set accidental(e2) {\n    if (d$3.validation && (e2 = e2.toLowerCase(), ![\"#\", \"##\", \"b\", \"bb\"].includes(e2)))\n      throw new Error(\"Invalid accidental value\");\n    this._accidental = e2;\n  }\n  get octave() {\n    return this._octave;\n  }\n  set octave(e2) {\n    if (d$3.validation && (e2 = parseInt(e2), isNaN(e2)))\n      throw new Error(\"Invalid octave value\");\n    this._octave = e2;\n  }\n  get duration() {\n    return this._duration;\n  }\n  set duration(e2) {\n    if (d$3.validation && (e2 = parseFloat(e2), isNaN(e2) || e2 === null || e2 < 0))\n      throw new RangeError(\"Invalid duration value.\");\n    this._duration = e2;\n  }\n  get attack() {\n    return this._attack;\n  }\n  set attack(e2) {\n    if (d$3.validation && (e2 = parseFloat(e2), isNaN(e2) || !(e2 >= 0 && e2 <= 1)))\n      throw new RangeError(\"Invalid attack value.\");\n    this._attack = e2;\n  }\n  get release() {\n    return this._release;\n  }\n  set release(e2) {\n    if (d$3.validation && (e2 = parseFloat(e2), isNaN(e2) || !(e2 >= 0 && e2 <= 1)))\n      throw new RangeError(\"Invalid release value.\");\n    this._release = e2;\n  }\n  get rawAttack() {\n    return r$6.fromFloatTo7Bit(this._attack);\n  }\n  set rawAttack(e2) {\n    this._attack = r$6.from7bitToFloat(e2);\n  }\n  get rawRelease() {\n    return r$6.fromFloatTo7Bit(this._release);\n  }\n  set rawRelease(e2) {\n    this._release = r$6.from7bitToFloat(e2);\n  }\n  get number() {\n    return r$6.toNoteNumber(this.identifier);\n  }\n  getOffsetNumber(e2 = 0, t2 = 0) {\n    return d$3.validation && (e2 = parseInt(e2) || 0, t2 = parseInt(t2) || 0), Math.min(Math.max(this.number + 12 * e2 + t2, 0), 127);\n  }\n}\n/**\n * The `Utilities` class contains general-purpose utility methods. All methods are static and\n * should be called using the class name. For example: `Utilities.getNoteDetails(\"C4\")`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass r$6 {\n  static toNoteNumber(e2, t2 = 0) {\n    if (t2 = t2 == null ? 0 : parseInt(t2), isNaN(t2))\n      throw new RangeError(\"Invalid 'octaveOffset' value\");\n    typeof e2 != \"string\" && (e2 = \"\");\n    const n2 = this.getNoteDetails(e2);\n    if (!n2)\n      throw new TypeError(\"Invalid note identifier\");\n    let s2 = 12 * (n2.octave + 1 + t2);\n    if (s2 += { C: 0, D: 2, E: 4, F: 5, G: 7, A: 9, B: 11 }[n2.name], n2.accidental && (n2.accidental.startsWith(\"b\") ? s2 -= n2.accidental.length : s2 += n2.accidental.length), s2 < 0 || s2 > 127)\n      throw new RangeError(\"Invalid octaveOffset value\");\n    return s2;\n  }\n  static getNoteDetails(e2) {\n    Number.isInteger(e2) && (e2 = this.toNoteIdentifier(e2));\n    const t2 = e2.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)$/i);\n    if (!t2)\n      throw new TypeError(\"Invalid note identifier\");\n    const n2 = t2[1].toUpperCase(), s2 = parseInt(t2[3]);\n    let r2 = t2[2].toLowerCase();\n    return r2 = r2 === \"\" ? void 0 : r2, { accidental: r2, identifier: n2 + (r2 || \"\") + s2, name: n2, octave: s2 };\n  }\n  static sanitizeChannels(e2) {\n    let t2;\n    if (this.validation) {\n      if (e2 === \"all\")\n        t2 = [\"all\"];\n      else if (e2 === \"none\")\n        return [];\n    }\n    return t2 = Array.isArray(e2) ? e2 : [e2], t2.indexOf(\"all\") > -1 && (t2 = n$6.MIDI_CHANNEL_NUMBERS), t2.map(function(e3) {\n      return parseInt(e3);\n    }).filter(function(e3) {\n      return e3 >= 1 && e3 <= 16;\n    });\n  }\n  static toTimestamp(e2) {\n    let t2 = false;\n    const n2 = parseFloat(e2);\n    return !isNaN(n2) && (typeof e2 == \"string\" && e2.substring(0, 1) === \"+\" ? n2 >= 0 && (t2 = d$3.time + n2) : n2 >= 0 && (t2 = n2), t2);\n  }\n  static guessNoteNumber(e2, t2) {\n    t2 = parseInt(t2) || 0;\n    let n2 = false;\n    if (Number.isInteger(e2) && e2 >= 0 && e2 <= 127)\n      n2 = parseInt(e2);\n    else if (parseInt(e2) >= 0 && parseInt(e2) <= 127)\n      n2 = parseInt(e2);\n    else if (typeof e2 == \"string\" || e2 instanceof String)\n      try {\n        n2 = this.toNoteNumber(e2.trim(), t2);\n      } catch (e3) {\n        return false;\n      }\n    return n2;\n  }\n  static toNoteIdentifier(e2, t2) {\n    if (e2 = parseInt(e2), isNaN(e2) || e2 < 0 || e2 > 127)\n      throw new RangeError(\"Invalid note number\");\n    if (t2 = t2 == null ? 0 : parseInt(t2), isNaN(t2))\n      throw new RangeError(\"Invalid octaveOffset value\");\n    const n2 = Math.floor(e2 / 12 - 1) + t2;\n    return [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"][e2 % 12] + n2.toString();\n  }\n  static buildNote(e2, t2 = {}) {\n    if (t2.octaveOffset = parseInt(t2.octaveOffset) || 0, e2 instanceof s$2)\n      return e2;\n    let n2 = this.guessNoteNumber(e2, t2.octaveOffset);\n    if (n2 === false)\n      throw new TypeError(`The input could not be parsed as a note (${e2})`);\n    return t2.octaveOffset = void 0, new s$2(n2, t2);\n  }\n  static buildNoteArray(e2, t2 = {}) {\n    let n2 = [];\n    return Array.isArray(e2) || (e2 = [e2]), e2.forEach((e3) => {\n      n2.push(this.buildNote(e3, t2));\n    }), n2;\n  }\n  static from7bitToFloat(e2) {\n    return e2 === 1 / 0 && (e2 = 127), e2 = parseInt(e2) || 0, Math.min(Math.max(e2 / 127, 0), 1);\n  }\n  static fromFloatTo7Bit(e2) {\n    return e2 === 1 / 0 && (e2 = 1), e2 = parseFloat(e2) || 0, Math.min(Math.max(Math.round(127 * e2), 0), 127);\n  }\n  static fromMsbLsbToFloat(e2, t2 = 0) {\n    d$3.validation && (e2 = Math.min(Math.max(parseInt(e2) || 0, 0), 127), t2 = Math.min(Math.max(parseInt(t2) || 0, 0), 127));\n    const n2 = ((e2 << 7) + t2) / 16383;\n    return Math.min(Math.max(n2, 0), 1);\n  }\n  static fromFloatToMsbLsb(e2) {\n    d$3.validation && (e2 = Math.min(Math.max(parseFloat(e2) || 0, 0), 1));\n    const t2 = Math.round(16383 * e2);\n    return { msb: t2 >> 7, lsb: 127 & t2 };\n  }\n  static offsetNumber(e2, t2 = 0, n2 = 0) {\n    if (d$3.validation) {\n      if (e2 = parseInt(e2), isNaN(e2))\n        throw new Error(\"Invalid note number\");\n      t2 = parseInt(t2) || 0, n2 = parseInt(n2) || 0;\n    }\n    return Math.min(Math.max(e2 + 12 * t2 + n2, 0), 127);\n  }\n  static getPropertyByValue(e2, t2) {\n    return Object.keys(e2).find((n2) => e2[n2] === t2);\n  }\n  static getCcNameByNumber(e2) {\n    return r$6.getPropertyByValue(n$6.MIDI_CONTROL_CHANGE_MESSAGES, e2);\n  }\n  static getChannelModeByNumber(e2) {\n    if (!(e2 >= 120 && e2 <= 127))\n      return false;\n    for (let t2 in n$6.MIDI_CHANNEL_MODE_MESSAGES)\n      if (n$6.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(t2) && e2 === n$6.MIDI_CHANNEL_MODE_MESSAGES[t2])\n        return t2;\n    return false;\n  }\n  static get isNode() {\n    return typeof process != \"undefined\" && process.versions != null && process.versions.node != null;\n  }\n  static get isBrowser() {\n    return typeof window != \"undefined\" && window.document !== void 0;\n  }\n}\n/**\n * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are\n * provided by an [`Output`](Output) port which, itself, is made available by a device. The\n * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `OutputChannel` objects can be found inside the parent output's\n * [`channels`]{@link Output#channels} property.\n *\n * @param {Output} output The [`Output`](Output) this channel belongs to.\n * @param {number} number The MIDI channel number (`1` - `16`).\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass a$6 extends e$6 {\n  constructor(e2, t2) {\n    super(), this._output = e2, this._number = t2, this._octaveOffset = 0;\n  }\n  destroy() {\n    this._output = null, this._number = null, this._octaveOffset = 0, this.removeListener();\n  }\n  send(e2, t2 = { time: 0 }) {\n    return this.output.send(e2, t2), this;\n  }\n  sendKeyAftertouch(e2, t2, s2 = {}) {\n    if (d$3.validation) {\n      if (s2.useRawValue && (s2.rawValue = s2.useRawValue), isNaN(parseFloat(t2)))\n        throw new RangeError(\"Invalid key aftertouch value.\");\n      if (s2.rawValue) {\n        if (!(t2 >= 0 && t2 <= 127 && Number.isInteger(t2)))\n          throw new RangeError(\"Key aftertouch raw value must be an integer between 0 and 127.\");\n      } else if (!(t2 >= 0 && t2 <= 1))\n        throw new RangeError(\"Key aftertouch value must be a float between 0 and 1.\");\n    }\n    s2.rawValue || (t2 = r$6.fromFloatTo7Bit(t2));\n    const a2 = d$3.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n    return Array.isArray(e2) || (e2 = [e2]), r$6.buildNoteArray(e2).forEach((e3) => {\n      this.send([(n$6.MIDI_CHANNEL_MESSAGES.keyaftertouch << 4) + (this.number - 1), e3.getOffsetNumber(a2), t2], { time: r$6.toTimestamp(s2.time) });\n    }), this;\n  }\n  sendControlChange(e2, t2, s2 = {}) {\n    if (typeof e2 == \"string\" && (e2 = n$6.MIDI_CONTROL_CHANGE_MESSAGES[e2]), Array.isArray(t2) || (t2 = [t2]), d$3.validation) {\n      if (e2 === void 0)\n        throw new TypeError(\"Control change must be identified with a valid name or an integer between 0 and 127.\");\n      if (!Number.isInteger(e2) || !(e2 >= 0 && e2 <= 127))\n        throw new TypeError(\"Control change number must be an integer between 0 and 127.\");\n      if ((t2 = t2.map((e3) => {\n        const t3 = Math.min(Math.max(parseInt(e3), 0), 127);\n        if (isNaN(t3))\n          throw new TypeError(\"Values must be integers between 0 and 127\");\n        return t3;\n      })).length === 2 && e2 >= 32)\n        throw new TypeError(\"To use a value array, the controller must be between 0 and 31\");\n    }\n    return t2.forEach((a2, i2) => {\n      this.send([(n$6.MIDI_CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1), e2 + 32 * i2, t2[i2]], { time: r$6.toTimestamp(s2.time) });\n    }), this;\n  }\n  _selectNonRegisteredParameter(e2, t2 = {}) {\n    return this.sendControlChange(99, e2[0], t2), this.sendControlChange(98, e2[1], t2), this;\n  }\n  _deselectRegisteredParameter(e2 = {}) {\n    return this.sendControlChange(101, 127, e2), this.sendControlChange(100, 127, e2), this;\n  }\n  _deselectNonRegisteredParameter(e2 = {}) {\n    return this.sendControlChange(101, 127, e2), this.sendControlChange(100, 127, e2), this;\n  }\n  _selectRegisteredParameter(e2, t2 = {}) {\n    return this.sendControlChange(101, e2[0], t2), this.sendControlChange(100, e2[1], t2), this;\n  }\n  _setCurrentParameter(e2, t2 = {}) {\n    return e2 = [].concat(e2), this.sendControlChange(6, e2[0], t2), e2.length < 2 || this.sendControlChange(38, e2[1], t2), this;\n  }\n  sendRpnDecrement(e2, t2 = {}) {\n    if (Array.isArray(e2) || (e2 = n$6.MIDI_REGISTERED_PARAMETERS[e2]), d$3.validation) {\n      if (e2 === void 0)\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      let t3 = false;\n      if (Object.getOwnPropertyNames(n$6.MIDI_REGISTERED_PARAMETERS).forEach((s2) => {\n        n$6.MIDI_REGISTERED_PARAMETERS[s2][0] === e2[0] && n$6.MIDI_REGISTERED_PARAMETERS[s2][1] === e2[1] && (t3 = true);\n      }), !t3)\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n    }\n    return this._selectRegisteredParameter(e2, t2), this.sendControlChange(97, 0, t2), this._deselectRegisteredParameter(t2), this;\n  }\n  sendRpnIncrement(e2, t2 = {}) {\n    if (Array.isArray(e2) || (e2 = n$6.MIDI_REGISTERED_PARAMETERS[e2]), d$3.validation) {\n      if (e2 === void 0)\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      let t3 = false;\n      if (Object.getOwnPropertyNames(n$6.MIDI_REGISTERED_PARAMETERS).forEach((s2) => {\n        n$6.MIDI_REGISTERED_PARAMETERS[s2][0] === e2[0] && n$6.MIDI_REGISTERED_PARAMETERS[s2][1] === e2[1] && (t3 = true);\n      }), !t3)\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n    }\n    return this._selectRegisteredParameter(e2, t2), this.sendControlChange(96, 0, t2), this._deselectRegisteredParameter(t2), this;\n  }\n  playNote(e2, t2 = {}) {\n    if (this.sendNoteOn(e2, t2), t2.duration > 0 && isFinite(String(t2.duration).trim() || NaN)) {\n      let n2 = { time: (r$6.toTimestamp(t2.time) || d$3.time) + t2.duration, release: t2.release, rawRelease: t2.rawRelease };\n      this.sendNoteOff(e2, n2);\n    }\n    return this;\n  }\n  sendNoteOff(e2, t2 = {}) {\n    if (d$3.validation) {\n      if (t2.rawRelease != null && !(t2.rawRelease >= 0 && t2.rawRelease <= 127))\n        throw new RangeError(\"The 'rawRelease' option must be an integer between 0 and 127\");\n      if (t2.release != null && !(t2.release >= 0 && t2.release <= 1))\n        throw new RangeError(\"The 'release' option must be an number between 0 and 1\");\n      t2.rawVelocity && (t2.rawRelease = t2.velocity, console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.\")), t2.velocity && (t2.release = t2.velocity, console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\"));\n    }\n    let s2 = 64;\n    t2.rawRelease != null ? s2 = t2.rawRelease : isNaN(t2.release) || (s2 = Math.round(127 * t2.release));\n    const a2 = d$3.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n    return r$6.buildNoteArray(e2, { rawRelease: parseInt(s2) }).forEach((e3) => {\n      this.send([(n$6.MIDI_CHANNEL_MESSAGES.noteoff << 4) + (this.number - 1), e3.getOffsetNumber(a2), e3.rawRelease], { time: r$6.toTimestamp(t2.time) });\n    }), this;\n  }\n  stopNote(e2, t2 = {}) {\n    return this.sendNoteOff(e2, t2);\n  }\n  sendNoteOn(e2, t2 = {}) {\n    if (d$3.validation) {\n      if (t2.rawAttack != null && !(t2.rawAttack >= 0 && t2.rawAttack <= 127))\n        throw new RangeError(\"The 'rawAttack' option must be an integer between 0 and 127\");\n      if (t2.attack != null && !(t2.attack >= 0 && t2.attack <= 1))\n        throw new RangeError(\"The 'attack' option must be an number between 0 and 1\");\n      t2.rawVelocity && (t2.rawAttack = t2.velocity, t2.rawRelease = t2.release, console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.\")), t2.velocity && (t2.attack = t2.velocity, console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\"));\n    }\n    let s2 = 64;\n    t2.rawAttack != null ? s2 = t2.rawAttack : isNaN(t2.attack) || (s2 = Math.round(127 * t2.attack));\n    const a2 = d$3.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n    return r$6.buildNoteArray(e2, { rawAttack: s2 }).forEach((e3) => {\n      this.send([(n$6.MIDI_CHANNEL_MESSAGES.noteon << 4) + (this.number - 1), e3.getOffsetNumber(a2), e3.rawAttack], { time: r$6.toTimestamp(t2.time) });\n    }), this;\n  }\n  sendChannelMode(e2, t2 = 0, s2 = {}) {\n    if (typeof e2 == \"string\" && (e2 = n$6.MIDI_CHANNEL_MODE_MESSAGES[e2]), d$3.validation) {\n      if (e2 === void 0)\n        throw new TypeError(\"Invalid channel mode message name or number.\");\n      if (isNaN(e2) || !(e2 >= 120 && e2 <= 127))\n        throw new TypeError(\"Invalid channel mode message number.\");\n      if (isNaN(parseInt(t2)) || t2 < 0 || t2 > 127)\n        throw new RangeError(\"Value must be an integer between 0 and 127.\");\n    }\n    return this.send([(n$6.MIDI_CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1), e2, t2], { time: r$6.toTimestamp(s2.time) }), this;\n  }\n  sendOmniMode(e2, t2 = {}) {\n    return e2 === void 0 || e2 ? this.sendChannelMode(\"omnimodeon\", 0, t2) : this.sendChannelMode(\"omnimodeoff\", 0, t2), this;\n  }\n  sendChannelAftertouch(e2, t2 = {}) {\n    if (d$3.validation) {\n      if (isNaN(parseFloat(e2)))\n        throw new RangeError(\"Invalid channel aftertouch value.\");\n      if (t2.rawValue) {\n        if (!(e2 >= 0 && e2 <= 127 && Number.isInteger(e2)))\n          throw new RangeError(\"Channel aftertouch raw value must be an integer between 0 and 127.\");\n      } else if (!(e2 >= 0 && e2 <= 1))\n        throw new RangeError(\"Channel aftertouch value must be a float between 0 and 1.\");\n    }\n    return this.send([(n$6.MIDI_CHANNEL_MESSAGES.channelaftertouch << 4) + (this.number - 1), Math.round(127 * e2)], { time: r$6.toTimestamp(t2.time) }), this;\n  }\n  sendMasterTuning(e2, t2 = {}) {\n    if (e2 = parseFloat(e2) || 0, d$3.validation && !(e2 > -65 && e2 < 64))\n      throw new RangeError(\"The value must be a decimal number larger than -65 and smaller than 64.\");\n    let n2 = Math.floor(e2) + 64, s2 = e2 - Math.floor(e2);\n    s2 = Math.round((s2 + 1) / 2 * 16383);\n    let r2 = s2 >> 7 & 127, a2 = 127 & s2;\n    return this.sendRpnValue(\"channelcoarsetuning\", n2, t2), this.sendRpnValue(\"channelfinetuning\", [r2, a2], t2), this;\n  }\n  sendModulationRange(e2, t2, n2 = {}) {\n    if (d$3.validation) {\n      if (!Number.isInteger(e2) || !(e2 >= 0 && e2 <= 127))\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      if (!(t2 == null || Number.isInteger(t2) && t2 >= 0 && t2 <= 127))\n        throw new RangeError(\"If specified, the cents value must be an integer between 0 and 127.\");\n    }\n    return t2 >= 0 && t2 <= 127 || (t2 = 0), this.sendRpnValue(\"modulationrange\", [e2, t2], n2), this;\n  }\n  sendNrpnValue(e2, t2, n2 = {}) {\n    if (t2 = [].concat(t2), d$3.validation) {\n      if (!Array.isArray(e2) || !Number.isInteger(e2[0]) || !Number.isInteger(e2[1]))\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      if (!(e2[0] >= 0 && e2[0] <= 127))\n        throw new RangeError(\"The first byte of the NRPN must be between 0 and 127.\");\n      if (!(e2[1] >= 0 && e2[1] <= 127))\n        throw new RangeError(\"The second byte of the NRPN must be between 0 and 127.\");\n      t2.forEach((e3) => {\n        if (!(e3 >= 0 && e3 <= 127))\n          throw new RangeError(\"The data bytes of the NRPN must be between 0 and 127.\");\n      });\n    }\n    return this._selectNonRegisteredParameter(e2, n2), this._setCurrentParameter(t2, n2), this._deselectNonRegisteredParameter(n2), this;\n  }\n  sendPitchBend(e2, t2 = {}) {\n    if (d$3.validation)\n      if (t2.rawValue && Array.isArray(e2)) {\n        if (!(e2[0] >= 0 && e2[0] <= 127))\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        if (!(e2[1] >= 0 && e2[1] <= 127))\n          throw new RangeError(\"The pitch bend LSB must be an integer between 0 and 127.\");\n      } else if (t2.rawValue && !Array.isArray(e2)) {\n        if (!(e2 >= 0 && e2 <= 127))\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n      } else {\n        if (isNaN(e2) || e2 === null)\n          throw new RangeError(\"Invalid pitch bend value.\");\n        if (!(e2 >= -1 && e2 <= 1))\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n      }\n    let s2 = 0, a2 = 0;\n    if (t2.rawValue && Array.isArray(e2))\n      s2 = e2[0], a2 = e2[1];\n    else if (t2.rawValue && !Array.isArray(e2))\n      s2 = e2;\n    else {\n      const t3 = r$6.fromFloatToMsbLsb((e2 + 1) / 2);\n      s2 = t3.msb, a2 = t3.lsb;\n    }\n    return this.send([(n$6.MIDI_CHANNEL_MESSAGES.pitchbend << 4) + (this.number - 1), a2, s2], { time: r$6.toTimestamp(t2.time) }), this;\n  }\n  sendPitchBendRange(e2, t2, n2 = {}) {\n    if (d$3.validation) {\n      if (!Number.isInteger(e2) || !(e2 >= 0 && e2 <= 127))\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      if (!Number.isInteger(t2) || !(t2 >= 0 && t2 <= 127))\n        throw new RangeError(\"The cents value must be an integer between 0 and 127.\");\n    }\n    return this.sendRpnValue(\"pitchbendrange\", [e2, t2], n2), this;\n  }\n  sendProgramChange(e2, t2 = {}) {\n    if (e2 = parseInt(e2) || 0, d$3.validation && !(e2 >= 0 && e2 <= 127))\n      throw new RangeError(\"The program number must be between 0 and 127.\");\n    return this.send([(n$6.MIDI_CHANNEL_MESSAGES.programchange << 4) + (this.number - 1), e2], { time: r$6.toTimestamp(t2.time) }), this;\n  }\n  sendRpnValue(e2, t2, s2 = {}) {\n    if (Array.isArray(e2) || (e2 = n$6.MIDI_REGISTERED_PARAMETERS[e2]), d$3.validation) {\n      if (!Number.isInteger(e2[0]) || !Number.isInteger(e2[1]))\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      if (!(e2[0] >= 0 && e2[0] <= 127))\n        throw new RangeError(\"The first byte of the RPN must be between 0 and 127.\");\n      if (!(e2[1] >= 0 && e2[1] <= 127))\n        throw new RangeError(\"The second byte of the RPN must be between 0 and 127.\");\n      [].concat(t2).forEach((e3) => {\n        if (!(e3 >= 0 && e3 <= 127))\n          throw new RangeError(\"The data bytes of the RPN must be between 0 and 127.\");\n      });\n    }\n    return this._selectRegisteredParameter(e2, s2), this._setCurrentParameter(t2, s2), this._deselectRegisteredParameter(s2), this;\n  }\n  sendTuningBank(e2, t2 = {}) {\n    if (d$3.validation && (!Number.isInteger(e2) || !(e2 >= 0 && e2 <= 127)))\n      throw new RangeError(\"The tuning bank number must be between 0 and 127.\");\n    return this.sendRpnValue(\"tuningbank\", e2, t2), this;\n  }\n  sendTuningProgram(e2, t2 = {}) {\n    if (d$3.validation && (!Number.isInteger(e2) || !(e2 >= 0 && e2 <= 127)))\n      throw new RangeError(\"The tuning program number must be between 0 and 127.\");\n    return this.sendRpnValue(\"tuningprogram\", e2, t2), this;\n  }\n  sendLocalControl(e2, t2 = {}) {\n    return e2 ? this.sendChannelMode(\"localcontrol\", 127, t2) : this.sendChannelMode(\"localcontrol\", 0, t2);\n  }\n  sendAllNotesOff(e2 = {}) {\n    return this.sendChannelMode(\"allnotesoff\", 0, e2);\n  }\n  sendAllSoundOff(e2 = {}) {\n    return this.sendChannelMode(\"allsoundoff\", 0, e2);\n  }\n  sendResetAllControllers(e2 = {}) {\n    return this.sendChannelMode(\"resetallcontrollers\", 0, e2);\n  }\n  sendPolyphonicMode(e2, t2 = {}) {\n    return e2 === \"mono\" ? this.sendChannelMode(\"monomodeon\", 0, t2) : this.sendChannelMode(\"polymodeon\", 0, t2);\n  }\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(e2) {\n    if (this.validation && (e2 = parseInt(e2), isNaN(e2)))\n      throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    this._octaveOffset = e2;\n  }\n  get output() {\n    return this._output;\n  }\n  get number() {\n    return this._number;\n  }\n}\n/**\n * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).\n * A port is made available by a MIDI device. A MIDI device can advertise several input and output\n * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)\n * property.\n *\n * The `Output` object is automatically instantiated by the library according to the host's MIDI\n * subsystem and should not be directly instantiated.\n *\n * You can access all available `Output` objects by referring to the\n * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as\n * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or\n * [`WebMidi.getOutputById()`](WebMidi#getOutputById).\n *\n * @fires Output#opened\n * @fires Output#disconnected\n * @fires Output#closed\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nclass i$6 extends e$6 {\n  constructor(e2) {\n    super(), this._midiOutput = e2, this._octaveOffset = 0, this.channels = [];\n    for (let e3 = 1; e3 <= 16; e3++)\n      this.channels[e3] = new a$6(this, e3);\n    this._midiOutput.onstatechange = this._onStateChange.bind(this);\n  }\n  async destroy() {\n    this.removeListener(), this.channels.forEach((e2) => e2.destroy()), this.channels = [], this._midiOutput.onstatechange = null, await this.close(), this._midiOutput = null;\n  }\n  _onStateChange(e2) {\n    let t2 = { timestamp: d$3.time };\n    e2.port.connection === \"open\" ? (t2.type = \"opened\", t2.target = this, t2.port = t2.target, this.emit(\"opened\", t2)) : e2.port.connection === \"closed\" && e2.port.state === \"connected\" ? (t2.type = \"closed\", t2.target = this, t2.port = t2.target, this.emit(\"closed\", t2)) : e2.port.connection === \"closed\" && e2.port.state === \"disconnected\" ? (t2.type = \"disconnected\", t2.port = { connection: e2.port.connection, id: e2.port.id, manufacturer: e2.port.manufacturer, name: e2.port.name, state: e2.port.state, type: e2.port.type }, this.emit(\"disconnected\", t2)) : e2.port.connection === \"pending\" && e2.port.state === \"disconnected\" || console.warn(\"This statechange event was not caught:\", e2.port.connection, e2.port.state);\n  }\n  async open() {\n    try {\n      return await this._midiOutput.open(), Promise.resolve(this);\n    } catch (e2) {\n      return Promise.reject(e2);\n    }\n  }\n  async close() {\n    this._midiOutput ? await this._midiOutput.close() : await Promise.resolve();\n  }\n  send(e2, t2 = { time: 0 }, n2 = 0) {\n    if (e2 instanceof h$5 && (e2 = r$6.isNode ? e2.data : e2.rawData), e2 instanceof Uint8Array && r$6.isNode && (e2 = Array.from(e2)), d$3.validation) {\n      if (Array.isArray(e2) || e2 instanceof Uint8Array || (e2 = [e2], Array.isArray(t2) && (e2 = e2.concat(t2)), t2 = isNaN(n2) ? { time: 0 } : { time: n2 }), !(parseInt(e2[0]) >= 128 && parseInt(e2[0]) <= 255))\n        throw new RangeError(\"The first byte (status) must be an integer between 128 and 255.\");\n      e2.slice(1).forEach((e3) => {\n        if (!((e3 = parseInt(e3)) >= 0 && e3 <= 255))\n          throw new RangeError(\"Data bytes must be integers between 0 and 255.\");\n      }), t2 || (t2 = { time: 0 });\n    }\n    return this._midiOutput.send(e2, r$6.toTimestamp(t2.time)), this;\n  }\n  sendSysex(e2, t2 = [], s2 = {}) {\n    if (e2 = [].concat(e2), t2 instanceof Uint8Array) {\n      const r2 = new Uint8Array(1 + e2.length + t2.length + 1);\n      r2[0] = n$6.MIDI_SYSTEM_MESSAGES.sysex, r2.set(Uint8Array.from(e2), 1), r2.set(t2, 1 + e2.length), r2[r2.length - 1] = n$6.MIDI_SYSTEM_MESSAGES.sysexend, this.send(r2, { time: s2.time });\n    } else {\n      const r2 = e2.concat(t2, n$6.MIDI_SYSTEM_MESSAGES.sysexend);\n      this.send([n$6.MIDI_SYSTEM_MESSAGES.sysex].concat(r2), { time: s2.time });\n    }\n    return this;\n  }\n  clear() {\n    return this._midiOutput.clear ? this._midiOutput.clear() : d$3.validation && console.warn(\"The 'clear()' method has not yet been implemented in your environment.\"), this;\n  }\n  sendTimecodeQuarterFrame(e2, t2 = {}) {\n    if (d$3.validation && (e2 = parseInt(e2), isNaN(e2) || !(e2 >= 0 && e2 <= 127)))\n      throw new RangeError(\"The value must be an integer between 0 and 127.\");\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.timecode, e2], { time: t2.time }), this;\n  }\n  sendSongPosition(e2 = 0, t2 = {}) {\n    var s2 = (e2 = Math.floor(e2) || 0) >> 7 & 127, r2 = 127 & e2;\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.songposition, s2, r2], { time: t2.time }), this;\n  }\n  sendSongSelect(e2 = 0, t2 = {}) {\n    if (d$3.validation && (e2 = parseInt(e2), isNaN(e2) || !(e2 >= 0 && e2 <= 127)))\n      throw new RangeError(\"The program value must be between 0 and 127\");\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.songselect, e2], { time: t2.time }), this;\n  }\n  sendTuneRequest(e2 = {}) {\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.tunerequest], { time: e2.time }), this;\n  }\n  sendClock(e2 = {}) {\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.clock], { time: e2.time }), this;\n  }\n  sendStart(e2 = {}) {\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.start], { time: e2.time }), this;\n  }\n  sendContinue(e2 = {}) {\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.continue], { time: e2.time }), this;\n  }\n  sendStop(e2 = {}) {\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.stop], { time: e2.time }), this;\n  }\n  sendActiveSensing(e2 = {}) {\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.activesensing], { time: e2.time }), this;\n  }\n  sendReset(e2 = {}) {\n    return this.send([n$6.MIDI_SYSTEM_MESSAGES.reset], { time: e2.time }), this;\n  }\n  sendTuningRequest(e2 = {}) {\n    return d$3.validation && console.warn(\"The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead.\"), this.sendTuneRequest(e2);\n  }\n  sendKeyAftertouch(e2, t2, s2 = {}) {\n    return s2.channels == null && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(s2.channels).forEach((n2) => {\n      this.channels[n2].sendKeyAftertouch(e2, t2, s2);\n    }), this;\n  }\n  sendControlChange(e2, t2, s2 = {}, a2 = {}) {\n    if (d$3.validation && (Array.isArray(s2) || Number.isInteger(s2) || s2 === \"all\")) {\n      const e3 = s2;\n      (s2 = a2).channels = e3, s2.channels === \"all\" && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return s2.channels == null && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(s2.channels).forEach((n2) => {\n      this.channels[n2].sendControlChange(e2, t2, s2);\n    }), this;\n  }\n  sendPitchBendRange(e2 = 0, t2 = 0, s2 = {}) {\n    return s2.channels == null && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(s2.channels).forEach((n2) => {\n      this.channels[n2].sendPitchBendRange(e2, t2, s2);\n    }), this;\n  }\n  setPitchBendRange(e2 = 0, t2 = 0, s2 = \"all\", r2 = {}) {\n    return d$3.validation && (console.warn(\"The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead.\"), r2.channels = s2, r2.channels === \"all\" && (r2.channels = n$6.MIDI_CHANNEL_NUMBERS)), this.sendPitchBendRange(e2, t2, r2);\n  }\n  sendRpnValue(e2, t2, s2 = {}) {\n    return s2.channels == null && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(s2.channels).forEach((n2) => {\n      this.channels[n2].sendRpnValue(e2, t2, s2);\n    }), this;\n  }\n  setRegisteredParameter(e2, t2 = [], s2 = \"all\", r2 = {}) {\n    return d$3.validation && (console.warn(\"The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead.\"), r2.channels = s2, r2.channels === \"all\" && (r2.channels = n$6.MIDI_CHANNEL_NUMBERS)), this.sendRpnValue(e2, t2, r2);\n  }\n  sendChannelAftertouch(e2, t2 = {}, s2 = {}) {\n    if (d$3.validation && (Array.isArray(t2) || Number.isInteger(t2) || t2 === \"all\")) {\n      const e3 = t2;\n      (t2 = s2).channels = e3, t2.channels === \"all\" && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendChannelAftertouch(e2, t2);\n    }), this;\n  }\n  sendPitchBend(e2, t2 = {}, s2 = {}) {\n    if (d$3.validation && (Array.isArray(t2) || Number.isInteger(t2) || t2 === \"all\")) {\n      const e3 = t2;\n      (t2 = s2).channels = e3, t2.channels === \"all\" && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendPitchBend(e2, t2);\n    }), this;\n  }\n  sendProgramChange(e2 = 0, t2 = {}, s2 = {}) {\n    if (d$3.validation && (Array.isArray(t2) || Number.isInteger(t2) || t2 === \"all\")) {\n      const e3 = t2;\n      (t2 = s2).channels = e3, t2.channels === \"all\" && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendProgramChange(e2, t2);\n    }), this;\n  }\n  sendModulationRange(e2, t2, s2 = {}) {\n    return s2.channels == null && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(s2.channels).forEach((n2) => {\n      this.channels[n2].sendModulationRange(e2, t2, s2);\n    }), this;\n  }\n  setModulationRange(e2 = 0, t2 = 0, s2 = \"all\", r2 = {}) {\n    return d$3.validation && (console.warn(\"The setModulationRange() method is deprecated. Use sendModulationRange() instead.\"), r2.channels = s2, r2.channels === \"all\" && (r2.channels = n$6.MIDI_CHANNEL_NUMBERS)), this.sendModulationRange(e2, t2, r2);\n  }\n  sendMasterTuning(e2, t2 = {}) {\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendMasterTuning(e2, t2);\n    }), this;\n  }\n  setMasterTuning(e2, t2 = {}, s2 = {}) {\n    return d$3.validation && (console.warn(\"The setMasterTuning() method is deprecated. Use sendMasterTuning() instead.\"), s2.channels = t2, s2.channels === \"all\" && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS)), this.sendMasterTuning(e2, s2);\n  }\n  sendTuningProgram(e2, t2 = {}) {\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendTuningProgram(e2, t2);\n    }), this;\n  }\n  setTuningProgram(e2, t2 = \"all\", s2 = {}) {\n    return d$3.validation && (console.warn(\"The setTuningProgram() method is deprecated. Use sendTuningProgram() instead.\"), s2.channels = t2, s2.channels === \"all\" && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS)), this.sendTuningProgram(e2, s2);\n  }\n  sendTuningBank(e2 = 0, t2 = {}) {\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendTuningBank(e2, t2);\n    }), this;\n  }\n  setTuningBank(e2, t2 = \"all\", s2 = {}) {\n    return d$3.validation && (console.warn(\"The setTuningBank() method is deprecated. Use sendTuningBank() instead.\"), s2.channels = t2, s2.channels === \"all\" && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS)), this.sendTuningBank(e2, s2);\n  }\n  sendChannelMode(e2, t2 = 0, s2 = {}, a2 = {}) {\n    if (d$3.validation && (Array.isArray(s2) || Number.isInteger(s2) || s2 === \"all\")) {\n      const e3 = s2;\n      (s2 = a2).channels = e3, s2.channels === \"all\" && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return s2.channels == null && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(s2.channels).forEach((n2) => {\n      this.channels[n2].sendChannelMode(e2, t2, s2);\n    }), this;\n  }\n  sendAllSoundOff(e2 = {}) {\n    return e2.channels == null && (e2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(e2.channels).forEach((t2) => {\n      this.channels[t2].sendAllSoundOff(e2);\n    }), this;\n  }\n  sendAllNotesOff(e2 = {}) {\n    return e2.channels == null && (e2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(e2.channels).forEach((t2) => {\n      this.channels[t2].sendAllNotesOff(e2);\n    }), this;\n  }\n  sendResetAllControllers(e2 = {}, t2 = {}) {\n    if (d$3.validation && (Array.isArray(e2) || Number.isInteger(e2) || e2 === \"all\")) {\n      const s2 = e2;\n      (e2 = t2).channels = s2, e2.channels === \"all\" && (e2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return e2.channels == null && (e2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(e2.channels).forEach((t3) => {\n      this.channels[t3].sendResetAllControllers(e2);\n    }), this;\n  }\n  sendPolyphonicMode(e2, t2 = {}, s2 = {}) {\n    if (d$3.validation && (Array.isArray(t2) || Number.isInteger(t2) || t2 === \"all\")) {\n      const e3 = t2;\n      (t2 = s2).channels = e3, t2.channels === \"all\" && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendPolyphonicMode(e2, t2);\n    }), this;\n  }\n  sendLocalControl(e2, t2 = {}, s2 = {}) {\n    if (d$3.validation && (Array.isArray(t2) || Number.isInteger(t2) || t2 === \"all\")) {\n      const e3 = t2;\n      (t2 = s2).channels = e3, t2.channels === \"all\" && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendLocalControl(e2, t2);\n    }), this;\n  }\n  sendOmniMode(e2, t2 = {}, s2 = {}) {\n    if (d$3.validation && (Array.isArray(t2) || Number.isInteger(t2) || t2 === \"all\")) {\n      const e3 = t2;\n      (t2 = s2).channels = e3, t2.channels === \"all\" && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendOmniMode(e2, t2);\n    }), this;\n  }\n  sendNrpnValue(e2, t2, s2 = {}) {\n    return s2.channels == null && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(s2.channels).forEach((n2) => {\n      this.channels[n2].sendNrpnValue(e2, t2, s2);\n    }), this;\n  }\n  setNonRegisteredParameter(e2, t2 = [], s2 = \"all\", r2 = {}) {\n    return d$3.validation && (console.warn(\"The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead.\"), r2.channels = s2, r2.channels === \"all\" && (r2.channels = n$6.MIDI_CHANNEL_NUMBERS)), this.sendNrpnValue(e2, t2, r2);\n  }\n  sendRpnIncrement(e2, t2 = {}) {\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendRpnIncrement(e2, t2);\n    }), this;\n  }\n  incrementRegisteredParameter(e2, t2 = \"all\", s2 = {}) {\n    return d$3.validation && (console.warn(\"The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead.\"), s2.channels = t2, s2.channels === \"all\" && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS)), this.sendRpnIncrement(e2, s2);\n  }\n  sendRpnDecrement(e2, t2 = {}) {\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendRpnDecrement(e2, t2);\n    }), this;\n  }\n  decrementRegisteredParameter(e2, t2 = \"all\", s2 = {}) {\n    return d$3.validation && (console.warn(\"The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead.\"), s2.channels = t2, s2.channels === \"all\" && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS)), this.sendRpnDecrement(e2, s2);\n  }\n  sendNoteOff(e2, t2 = {}, s2 = {}) {\n    if (d$3.validation && (Array.isArray(t2) || Number.isInteger(t2) || t2 === \"all\")) {\n      const e3 = t2;\n      (t2 = s2).channels = e3, t2.channels === \"all\" && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendNoteOff(e2, t2);\n    }), this;\n  }\n  stopNote(e2, t2) {\n    return this.sendNoteOff(e2, t2);\n  }\n  playNote(e2, t2 = {}, s2 = {}) {\n    if (d$3.validation && (t2.rawVelocity && console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' instead.\"), t2.velocity && console.warn(\"The 'velocity' option is deprecated. Use 'velocity' instead.\"), Array.isArray(t2) || Number.isInteger(t2) || t2 === \"all\")) {\n      const e3 = t2;\n      (t2 = s2).channels = e3, t2.channels === \"all\" && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].playNote(e2, t2);\n    }), this;\n  }\n  sendNoteOn(e2, t2 = {}, s2 = {}) {\n    if (d$3.validation && (Array.isArray(t2) || Number.isInteger(t2) || t2 === \"all\")) {\n      const e3 = t2;\n      (t2 = s2).channels = e3, t2.channels === \"all\" && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n    }\n    return t2.channels == null && (t2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(t2.channels).forEach((n2) => {\n      this.channels[n2].sendNoteOn(e2, t2);\n    }), this;\n  }\n  get name() {\n    return this._midiOutput.name;\n  }\n  get id() {\n    return this._midiOutput.id;\n  }\n  get connection() {\n    return this._midiOutput.connection;\n  }\n  get manufacturer() {\n    return this._midiOutput.manufacturer;\n  }\n  get state() {\n    return this._midiOutput.state;\n  }\n  get type() {\n    return this._midiOutput.type;\n  }\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(e2) {\n    if (this.validation && (e2 = parseInt(e2), isNaN(e2)))\n      throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    this._octaveOffset = e2;\n  }\n}\n/**\n * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you\n * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object\n * to all the outputs listed in its [`destinations`](#destinations) property.\n *\n * If specific channels or message types have been defined in the [`channels`](#channels) or\n * [`types`](#types) properties, only messages matching the channels/types will be forwarded.\n *\n * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as\n * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass o$6 {\n  constructor(e2 = [], t2 = {}) {\n    this.destinations = [], this.types = [...Object.keys(n$6.MIDI_SYSTEM_MESSAGES), ...Object.keys(n$6.MIDI_CHANNEL_MESSAGES)], this.channels = n$6.MIDI_CHANNEL_NUMBERS, this.suspended = false, Array.isArray(e2) || (e2 = [e2]), t2.types && !Array.isArray(t2.types) && (t2.types = [t2.types]), t2.channels && !Array.isArray(t2.channels) && (t2.channels = [t2.channels]), d$3.validation && (e2.forEach((e3) => {\n      if (!(e3 instanceof i$6))\n        throw new TypeError(\"Destinations must be of type 'Output'.\");\n    }), t2.types !== void 0 && t2.types.forEach((e3) => {\n      if (!n$6.MIDI_SYSTEM_MESSAGES.hasOwnProperty(e3) && !n$6.MIDI_CHANNEL_MESSAGES.hasOwnProperty(e3))\n        throw new TypeError(\"Type must be a valid message type.\");\n    }), t2.channels !== void 0 && t2.channels.forEach((e3) => {\n      if (!n$6.MIDI_CHANNEL_NUMBERS.includes(e3))\n        throw new TypeError(\"MIDI channel must be between 1 and 16.\");\n    })), this.destinations = e2, t2.types && (this.types = t2.types), t2.channels && (this.channels = t2.channels);\n  }\n  forward(e2) {\n    this.suspended || this.types.includes(e2.type) && (e2.channel && !this.channels.includes(e2.channel) || this.destinations.forEach((t2) => {\n      (!d$3.validation || t2 instanceof i$6) && t2.send(e2);\n    }));\n  }\n}\n/**\n * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input\n * device. This object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)\n * property.\n *\n * @fires InputChannel#midimessage\n * @fires InputChannel#unknownmessage\n *\n * @fires InputChannel#noteoff\n * @fires InputChannel#noteon\n * @fires InputChannel#keyaftertouch\n * @fires InputChannel#programchange\n * @fires InputChannel#event:controlchange-controllerxxx\n * @fires InputChannel#channelaftertouch\n * @fires InputChannel#pitchbend\n * @fires InputChannel#controlchange\n *\n * @fires InputChannel#allnotesoff\n * @fires InputChannel#allsoundoff\n * @fires InputChannel#localcontrol\n * @fires InputChannel#monomode\n * @fires InputChannel#omnimode\n * @fires InputChannel#resetallcontrollers\n *\n * @fires InputChannel#event:nrpn\n * @fires InputChannel#event:nrpn-dataentrycoarse\n * @fires InputChannel#event:nrpn-dataentryfine\n * @fires InputChannel#event:nrpn-databuttonincrement\n * @fires InputChannel#event:nrpn-databuttondecrement\n * @fires InputChannel#event:rpn\n * @fires InputChannel#event:rpn-dataentrycoarse\n * @fires InputChannel#event:rpn-dataentryfine\n * @fires InputChannel#event:rpn-databuttonincrement\n * @fires InputChannel#event:rpn-databuttondecrement\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass l$3 extends e$6 {\n  constructor(e2, t2) {\n    super(), this._input = e2, this._number = t2, this._octaveOffset = 0, this._nrpnBuffer = [], this._rpnBuffer = [], this.parameterNumberEventsEnabled = true, this.notesState = new Array(128).fill(false);\n  }\n  destroy() {\n    this._input = null, this._number = null, this._octaveOffset = 0, this._nrpnBuffer = [], this.notesState = new Array(128).fill(false), this.parameterNumberEventsEnabled = false, this.removeListener();\n  }\n  _processMidiMessageEvent(e2) {\n    const t2 = Object.assign({}, e2);\n    t2.port = this.input, t2.target = this, t2.type = \"midimessage\", this.emit(t2.type, t2), this._parseEventForStandardMessages(t2);\n  }\n  _parseEventForStandardMessages(e2) {\n    const t2 = Object.assign({}, e2);\n    t2.type = t2.message.type || \"unknownmessage\";\n    const n2 = e2.message.dataBytes[0], a2 = e2.message.dataBytes[1];\n    if (t2.type === \"noteoff\" || t2.type === \"noteon\" && a2 === 0)\n      this.notesState[n2] = false, t2.type = \"noteoff\", t2.note = new s$2(r$6.offsetNumber(n2, this.octaveOffset + this.input.octaveOffset + d$3.octaveOffset), { rawAttack: 0, rawRelease: a2 }), t2.value = r$6.from7bitToFloat(a2), t2.rawValue = a2, t2.velocity = t2.note.release, t2.rawVelocity = t2.note.rawRelease;\n    else if (t2.type === \"noteon\")\n      this.notesState[n2] = true, t2.note = new s$2(r$6.offsetNumber(n2, this.octaveOffset + this.input.octaveOffset + d$3.octaveOffset), { rawAttack: a2 }), t2.value = r$6.from7bitToFloat(a2), t2.rawValue = a2, t2.velocity = t2.note.attack, t2.rawVelocity = t2.note.rawAttack;\n    else if (t2.type === \"keyaftertouch\")\n      t2.note = new s$2(r$6.offsetNumber(n2, this.octaveOffset + this.input.octaveOffset + d$3.octaveOffset)), t2.value = r$6.from7bitToFloat(a2), t2.rawValue = a2, t2.identifier = t2.note.identifier, t2.key = t2.note.number, t2.rawKey = n2;\n    else if (t2.type === \"controlchange\") {\n      t2.controller = { number: n2, name: r$6.getCcNameByNumber(n2) }, t2.subtype = t2.controller.name || \"controller\" + n2, t2.value = r$6.from7bitToFloat(a2), t2.rawValue = a2;\n      const e3 = Object.assign({}, t2);\n      e3.type = `${t2.type}-controller${n2}`, delete e3.subtype, this.emit(e3.type, e3), t2.message.dataBytes[0] >= 120 && this._parseChannelModeMessage(t2), this.parameterNumberEventsEnabled && this._isRpnOrNrpnController(t2.message.dataBytes[0]) && this._parseEventForParameterNumber(t2);\n    } else\n      t2.type === \"programchange\" ? (t2.value = n2, t2.rawValue = t2.value) : t2.type === \"channelaftertouch\" ? (t2.value = r$6.from7bitToFloat(n2), t2.rawValue = n2) : t2.type === \"pitchbend\" ? (t2.value = ((a2 << 7) + n2 - 8192) / 8192, t2.rawValue = (a2 << 7) + n2) : t2.type = \"unknownmessage\";\n    this.emit(t2.type, t2);\n  }\n  _parseChannelModeMessage(e2) {\n    const t2 = Object.assign({}, e2);\n    t2.type = t2.controller.name, t2.type === \"localcontrol\" && (t2.value = t2.message.data[2] === 127, t2.rawValue = t2.message.data[2]), t2.type === \"omnimodeon\" ? (t2.type = \"omnimode\", t2.value = true, t2.rawValue = t2.message.data[2]) : t2.type === \"omnimodeoff\" && (t2.type = \"omnimode\", t2.value = false, t2.rawValue = t2.message.data[2]), t2.type === \"monomodeon\" ? (t2.type = \"monomode\", t2.value = true, t2.rawValue = t2.message.data[2]) : t2.type === \"polymodeon\" && (t2.type = \"monomode\", t2.value = false, t2.rawValue = t2.message.data[2]), this.emit(t2.type, t2);\n  }\n  _parseEventForParameterNumber(e2) {\n    const t2 = e2.message.dataBytes[0], s2 = e2.message.dataBytes[1], r2 = n$6.MIDI_CONTROL_CHANGE_MESSAGES;\n    t2 === r2.nonregisteredparameterfine || t2 === r2.registeredparameterfine ? (this._nrpnBuffer = [], this._rpnBuffer = [], t2 === r2.nonregisteredparameterfine ? this._nrpnBuffer = [e2.message] : s2 !== 127 && (this._rpnBuffer = [e2.message])) : t2 === r2.nonregisteredparametercoarse || t2 === r2.registeredparametercoarse ? t2 === r2.nonregisteredparametercoarse ? (this._rpnBuffer = [], this._nrpnBuffer.length === 1 ? this._nrpnBuffer.push(e2.message) : this._nrpnBuffer = []) : (this._nrpnBuffer = [], this._rpnBuffer.length === 1 && s2 !== 127 ? this._rpnBuffer.push(e2.message) : this._rpnBuffer = []) : t2 !== r2.dataentrycoarse && t2 !== r2.dataentryfine && t2 !== r2.databuttonincrement && t2 !== r2.databuttondecrement || (this._rpnBuffer.length === 2 ? this._dispatchParameterNumberEvent(\"rpn\", this._rpnBuffer[0].dataBytes[1], this._rpnBuffer[1].dataBytes[1], e2) : this._nrpnBuffer.length === 2 ? this._dispatchParameterNumberEvent(\"nrpn\", this._nrpnBuffer[0].dataBytes[1], this._nrpnBuffer[1].dataBytes[1], e2) : (this._nrpnBuffer = [], this._rpnBuffer = []));\n  }\n  _isRpnOrNrpnController(e2) {\n    return e2 === n$6.MIDI_CONTROL_CHANGE_MESSAGES.dataentrycoarse || e2 === n$6.MIDI_CONTROL_CHANGE_MESSAGES.dataentryfine || e2 === n$6.MIDI_CONTROL_CHANGE_MESSAGES.databuttonincrement || e2 === n$6.MIDI_CONTROL_CHANGE_MESSAGES.databuttondecrement || e2 === n$6.MIDI_CONTROL_CHANGE_MESSAGES.nonregisteredparametercoarse || e2 === n$6.MIDI_CONTROL_CHANGE_MESSAGES.nonregisteredparameterfine || e2 === n$6.MIDI_CONTROL_CHANGE_MESSAGES.registeredparametercoarse || e2 === n$6.MIDI_CONTROL_CHANGE_MESSAGES.registeredparameterfine;\n  }\n  _dispatchParameterNumberEvent(e2, t2, s2, a2) {\n    e2 = e2 === \"nrpn\" ? \"nrpn\" : \"rpn\";\n    const i2 = { target: a2.target, timestamp: a2.timestamp, message: a2.message, parameterMsb: t2, parameterLsb: s2, value: r$6.from7bitToFloat(a2.message.dataBytes[1]), rawValue: a2.message.dataBytes[1] };\n    i2.parameter = e2 === \"rpn\" ? Object.keys(n$6.MIDI_REGISTERED_PARAMETERS).find((e3) => n$6.MIDI_REGISTERED_PARAMETERS[e3][0] === t2 && n$6.MIDI_REGISTERED_PARAMETERS[e3][1] === s2) : (t2 << 7) + s2;\n    const o2 = r$6.getPropertyByValue(n$6.MIDI_CONTROL_CHANGE_MESSAGES, a2.message.dataBytes[0]);\n    i2.type = `${e2}-${o2}`, this.emit(i2.type, i2), i2.type = e2, i2.subtype = o2, this.emit(i2.type, i2);\n  }\n  getChannelModeByNumber(e2) {\n    return d$3.validation && (console.warn(\"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\"), e2 = Math.floor(e2)), r$6.getChannelModeByNumber(e2);\n  }\n  getCcNameByNumber(e2) {\n    if (d$3.validation && (console.warn(\"The 'getCcNameByNumber()' method has been moved to the 'Utilities' class.\"), !((e2 = parseInt(e2)) >= 0 && e2 <= 127)))\n      throw new RangeError(\"Invalid control change number.\");\n    return r$6.getCcNameByNumber(e2);\n  }\n  getNoteState(e2) {\n    e2 instanceof s$2 && (e2 = e2.identifier);\n    const t2 = r$6.guessNoteNumber(e2, d$3.octaveOffset + this.input.octaveOffset + this.octaveOffset);\n    return this.notesState[t2];\n  }\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(e2) {\n    if (this.validation && (e2 = parseInt(e2), isNaN(e2)))\n      throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    this._octaveOffset = e2;\n  }\n  get input() {\n    return this._input;\n  }\n  get number() {\n    return this._number;\n  }\n  get nrpnEventsEnabled() {\n    return this.parameterNumberEventsEnabled;\n  }\n  set nrpnEventsEnabled(e2) {\n    this.validation && (e2 = !!e2), this.parameterNumberEventsEnabled = e2;\n  }\n}\n/**\n * The `Message` class represents a single MIDI message. It has several properties that make it\n * easy to make sense of the binary data it contains.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass h$5 {\n  constructor(e2) {\n    this.rawData = e2, this.data = Array.from(this.rawData), this.statusByte = this.rawData[0], this.rawDataBytes = this.rawData.slice(1), this.dataBytes = this.data.slice(1), this.isChannelMessage = false, this.isSystemMessage = false, this.command = void 0, this.channel = void 0, this.manufacturerId = void 0, this.type = void 0, this.statusByte < 240 ? (this.isChannelMessage = true, this.command = this.statusByte >> 4, this.channel = 1 + (15 & this.statusByte)) : (this.isSystemMessage = true, this.command = this.statusByte), this.isChannelMessage ? this.type = r$6.getPropertyByValue(n$6.MIDI_CHANNEL_MESSAGES, this.command) : this.isSystemMessage && (this.type = r$6.getPropertyByValue(n$6.MIDI_SYSTEM_MESSAGES, this.command)), this.statusByte === n$6.MIDI_SYSTEM_MESSAGES.sysex && (this.dataBytes[0] === 0 ? (this.manufacturerId = this.dataBytes.slice(0, 3), this.dataBytes = this.dataBytes.slice(3, this.rawDataBytes.length - 1), this.rawDataBytes = this.rawDataBytes.slice(3, this.rawDataBytes.length - 1)) : (this.manufacturerId = [this.dataBytes[0]], this.dataBytes = this.dataBytes.slice(1, this.dataBytes.length - 1), this.rawDataBytes = this.rawDataBytes.slice(1, this.rawDataBytes.length - 1)));\n  }\n}\n/**\n * The `Input` class represents a single MIDI input port. This object is automatically instantiated\n * by the library according to the host's MIDI subsystem and does not need to be directly\n * instantiated. Instead, you can access all `Input` objects by referring to the\n * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as\n * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and\n * [`WebMidi.getInputById()`](WebMidi#getInputById).\n *\n * Note that a single MIDI device may expose several inputs and/or outputs.\n *\n * **Important**: the `Input` class does not directly fire channel-specific MIDI messages\n * (such as [`noteon`](InputChannel#event:noteon) or\n * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)\n * object does that. However, you can still use the\n * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple\n * [`InputChannel`](InputChannel) objects at once.\n *\n * @fires Input#opened\n * @fires Input#disconnected\n * @fires Input#closed\n * @fires Input#midimessage\n *\n * @fires Input#sysex\n * @fires Input#timecode\n * @fires Input#songposition\n * @fires Input#songselect\n * @fires Input#tunerequest\n * @fires Input#clock\n * @fires Input#start\n * @fires Input#continue\n * @fires Input#stop\n * @fires Input#activesensing\n * @fires Input#reset\n *\n * @fires Input#unknownmidimessage\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nclass c$4 extends e$6 {\n  constructor(e2) {\n    super(), this._midiInput = e2, this._octaveOffset = 0, this.channels = [];\n    for (let e3 = 1; e3 <= 16; e3++)\n      this.channels[e3] = new l$3(this, e3);\n    this._forwarders = [], this._midiInput.onstatechange = this._onStateChange.bind(this), this._midiInput.onmidimessage = this._onMidiMessage.bind(this);\n  }\n  async destroy() {\n    this.removeListener(), this.channels.forEach((e2) => e2.destroy()), this.channels = [], this._forwarders = [], this._midiInput && (this._midiInput.onstatechange = null, this._midiInput.onmidimessage = null), await this.close(), this._midiInput = null;\n  }\n  _onStateChange(e2) {\n    let t2 = { timestamp: d$3.time, target: this, port: this };\n    e2.port.connection === \"open\" ? (t2.type = \"opened\", this.emit(\"opened\", t2)) : e2.port.connection === \"closed\" && e2.port.state === \"connected\" ? (t2.type = \"closed\", this.emit(\"closed\", t2)) : e2.port.connection === \"closed\" && e2.port.state === \"disconnected\" ? (t2.type = \"disconnected\", t2.port = { connection: e2.port.connection, id: e2.port.id, manufacturer: e2.port.manufacturer, name: e2.port.name, state: e2.port.state, type: e2.port.type }, this.emit(\"disconnected\", t2)) : e2.port.connection === \"pending\" && e2.port.state === \"disconnected\" || console.warn(\"This statechange event was not caught: \", e2.port.connection, e2.port.state);\n  }\n  _onMidiMessage(e2) {\n    const t2 = new h$5(e2.data), n2 = { port: this, target: this, message: t2, timestamp: e2.timeStamp, type: \"midimessage\", data: t2.data, rawData: t2.data, statusByte: t2.data[0], dataBytes: t2.dataBytes };\n    this.emit(\"midimessage\", n2), t2.isSystemMessage ? this._parseEvent(n2) : t2.isChannelMessage && this.channels[t2.channel]._processMidiMessageEvent(n2), this._forwarders.forEach((e3) => e3.forward(t2));\n  }\n  _parseEvent(e2) {\n    const t2 = Object.assign({}, e2);\n    t2.type = t2.message.type || \"unknownmidimessage\", t2.type === \"songselect\" && (t2.song = e2.data[1] + 1, t2.value = e2.data[1], t2.rawValue = t2.value), this.emit(t2.type, t2);\n  }\n  async open() {\n    try {\n      await this._midiInput.open();\n    } catch (e2) {\n      return Promise.reject(e2);\n    }\n    return Promise.resolve(this);\n  }\n  async close() {\n    if (!this._midiInput)\n      return Promise.resolve(this);\n    try {\n      await this._midiInput.close();\n    } catch (e2) {\n      return Promise.reject(e2);\n    }\n    return Promise.resolve(this);\n  }\n  getChannelModeByNumber() {\n    d$3.validation && console.warn(\"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\");\n  }\n  addListener(e2, t2, s2 = {}) {\n    if (d$3.validation && typeof s2 == \"function\") {\n      let e3 = t2 != null ? [].concat(t2) : void 0;\n      t2 = s2, s2 = { channels: e3 };\n    }\n    if (n$6.CHANNEL_EVENTS.includes(e2)) {\n      s2.channels === void 0 && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS);\n      let a2 = [];\n      return r$6.sanitizeChannels(s2.channels).forEach((n2) => {\n        a2.push(this.channels[n2].addListener(e2, t2, s2));\n      }), a2;\n    }\n    return super.addListener(e2, t2, s2);\n  }\n  addOneTimeListener(e2, t2, n2 = {}) {\n    return n2.remaining = 1, this.addListener(e2, t2, n2);\n  }\n  on(e2, t2, n2, s2) {\n    return this.addListener(e2, t2, n2, s2);\n  }\n  hasListener(e2, t2, s2 = {}) {\n    if (d$3.validation && typeof s2 == \"function\") {\n      let e3 = [].concat(t2);\n      t2 = s2, s2 = { channels: e3 };\n    }\n    return n$6.CHANNEL_EVENTS.includes(e2) ? (s2.channels === void 0 && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS), r$6.sanitizeChannels(s2.channels).every((n2) => this.channels[n2].hasListener(e2, t2))) : super.hasListener(e2, t2);\n  }\n  removeListener(e2, t2, s2 = {}) {\n    if (d$3.validation && typeof s2 == \"function\") {\n      let e3 = [].concat(t2);\n      t2 = s2, s2 = { channels: e3 };\n    }\n    if (s2.channels === void 0 && (s2.channels = n$6.MIDI_CHANNEL_NUMBERS), e2 == null)\n      return r$6.sanitizeChannels(s2.channels).forEach((e3) => {\n        this.channels[e3] && this.channels[e3].removeListener();\n      }), super.removeListener();\n    n$6.CHANNEL_EVENTS.includes(e2) ? r$6.sanitizeChannels(s2.channels).forEach((n2) => {\n      this.channels[n2].removeListener(e2, t2, s2);\n    }) : super.removeListener(e2, t2, s2);\n  }\n  addForwarder(e2, t2 = {}) {\n    let n2;\n    return n2 = e2 instanceof o$6 ? e2 : new o$6(e2, t2), this._forwarders.push(n2), n2;\n  }\n  removeForwarder(e2) {\n    this._forwarders = this._forwarders.filter((t2) => t2 !== e2);\n  }\n  hasForwarder(e2) {\n    return this._forwarders.includes(e2);\n  }\n  get name() {\n    return this._midiInput.name;\n  }\n  get id() {\n    return this._midiInput.id;\n  }\n  get connection() {\n    return this._midiInput.connection;\n  }\n  get manufacturer() {\n    return this._midiInput.manufacturer;\n  }\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(e2) {\n    if (this.validation && (e2 = parseInt(e2), isNaN(e2)))\n      throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    this._octaveOffset = e2;\n  }\n  get state() {\n    return this._midiInput.state;\n  }\n  get type() {\n    return this._midiInput.type;\n  }\n  get nrpnEventsEnabled() {\n    return d$3.validation && console.warn(\"The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class.\"), false;\n  }\n}\n/**\n * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it\n * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.\n *\n * When using the WebMidi.js library, you should know that the `WebMidi` class has already been\n * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should\n * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6\n * module) version, you get an already-instantiated object when you import the module.\n *\n * @fires WebMidi#connected\n * @fires WebMidi#disabled\n * @fires WebMidi#disconnected\n * @fires WebMidi#enabled\n * @fires WebMidi#error\n * @fires WebMidi#midiaccessgranted\n * @fires WebMidi#portschanged\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nconst d$3 = new class extends e$6 {\n  constructor() {\n    super(), this.defaults = { note: { attack: r$6.from7bitToFloat(64), release: r$6.from7bitToFloat(64), duration: 1 / 0 } }, this.interface = null, this.validation = true, this._inputs = [], this._disconnectedInputs = [], this._outputs = [], this._disconnectedOutputs = [], this._stateChangeQueue = [], this._octaveOffset = 0;\n  }\n  async enable(e2 = {}, t2 = false) {\n    if (r$6.isNode) {\n      try {\n        window.navigator;\n      } catch (e3) {\n        global.navigator = await Object.getPrototypeOf(async function() {\n        }).constructor('\\n        let jzz = await import(\"jzz\");\\n        return jzz.default;\\n        ')();\n      }\n      try {\n        performance;\n      } catch (e3) {\n        global.performance = await Object.getPrototypeOf(async function() {\n        }).constructor('\\n        let perf_hooks = await import(\"perf_hooks\");\\n        return perf_hooks.performance;\\n        ')();\n      }\n    }\n    if (this.validation = e2.validation !== false, this.validation && (typeof e2 == \"function\" && (e2 = { callback: e2, sysex: t2 }), t2 && (e2.sysex = true)), this.enabled)\n      return typeof e2.callback == \"function\" && e2.callback(), Promise.resolve();\n    const n2 = { timestamp: this.time, target: this, type: \"error\", error: void 0 }, s2 = { timestamp: this.time, target: this, type: \"midiaccessgranted\" }, a2 = { timestamp: this.time, target: this, type: \"enabled\" };\n    try {\n      typeof e2.requestMIDIAccessFunction == \"function\" ? this.interface = await e2.requestMIDIAccessFunction({ sysex: e2.sysex, software: e2.software }) : this.interface = await navigator.requestMIDIAccess({ sysex: e2.sysex, software: e2.software });\n    } catch (t3) {\n      return n2.error = t3, this.emit(\"error\", n2), typeof e2.callback == \"function\" && e2.callback(t3), Promise.reject(t3);\n    }\n    this.emit(\"midiaccessgranted\", s2), this.interface.onstatechange = this._onInterfaceStateChange.bind(this);\n    try {\n      await this._updateInputsAndOutputs();\n    } catch (t3) {\n      return n2.error = t3, this.emit(\"error\", n2), typeof e2.callback == \"function\" && e2.callback(t3), Promise.reject(t3);\n    }\n    return this.emit(\"enabled\", a2), typeof e2.callback == \"function\" && e2.callback(), Promise.resolve(this);\n  }\n  async disable() {\n    return this._destroyInputsAndOutputs().then(() => {\n      navigator && typeof navigator.close == \"function\" && navigator.close(), this.interface && (this.interface.onstatechange = void 0), this.interface = null;\n      let e2 = { timestamp: this.time, target: this, type: \"disabled\" };\n      this.emit(\"disabled\", e2), this.removeListener();\n    });\n  }\n  getInputById(e2, t2 = { disconnected: false }) {\n    if (this.validation) {\n      if (!this.enabled)\n        throw new Error(\"WebMidi is not enabled.\");\n      if (!e2)\n        return;\n    }\n    if (t2.disconnected) {\n      for (let t3 = 0; t3 < this._disconnectedInputs.length; t3++)\n        if (this._disconnectedInputs[t3].id === e2.toString())\n          return this._disconnectedInputs[t3];\n    } else\n      for (let t3 = 0; t3 < this.inputs.length; t3++)\n        if (this.inputs[t3].id === e2.toString())\n          return this.inputs[t3];\n  }\n  getInputByName(e2, t2 = { disconnected: false }) {\n    if (this.validation) {\n      if (!this.enabled)\n        throw new Error(\"WebMidi is not enabled.\");\n      if (!e2)\n        return;\n      e2 = e2.toString();\n    }\n    if (t2.disconnected) {\n      for (let t3 = 0; t3 < this._disconnectedInputs.length; t3++)\n        if (~this._disconnectedInputs[t3].name.indexOf(e2))\n          return this._disconnectedInputs[t3];\n    } else\n      for (let t3 = 0; t3 < this.inputs.length; t3++)\n        if (~this.inputs[t3].name.indexOf(e2))\n          return this.inputs[t3];\n  }\n  getOutputByName(e2, t2 = { disconnected: false }) {\n    if (this.validation) {\n      if (!this.enabled)\n        throw new Error(\"WebMidi is not enabled.\");\n      if (!e2)\n        return;\n      e2 = e2.toString();\n    }\n    if (t2.disconnected) {\n      for (let t3 = 0; t3 < this._disconnectedOutputs.length; t3++)\n        if (~this._disconnectedOutputs[t3].name.indexOf(e2))\n          return this._disconnectedOutputs[t3];\n    } else\n      for (let t3 = 0; t3 < this.outputs.length; t3++)\n        if (~this.outputs[t3].name.indexOf(e2))\n          return this.outputs[t3];\n  }\n  getOutputById(e2, t2 = { disconnected: false }) {\n    if (this.validation) {\n      if (!this.enabled)\n        throw new Error(\"WebMidi is not enabled.\");\n      if (!e2)\n        return;\n    }\n    if (t2.disconnected) {\n      for (let t3 = 0; t3 < this._disconnectedOutputs.length; t3++)\n        if (this._disconnectedOutputs[t3].id === e2.toString())\n          return this._disconnectedOutputs[t3];\n    } else\n      for (let t3 = 0; t3 < this.outputs.length; t3++)\n        if (this.outputs[t3].id === e2.toString())\n          return this.outputs[t3];\n  }\n  noteNameToNumber(e2) {\n    return this.validation && console.warn(\"The noteNameToNumber() method is deprecated. Use Utilities.toNoteNumber() instead.\"), r$6.toNoteNumber(e2, this.octaveOffset);\n  }\n  getOctave(e2) {\n    return this.validation && (console.warn(\"The getOctave()is deprecated. Use Utilities.getNoteDetails() instead\"), e2 = parseInt(e2)), !isNaN(e2) && e2 >= 0 && e2 <= 127 && r$6.getNoteDetails(r$6.offsetNumber(e2, this.octaveOffset)).octave;\n  }\n  sanitizeChannels(e2) {\n    return this.validation && console.warn(\"The sanitizeChannels() method has been moved to the utilities class.\"), r$6.sanitizeChannels(e2);\n  }\n  toMIDIChannels(e2) {\n    return this.validation && console.warn(\"The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead.\"), r$6.sanitizeChannels(e2);\n  }\n  guessNoteNumber(e2) {\n    return this.validation && console.warn(\"The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead.\"), r$6.guessNoteNumber(e2, this.octaveOffset);\n  }\n  getValidNoteArray(e2, t2 = {}) {\n    return this.validation && console.warn(\"The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()\"), r$6.buildNoteArray(e2, t2);\n  }\n  convertToTimestamp(e2) {\n    return this.validation && console.warn(\"The convertToTimestamp() method has been moved to Utilities.toTimestamp().\"), r$6.toTimestamp(e2);\n  }\n  async _destroyInputsAndOutputs() {\n    let e2 = [];\n    return this.inputs.forEach((t2) => e2.push(t2.destroy())), this.outputs.forEach((t2) => e2.push(t2.destroy())), Promise.all(e2).then(() => {\n      this._inputs = [], this._outputs = [];\n    });\n  }\n  _onInterfaceStateChange(e2) {\n    this._updateInputsAndOutputs();\n    let t2 = { timestamp: e2.timeStamp, type: e2.port.state, target: this };\n    if (e2.port.state === \"connected\" && e2.port.connection === \"open\") {\n      e2.port.type === \"output\" ? t2.port = this.getOutputById(e2.port.id) : e2.port.type === \"input\" && (t2.port = this.getInputById(e2.port.id)), this.emit(e2.port.state, t2);\n      const n2 = Object.assign({}, t2);\n      n2.type = \"portschanged\", this.emit(n2.type, n2);\n    } else if (e2.port.state === \"disconnected\" && e2.port.connection === \"pending\") {\n      e2.port.type === \"input\" ? t2.port = this.getInputById(e2.port.id, { disconnected: true }) : e2.port.type === \"output\" && (t2.port = this.getOutputById(e2.port.id, { disconnected: true })), this.emit(e2.port.state, t2);\n      const n2 = Object.assign({}, t2);\n      n2.type = \"portschanged\", this.emit(n2.type, n2);\n    }\n  }\n  async _updateInputsAndOutputs() {\n    return Promise.all([this._updateInputs(), this._updateOutputs()]);\n  }\n  async _updateInputs() {\n    if (!this.interface)\n      return;\n    for (let e3 = this._inputs.length - 1; e3 >= 0; e3--) {\n      const t2 = this._inputs[e3];\n      Array.from(this.interface.inputs.values()).find((e4) => e4 === t2._midiInput) || (this._disconnectedInputs.push(t2), this._inputs.splice(e3, 1));\n    }\n    let e2 = [];\n    return this.interface.inputs.forEach((t2) => {\n      if (!this._inputs.find((e3) => e3._midiInput === t2)) {\n        let n2 = this._disconnectedInputs.find((e3) => e3._midiInput === t2);\n        n2 || (n2 = new c$4(t2)), this._inputs.push(n2), e2.push(n2.open());\n      }\n    }), Promise.all(e2);\n  }\n  async _updateOutputs() {\n    if (!this.interface)\n      return;\n    for (let e3 = this._outputs.length - 1; e3 >= 0; e3--) {\n      const t2 = this._outputs[e3];\n      Array.from(this.interface.outputs.values()).find((e4) => e4 === t2._midiOutput) || (this._disconnectedOutputs.push(t2), this._outputs.splice(e3, 1));\n    }\n    let e2 = [];\n    return this.interface.outputs.forEach((t2) => {\n      if (!this._outputs.find((e3) => e3._midiOutput === t2)) {\n        let n2 = this._disconnectedOutputs.find((e3) => e3._midiOutput === t2);\n        n2 || (n2 = new i$6(t2)), this._outputs.push(n2), e2.push(n2.open());\n      }\n    }), Promise.all(e2);\n  }\n  get enabled() {\n    return this.interface !== null;\n  }\n  get inputs() {\n    return this._inputs;\n  }\n  get isNode() {\n    return this.validation && console.warn(\"WebMidi.isNode has been deprecated. Use Utilities.isNode instead.\"), r$6.isNode;\n  }\n  get isBrowser() {\n    return this.validation && console.warn(\"WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead.\"), r$6.isBrowser;\n  }\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(e2) {\n    if (this.validation && (e2 = parseInt(e2), isNaN(e2)))\n      throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    this._octaveOffset = e2;\n  }\n  get outputs() {\n    return this._outputs;\n  }\n  get supported() {\n    return typeof navigator != \"undefined\" && navigator.requestMIDIAccess;\n  }\n  get sysexEnabled() {\n    return !(!this.interface || !this.interface.sysexEnabled);\n  }\n  get time() {\n    return performance.now();\n  }\n  get version() {\n    return \"3.0.21\";\n  }\n  get CHANNEL_EVENTS() {\n    return this.validation && console.warn(\"The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS.\"), n$6.CHANNEL_EVENTS;\n  }\n  get MIDI_SYSTEM_MESSAGES() {\n    return this.validation && console.warn(\"The MIDI_SYSTEM_MESSAGES enum has been moved to Enumerations.MIDI_SYSTEM_MESSAGES.\"), n$6.MIDI_SYSTEM_MESSAGES;\n  }\n  get MIDI_CHANNEL_MODE_MESSAGES() {\n    return this.validation && console.warn(\"The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to Enumerations.MIDI_CHANNEL_MODE_MESSAGES.\"), n$6.MIDI_CHANNEL_MODE_MESSAGES;\n  }\n  get MIDI_CONTROL_CHANGE_MESSAGES() {\n    return this.validation && console.warn(\"The MIDI_CONTROL_CHANGE_MESSAGES enum has been moved to Enumerations.MIDI_CONTROL_CHANGE_MESSAGES.\"), n$6.MIDI_CONTROL_CHANGE_MESSAGES;\n  }\n  get MIDI_REGISTERED_PARAMETER() {\n    return this.validation && console.warn(\"The MIDI_REGISTERED_PARAMETER enum has been moved to Enumerations.MIDI_REGISTERED_PARAMETERS.\"), this.MIDI_REGISTERED_PARAMETERS;\n  }\n  get NOTES() {\n    return this.validation && console.warn(\"The NOTES enum has been deprecated.\"), [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n  }\n}();\nd$3.constructor = null;\nconst noteKeys = {\n  \"KeyQ\": { note: \"F\", offset: 1 },\n  \"Digit2\": { note: \"F#\", offset: 1 },\n  \"KeyW\": { note: \"G\", offset: 1 },\n  \"Digit3\": { note: \"G#\", offset: 1 },\n  \"KeyE\": { note: \"A\", offset: 1 },\n  \"Digit4\": { note: \"A#\", offset: 1 },\n  \"KeyR\": { note: \"B\", offset: 1 },\n  \"KeyT\": { note: \"C\", offset: 2 },\n  \"Digit6\": { note: \"C#\", offset: 2 },\n  \"KeyY\": { note: \"D\", offset: 2 },\n  \"Digit7\": { note: \"D#\", offset: 2 },\n  \"KeyU\": { note: \"E\", offset: 2 },\n  \"KeyI\": { note: \"F\", offset: 2 },\n  \"Digit9\": { note: \"F#\", offset: 2 },\n  \"KeyO\": { note: \"G\", offset: 2 },\n  \"Digit0\": { note: \"G#\", offset: 2 },\n  \"KeyP\": { note: \"A\", offset: 2 },\n  \"Minus\": { note: \"A#\", offset: 2 },\n  \"BracketLeft\": { note: \"B\", offset: 2 },\n  \"BracketRIght\": { note: \"C\", offset: 3 },\n  \"KeyZ\": { note: \"C\", offset: 0 },\n  \"KeyS\": { note: \"C#\", offset: 0 },\n  \"KeyX\": { note: \"D\", offset: 0 },\n  \"KeyD\": { note: \"D#\", offset: 0 },\n  \"KeyC\": { note: \"E\", offset: 0 },\n  \"KeyV\": { note: \"F\", offset: 0 },\n  \"KeyG\": { note: \"F#\", offset: 0 },\n  \"KeyB\": { note: \"G\", offset: 0 },\n  \"KeyH\": { note: \"G#\", offset: 0 },\n  \"KeyN\": { note: \"A\", offset: 0 },\n  \"KeyJ\": { note: \"A#\", offset: 0 },\n  \"KeyM\": { note: \"B\", offset: 0 },\n  \"Comma\": { note: \"C\", offset: 1 },\n  \"KeyL\": { note: \"C#\", offset: 1 },\n  \"Period\": { note: \"D\", offset: 1 },\n  \"Semicolon\": { note: \"D#\", offset: 1 },\n  \"Slash\": { note: \"E\", offset: 1 }\n};\nfunction setupKeyboard() {\n  document.addEventListener(\"keydown\", (e2) => {\n    if (e2.code == \"Digit1\")\n      midi$1.offset--;\n    if (e2.code == \"Equal\")\n      midi$1.offset++;\n    if (e2.repeat || !midi$1.keyboard || !noteKeys[e2.code])\n      return;\n    if (e2.ctrlKey || e2.altKey || e2.metaKey)\n      return;\n    if (e2.code == \"Slash\")\n      e2.preventDefault();\n    playKey(noteKeys[e2.code].note, noteKeys[e2.code].offset);\n  });\n  document.addEventListener(\"keyup\", (e2) => {\n    if (!noteKeys[e2.code])\n      return;\n    playKey(noteKeys[e2.code].note, noteKeys[e2.code].offset, true);\n  });\n}\nconst midi$1 = reactive({\n  enabled: false,\n  initiated: false,\n  out: true,\n  inputs: {},\n  outputs: {},\n  forwards: {},\n  playing: false,\n  channels: {},\n  channel: useStorage(\"global-midi-channel\", 1),\n  note: {\n    pitch: 0,\n    channel: 1\n  },\n  offset: useClamp(0, -2, 2),\n  keyboard: true,\n  cc: {},\n  ccLearn: {},\n  message: null,\n  log: [],\n  clock: 0,\n  filter: useStorage(\"global-midi-filter\", {}),\n  available: computed(() => Object.entries(midi$1.outputs).length > 0),\n  activeNotes: computed(() => {\n    let notes2 = {};\n    for (let ch in midi$1.channels) {\n      for (let num2 in midi$1.channels[ch].activeNotes) {\n        notes2[num2] = midi$1.channels[ch].activeNotes[num2];\n      }\n    }\n    return notes2;\n  }),\n  activeChroma: computed(() => {\n    let chroma2 = new Array(12);\n    for (let num2 in midi$1.activeNotes) {\n      chroma2[(num2 - 9) % 12] = num2;\n    }\n    return chroma2;\n  })\n});\nfunction learnCC({ param, number, channel } = {}) {\n  const val = ref(0);\n  watch(() => midi$1.cc, (cc) => {\n    if (channel && cc.channel != channel)\n      return;\n    if (number == cc.number)\n      val.value = cc.value;\n  });\n  return val;\n}\nfunction playKey(name2, offset = 0, off, velocity = 1) {\n  let noteName = name2 + (4 + offset + midi$1.offset);\n  const note2 = new s$2(noteName, {\n    attack: off ? 0 : velocity,\n    release: off ? 0 : velocity\n  });\n  const ev = {\n    type: off ? \"noteoff\" : \"noteon\",\n    note: note2,\n    port: { id: \"PC Keyboard\" },\n    timestamp: midi$1.time,\n    target: { number: 0 }\n  };\n  noteInOn(ev);\n}\nfunction useMidi() {\n  if (!midi$1.initiated) {\n    setupKeyboard();\n    onMounted(() => {\n      if (d$3.supported) {\n        setupMidi();\n      }\n    });\n    watchEffect(() => {\n      if (!midi$1.out)\n        return;\n      let outs = Object.values(d$3.outputs);\n      if (midi$1.playing) {\n        outs.forEach((output) => {\n          output.sendContinue();\n        });\n      } else {\n        outs.forEach((output) => {\n          output.sendStop();\n        });\n      }\n    });\n    midi$1.initiated = true;\n  }\n  return {\n    midi: midi$1,\n    midiAttack,\n    midiRelease,\n    midiOnce: midiOnce$1,\n    setCC,\n    WebMidi: d$3\n  };\n}\nfunction setupMidi() {\n  d$3.enable();\n  d$3.addListener(\"enabled\", (e2) => {\n    midi$1.enabled = true;\n    initMidi();\n  });\n  d$3.addListener(\"connected\", (e2) => {\n    initMidi();\n  });\n  d$3.addListener(\"disconnected\", (e2) => {\n    delete midi$1[e2.port.type + \"s\"][e2.port.id];\n  });\n  midi$1.initiated = true;\n}\nfunction initMidi() {\n  midi$1.inputs = reactive({});\n  d$3.inputs.forEach((input2) => {\n    midi$1.enabled = true;\n    midi$1.inputs[input2.id] = {\n      name: input2.name,\n      manufacturer: input2.manufacturer,\n      forwarder: input2.addForwarder(),\n      event: null,\n      note: null,\n      cc: null\n    };\n    input2.removeListener();\n    input2.addListener(\"start\", () => {\n      midi$1.playing = true;\n    });\n    input2.addListener(\"stop\", () => {\n      midi$1.playing = false;\n      midi$1.channels = {};\n    });\n    input2.addListener(\"midimessage\", (ev) => {\n      var _a2;\n      if (((_a2 = ev == null ? void 0 : ev.message) == null ? void 0 : _a2.type) == \"clock\")\n        return;\n      midi$1.inputs[input2.id].event = ev;\n      midi$1.message = ev.message;\n      midi$1.log.unshift(ev);\n      if (midi$1.log.length > 100)\n        midi$1.log.pop();\n    });\n    input2.addListener(\"noteon\", (ev) => {\n      midi$1.inputs[input2.id].note = noteInOn(ev);\n    }, {\n      channels: \"all\"\n    });\n    input2.addListener(\"noteoff\", (ev) => {\n      midi$1.inputs[input2.id].note = noteInOn(ev);\n    }, { channels: \"all\" });\n    input2.addListener(\"controlchange\", (ev) => {\n      const cc = ccIn(ev);\n      if (!cc)\n        return;\n      midi$1.inputs[input2.id].cc = cc;\n      midi$1.cc = cc;\n    }, {\n      channels: \"all\"\n    });\n    input2.addListener(\"clock\", (ev) => {\n      midi$1.clock = ev.timestamp;\n    });\n  });\n  midi$1.outputs = reactive({});\n  d$3.outputs.forEach((output) => {\n    midi$1.outputs[output.id] = {\n      name: output.name,\n      manufacturer: output.manufacturer\n    };\n  });\n}\nfunction noteInOn(ev) {\n  let note2 = ev.note;\n  note2.port = ev.port.id;\n  note2.type = ev.type;\n  note2.timestamp = ev.timestamp;\n  note2.channel = ev.target.number;\n  if (midi$1.filter[note2.channel])\n    return;\n  createChannel(note2.channel);\n  midi$1.channels[note2.channel].notes[note2.number] = note2;\n  if (ev.type == \"noteoff\") {\n    note2.velocity = 0;\n    delete midi$1.channels[note2.channel].activeNotes[note2.number];\n  } else {\n    note2.velocity = 120 * (ev.note.attack || 1);\n    midi$1.channels[note2.channel].activeNotes[note2.number] = true;\n  }\n  note2.pitch = (note2.number + 3) % 12;\n  note2.octA = Math.floor((note2.number + 3) / 12) - 1;\n  midi$1.note = note2;\n  return note2;\n}\nfunction ccIn(ev) {\n  if (midi$1.filter[ev.target.number])\n    return;\n  let cc = {\n    channel: ev.target.number,\n    timestamp: ev.timestamp,\n    number: ev.controller.number,\n    value: ev.value,\n    raw: ev.rawValue,\n    port: ev.port.id\n  };\n  createChannel(cc.channel);\n  midi$1.channels[cc.channel].cc[cc.number] = cc;\n  return cc;\n}\nfunction createChannel(ch) {\n  if (!midi$1.channels[ch]) {\n    midi$1.channels[ch] = reactive({ num: ch, activeNotes: {}, notes: {}, cc: {} });\n  }\n}\nfunction setVelocity(channel, note2, velocity) {\n  var _a2, _b, _c;\n  if ((_c = (_b = (_a2 = midi$1.channels) == null ? void 0 : _a2[channel]) == null ? void 0 : _b.notes) == null ? void 0 : _c[note2]) {\n    midi$1.channels[channel].notes[note2].velocity = velocity;\n  }\n}\nfunction midiAttack(note2, options2) {\n  if (!midi$1.out)\n    return;\n  let channel = (note2 == null ? void 0 : note2.channel) || midi$1.channel;\n  setVelocity(channel, note2 == null ? void 0 : note2.number, 100);\n  d$3.outputs.forEach((output) => {\n    output.playNote(note2.number, {\n      channels: channel,\n      ...options2\n    });\n  });\n}\nfunction midiPlay(note2, options2) {\n  if (!midi$1.out)\n    return;\n  d$3.outputs.forEach((output) => {\n    output.playNote(note2, {\n      channels: midi$1.channel,\n      ...options2\n    });\n  });\n}\nfunction midiStop(note2, options2) {\n  if (!midi$1.out)\n    return;\n  if (note2) {\n    d$3.outputs.forEach((output) => {\n      output.stopNote(note2, { channels: midi$1.channel, ...options2 });\n    });\n  } else {\n    d$3.outputs.forEach((output) => {\n      output.sendAllNotesOff();\n      output.sendAllSoundOff({ time: \"+1\" });\n    });\n  }\n}\nfunction midiRelease(note2) {\n  if (!midi$1.out)\n    return;\n  if (note2) {\n    let channel = (note2 == null ? void 0 : note2.channel) || midi$1.channel;\n    setVelocity(channel, note2 == null ? void 0 : note2.number, 0);\n    d$3.outputs.forEach((output) => {\n      output.stopNote(note2.number, { channels: channel });\n    });\n  } else {\n    d$3.outputs.forEach((output) => {\n      output.sendAllNotesOff();\n      output.sendAllSoundOff({ time: \"+1\" });\n    });\n  }\n}\nfunction midiOnce$1(note2, options2) {\n  if (!midi$1.out || midi$1.filter[midi$1.channel])\n    return;\n  midiPlay(note2, options2);\n  setTimeout(() => {\n    midiStop(note2, options2);\n  }, 300);\n}\nfunction setCC(cc, value) {\n  if (!midi$1.out)\n    return;\n  d$3.outputs.forEach((output) => {\n    output.sendControlChange(Number(cc.number), value, cc.channel);\n  });\n}\nfunction stopAll() {\n  if (!midi$1.out)\n    return;\n  midi$1.channels = {};\n  midi$1.playing = false;\n  d$3.outputs.forEach((output) => {\n    output.sendAllNotesOff();\n    output.sendAllSoundOff({ time: \"+1\" });\n    output.sendReset();\n  });\n}\nfunction forwardMidi(iid, oid) {\n  var _a2, _b;\n  const output = d$3.outputs.find((out) => out.id == oid);\n  const destinations = midi$1.inputs[iid].forwarder.destinations;\n  const index2 = destinations.indexOf(output);\n  if (index2 == -1) {\n    destinations.push(output);\n    midi$1.forwards[iid] = midi$1.forwards[iid] || {};\n    midi$1.forwards[iid][oid] = true;\n  } else {\n    destinations.splice(index2, 1);\n    (_b = (_a2 = midi$1.forwards) == null ? void 0 : _a2[iid]) == null ? true : delete _b[oid];\n  }\n}\nconst quantizeModes = [\"+0\", \"@8n\", \"@16n\", \"@32n\"];\nconst synth = {\n  state: reactive({\n    midi: useStorage(\"synth-midi\", true),\n    initiated: false,\n    mute: false,\n    quantize: useCycleList(quantizeModes, { initialValue: \"+0\" }),\n    volume: useClamp(1, 0, 2)\n  }),\n  params: reactive({\n    maxPolyphony: 50,\n    oscillator: {\n      type: useStorage(\"synth-osc\", \"sawtooth8\")\n    },\n    volume: -30,\n    envelope: {\n      attack: 0.01,\n      decay: 0.1,\n      sustain: 0.6,\n      release: 1\n    },\n    filterEnvelope: {\n      attack: 1e-3,\n      decay: 0.7,\n      sustain: 0.5,\n      release: 1,\n      baseFrequency: 60,\n      octaves: 5\n    }\n  })\n};\nfunction useSynth() {\n  if (!synth.state.initiated) {\n    onKeyDown(\"Escape\", () => {\n      synthReleaseAll();\n    });\n    watch(() => synth.state.volume, (vol) => synth.poly && synth.poly.volume.rampTo(gainToDb(vol)));\n    watch(synth.params, (params) => {\n      if (synth.poly) {\n        synth.poly.set(params);\n      }\n    }, { deep: true, immediate: true });\n    watch(() => midi$1.note, (note2) => {\n      if (!synth.state.midi)\n        return;\n      if (note2.velocity > 0) {\n        synthAttack(Midi$1(note2.number).toFrequency(), note2.velocity / 127);\n      } else {\n        synthRelease(Midi$1(note2.number).toFrequency());\n      }\n    });\n    watch(() => midi$1.playing, (play) => {\n      if (!play)\n        synthReleaseAll();\n    });\n  }\n  return { init: init$2, synth, synthOnce, synthAttack, synthRelease, synthReleaseAll };\n}\nfunction init$2() {\n  start$1();\n  if (synth == null ? void 0 : synth.poly)\n    return;\n  const { channel } = createChannel$1(\"synth\");\n  synth.widener = new StereoWidener(0.7).connect(channel);\n  synth.reverb = new Reverb(3).connect(synth.widener);\n  synth.delay = new PingPongDelay({ delayTime: \"16n\", feedback: 0.3, wet: 0.3, maxDelay: \"4n\" }).connect(synth.widener);\n  synth.pan = new AutoPanner({ frequency: \"4n\", depth: 0.4 }).connect(synth.reverb).connect(synth.delay).connect(synth.widener);\n  synth.compressor = new Compressor().connect(synth.pan);\n  synth.poly = new PolySynth(MonoSynth, synth.params).connect(synth.compressor);\n  synth.pan.start();\n}\nfunction synthOnce(note2 = \"A4\", duration2 = \"8n\", time) {\n  if (!synth.poly || synth.state.mute)\n    return init$2();\n  synth.poly.triggerAttackRelease(note2, duration2, time);\n}\nfunction synthAttack(note2, velocity) {\n  if (!synth.poly || synth.state.mute)\n    return init$2();\n  synth.poly.triggerAttack(note2, synth.state.quantize.state, velocity);\n}\nfunction synthRelease(note2) {\n  if (!synth.poly || synth.state.mute)\n    return init$2();\n  synth.poly.triggerRelease(note2, synth.state.quantize.state);\n}\nfunction synthReleaseAll() {\n  if (!synth.poly || synth.state.mute)\n    return init$2();\n  synth.poly.releaseAll();\n}\nconst fillStr = (s2, n2) => Array(Math.abs(n2) + 1).join(s2);\nfunction deprecate(original, alternative, fn) {\n  return function(...args) {\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\nfunction isNamed(src) {\n  return src !== null && typeof src === \"object\" && typeof src.name === \"string\" ? true : false;\n}\nfunction isPitch(pitch) {\n  return pitch !== null && typeof pitch === \"object\" && typeof pitch.step === \"number\" && typeof pitch.alt === \"number\" ? true : false;\n}\nconst FIFTHS = [0, 2, 4, -1, 1, 3, 5];\nconst STEPS_TO_OCTS = FIFTHS.map((fifths) => Math.floor(fifths * 7 / 12));\nfunction encode$1(pitch) {\n  const { step, alt, oct, dir = 1 } = pitch;\n  const f2 = FIFTHS[step] + 7 * alt;\n  if (oct === void 0) {\n    return [dir * f2];\n  }\n  const o2 = oct - STEPS_TO_OCTS[step] - 4 * alt;\n  return [dir * f2, dir * o2];\n}\nconst FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\nfunction decode(coord) {\n  const [f2, o2, dir] = coord;\n  const step = FIFTHS_TO_STEPS[unaltered(f2)];\n  const alt = Math.floor((f2 + 1) / 7);\n  if (o2 === void 0) {\n    return { step, alt, dir };\n  }\n  const oct = o2 + 4 * alt + STEPS_TO_OCTS[step];\n  return { step, alt, oct, dir };\n}\nfunction unaltered(f2) {\n  const i2 = (f2 + 1) % 7;\n  return i2 < 0 ? 7 + i2 : i2;\n}\nconst NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\nconst cache$1 = /* @__PURE__ */ new Map();\nconst stepToLetter = (step) => \"CDEFGAB\".charAt(step);\nconst altToAcc = (alt) => alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nconst accToAlt = (acc) => acc[0] === \"b\" ? -acc.length : acc.length;\nfunction note(src) {\n  const cached = cache$1.get(src);\n  if (cached) {\n    return cached;\n  }\n  const value = typeof src === \"string\" ? parse$1(src) : isPitch(src) ? note(pitchName$1(src)) : isNamed(src) ? note(src.name) : NoNote;\n  cache$1.set(src, value);\n  return value;\n}\nconst REGEX$1 = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction tokenizeNote(str) {\n  const m2 = REGEX$1.exec(str);\n  return [m2[1].toUpperCase(), m2[2].replace(/x/g, \"##\"), m2[3], m2[4]];\n}\nfunction coordToNote(noteCoord) {\n  return note(decode(noteCoord));\n}\nconst mod = (n2, m2) => (n2 % m2 + m2) % m2;\nconst SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse$1(noteName) {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : void 0;\n  const coord = encode$1({ step, alt, oct });\n  const name2 = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma2 = (SEMI[step] + alt + 120) % 12;\n  const height = oct === void 0 ? mod(SEMI[step] + alt, 12) - 12 * 99 : SEMI[step] + alt + 12 * (oct + 1);\n  const midi2 = height >= 0 && height <= 127 ? height : null;\n  const freq2 = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma: chroma2,\n    coord,\n    freq: freq2,\n    height,\n    letter,\n    midi: midi2,\n    name: name2,\n    oct,\n    pc,\n    step\n  };\n}\nfunction pitchName$1(props) {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\nconst NoInterval = { empty: true, name: \"\", acc: \"\" };\nconst INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\nconst INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nconst REGEX$2 = new RegExp(\"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\");\nfunction tokenizeInterval(str) {\n  const m2 = REGEX$2.exec(`${str}`);\n  if (m2 === null) {\n    return [\"\", \"\"];\n  }\n  return m2[1] ? [m2[1], m2[2]] : [m2[4], m2[3]];\n}\nconst cache$2 = {};\nfunction interval(src) {\n  return typeof src === \"string\" ? cache$2[src] || (cache$2[src] = parse(src)) : isPitch(src) ? interval(pitchName(src)) : isNamed(src) ? interval(src.name) : NoInterval;\n}\nconst SIZES = [0, 2, 4, 5, 7, 9, 11];\nconst TYPES = \"PMMPPMM\";\nfunction parse(str) {\n  const tokens = tokenizeInterval(str);\n  if (tokens[0] === \"\") {\n    return NoInterval;\n  }\n  const num2 = +tokens[0];\n  const q = tokens[1];\n  const step = (Math.abs(num2) - 1) % 7;\n  const t2 = TYPES[step];\n  if (t2 === \"M\" && q === \"P\") {\n    return NoInterval;\n  }\n  const type = t2 === \"M\" ? \"majorable\" : \"perfectable\";\n  const name2 = \"\" + num2 + q;\n  const dir = num2 < 0 ? -1 : 1;\n  const simple = num2 === 8 || num2 === -8 ? num2 : dir * (step + 1);\n  const alt = qToAlt(type, q);\n  const oct = Math.floor((Math.abs(num2) - 1) / 7);\n  const semitones = dir * (SIZES[step] + alt + 12 * oct);\n  const chroma2 = (dir * (SIZES[step] + alt) % 12 + 12) % 12;\n  const coord = encode$1({ step, alt, oct, dir });\n  return {\n    empty: false,\n    name: name2,\n    num: num2,\n    q,\n    step,\n    alt,\n    dir,\n    type,\n    simple,\n    semitones,\n    chroma: chroma2,\n    coord,\n    oct\n  };\n}\nfunction qToAlt(type, q) {\n  return q === \"M\" && type === \"majorable\" || q === \"P\" && type === \"perfectable\" ? 0 : q === \"m\" && type === \"majorable\" ? -1 : /^A+$/.test(q) ? q.length : /^d+$/.test(q) ? -1 * (type === \"perfectable\" ? q.length : q.length + 1) : 0;\n}\nfunction pitchName(props) {\n  const { step, alt, oct = 0, dir } = props;\n  if (!dir) {\n    return \"\";\n  }\n  const calcNum = step + 1 + 7 * oct;\n  const num2 = calcNum === 0 ? step + 1 : calcNum;\n  const d2 = dir < 0 ? \"-\" : \"\";\n  const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\n  const name2 = d2 + num2 + altToQ(type, alt);\n  return name2;\n}\nfunction altToQ(type, alt) {\n  if (alt === 0) {\n    return type === \"majorable\" ? \"M\" : \"P\";\n  } else if (alt === -1 && type === \"majorable\") {\n    return \"m\";\n  } else if (alt > 0) {\n    return fillStr(\"A\", alt);\n  } else {\n    return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1);\n  }\n}\nfunction transpose$1(noteName, intervalName) {\n  const note$1 = note(noteName);\n  const interval$1 = interval(intervalName);\n  if (note$1.empty || interval$1.empty) {\n    return \"\";\n  }\n  const noteCoord = note$1.coord;\n  const intervalCoord = interval$1.coord;\n  const tr2 = noteCoord.length === 1 ? [noteCoord[0] + intervalCoord[0]] : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\n  return coordToNote(tr2).name;\n}\nfunction ascR(b2, n2) {\n  const a2 = [];\n  for (; n2--; a2[n2] = n2 + b2)\n    ;\n  return a2;\n}\nfunction descR(b2, n2) {\n  const a2 = [];\n  for (; n2--; a2[n2] = b2 - n2)\n    ;\n  return a2;\n}\nfunction range(from, to) {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\nfunction rotate(times, arr) {\n  const len = arr.length;\n  const n2 = (times % len + len) % len;\n  return arr.slice(n2, len).concat(arr.slice(0, n2));\n}\nfunction compact(arr) {\n  return arr.filter((n2) => n2 === 0 || n2);\n}\nconst EmptyPcset = {\n  empty: true,\n  name: \"\",\n  setNum: 0,\n  chroma: \"000000000000\",\n  normalized: \"000000000000\",\n  intervals: []\n};\nconst setNumToChroma = (num2) => Number(num2).toString(2);\nconst chromaToNumber = (chroma2) => parseInt(chroma2, 2);\nconst REGEX = /^[01]{12}$/;\nfunction isChroma(set) {\n  return REGEX.test(set);\n}\nconst isPcsetNum = (set) => typeof set === \"number\" && set >= 0 && set <= 4095;\nconst isPcset = (set) => set && isChroma(set.chroma);\nconst cache = { [EmptyPcset.chroma]: EmptyPcset };\nfunction get$5(src) {\n  const chroma2 = isChroma(src) ? src : isPcsetNum(src) ? setNumToChroma(src) : Array.isArray(src) ? listToChroma(src) : isPcset(src) ? src.chroma : EmptyPcset.chroma;\n  return cache[chroma2] = cache[chroma2] || chromaToPcset(chroma2);\n}\nconst pcset = deprecate(\"Pcset.pcset\", \"Pcset.get\", get$5);\nconst chroma$1 = (set) => get$5(set).chroma;\nconst intervals$1 = (set) => get$5(set).intervals;\nconst num = (set) => get$5(set).setNum;\nconst IVLS = [\n  \"1P\",\n  \"2m\",\n  \"2M\",\n  \"3m\",\n  \"3M\",\n  \"4P\",\n  \"5d\",\n  \"5P\",\n  \"6m\",\n  \"6M\",\n  \"7m\",\n  \"7M\"\n];\nfunction chromaToIntervals(chroma2) {\n  const intervals2 = [];\n  for (let i2 = 0; i2 < 12; i2++) {\n    if (chroma2.charAt(i2) === \"1\")\n      intervals2.push(IVLS[i2]);\n  }\n  return intervals2;\n}\nfunction chromas() {\n  return range(2048, 4095).map(setNumToChroma);\n}\nfunction modes$1(set, normalize = true) {\n  const pcs = get$5(set);\n  const binary = pcs.chroma.split(\"\");\n  return compact(binary.map((_, i2) => {\n    const r2 = rotate(i2, binary);\n    return normalize && r2[0] === \"0\" ? null : r2.join(\"\");\n  }));\n}\nfunction isEqual(s1, s2) {\n  return get$5(s1).setNum === get$5(s2).setNum;\n}\nfunction isSubsetOf(set) {\n  const s2 = get$5(set).setNum;\n  return (notes2) => {\n    const o2 = get$5(notes2).setNum;\n    return s2 && s2 !== o2 && (o2 & s2) === o2;\n  };\n}\nfunction isSupersetOf(set) {\n  const s2 = get$5(set).setNum;\n  return (notes2) => {\n    const o2 = get$5(notes2).setNum;\n    return s2 && s2 !== o2 && (o2 | s2) === o2;\n  };\n}\nfunction isNoteIncludedIn(set) {\n  const s2 = get$5(set);\n  return (noteName) => {\n    const n2 = note(noteName);\n    return s2 && !n2.empty && s2.chroma.charAt(n2.chroma) === \"1\";\n  };\n}\nfunction filter(set) {\n  const isIncluded = isNoteIncludedIn(set);\n  return (notes2) => {\n    return notes2.filter(isIncluded);\n  };\n}\nvar index$5 = {\n  get: get$5,\n  chroma: chroma$1,\n  num,\n  intervals: intervals$1,\n  chromas,\n  isSupersetOf,\n  isSubsetOf,\n  isNoteIncludedIn,\n  isEqual,\n  filter,\n  modes: modes$1,\n  pcset\n};\nfunction chromaRotations(chroma2) {\n  const binary = chroma2.split(\"\");\n  return binary.map((_, i2) => rotate(i2, binary).join(\"\"));\n}\nfunction chromaToPcset(chroma2) {\n  const setNum = chromaToNumber(chroma2);\n  const normalizedNum = chromaRotations(chroma2).map(chromaToNumber).filter((n2) => n2 >= 2048).sort()[0];\n  const normalized = setNumToChroma(normalizedNum);\n  const intervals2 = chromaToIntervals(chroma2);\n  return {\n    empty: false,\n    name: \"\",\n    setNum,\n    chroma: chroma2,\n    normalized,\n    intervals: intervals2\n  };\n}\nfunction listToChroma(set) {\n  if (set.length === 0) {\n    return EmptyPcset.chroma;\n  }\n  let pitch;\n  const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (let i2 = 0; i2 < set.length; i2++) {\n    pitch = note(set[i2]);\n    if (pitch.empty)\n      pitch = interval(set[i2]);\n    if (!pitch.empty)\n      binary[pitch.chroma] = 1;\n  }\n  return binary.join(\"\");\n}\nconst CHORDS = [\n  [\"1P 3M 5P\", \"major\", \"M ^ \"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 \\u0394 ma7 M7 Maj7 ^7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 \\u03949 ^9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth/ninth\", \"6/9 69 M69\"],\n  [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\n  [\n    \"1P 3M 5P 7M 11A\",\n    \"major seventh sharp eleventh\",\n    \"maj#4 \\u0394#4 \\u0394#11 M7#11 ^7#11 maj7#11\"\n  ],\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\n    \"1P 3m 5P 7M\",\n    \"minor/major seventh\",\n    \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -\\u03947 m\\u0394 -^7\"\n  ],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\n  [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\n  [\"1P 3m 5d\", \"diminished\", \"dim \\xB0 o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 \\xB07 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 \\xF8 -7b5 h7 h\"],\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\n  [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\n  [\n    \"1P 4P 5P 7m 9m\",\n    \"suspended fourth flat ninth\",\n    \"b9sus phryg 7b9sus 7b9sus4\"\n  ],\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\n  [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\n  [\n    \"1P 3M 5P 7M 9M 11A\",\n    \"major sharp eleventh (lydian)\",\n    \"maj9#11 \\u03949#11 ^9#11\"\n  ],\n  [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\n  [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\n  [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\n  [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\n  [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\n  [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\n  [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\n  [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\n  [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\n  [\"1P 3M 5d\", \"\", \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\n  [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\n  [\"1P 3M 5d 7m\", \"\", \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\n  [\"1P 3M 7m\", \"\", \"7no5\"],\n  [\"1P 3M 7m 13m\", \"\", \"7b13\"],\n  [\"1P 3M 7m 9M\", \"\", \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\n  [\"1P 3m 4P 5P\", \"\", \"madd4\"],\n  [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\n  [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", \"\", \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\n  [\"1P 3m 5d 7M\", \"\", \"oM7\"],\n  [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\n  [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\n  [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\n  [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\n  [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\n  [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"]\n];\nconst NoChordType = {\n  ...EmptyPcset,\n  name: \"\",\n  quality: \"Unknown\",\n  intervals: [],\n  aliases: []\n};\nlet dictionary$1 = [];\nlet index$4 = {};\nfunction get$4(type) {\n  return index$4[type] || NoChordType;\n}\nconst chordType$1 = deprecate(\"ChordType.chordType\", \"ChordType.get\", get$4);\nfunction names$3() {\n  return dictionary$1.map((chord) => chord.name).filter((x2) => x2);\n}\nfunction symbols() {\n  return dictionary$1.map((chord) => chord.aliases[0]).filter((x2) => x2);\n}\nfunction keys$1() {\n  return Object.keys(index$4);\n}\nfunction all$1() {\n  return dictionary$1.slice();\n}\nconst entries$1 = deprecate(\"ChordType.entries\", \"ChordType.all\", all$1);\nfunction removeAll$1() {\n  dictionary$1 = [];\n  index$4 = {};\n}\nfunction add$1(intervals2, aliases, fullName) {\n  const quality = getQuality(intervals2);\n  const chord = {\n    ...get$5(intervals2),\n    name: fullName || \"\",\n    quality,\n    intervals: intervals2,\n    aliases\n  };\n  dictionary$1.push(chord);\n  if (chord.name) {\n    index$4[chord.name] = chord;\n  }\n  index$4[chord.setNum] = chord;\n  index$4[chord.chroma] = chord;\n  chord.aliases.forEach((alias) => addAlias$1(chord, alias));\n}\nfunction addAlias$1(chord, alias) {\n  index$4[alias] = chord;\n}\nfunction getQuality(intervals2) {\n  const has = (interval2) => intervals2.indexOf(interval2) !== -1;\n  return has(\"5A\") ? \"Augmented\" : has(\"3M\") ? \"Major\" : has(\"5d\") ? \"Diminished\" : has(\"3m\") ? \"Minor\" : \"Unknown\";\n}\nCHORDS.forEach(([ivls, fullName, names2]) => add$1(ivls.split(\" \"), names2.split(\" \"), fullName));\ndictionary$1.sort((a2, b2) => a2.setNum - b2.setNum);\nvar index$1$2 = {\n  names: names$3,\n  symbols,\n  get: get$4,\n  all: all$1,\n  add: add$1,\n  removeAll: removeAll$1,\n  keys: keys$1,\n  entries: entries$1,\n  chordType: chordType$1\n};\nconst SCALES = [\n  [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\n  [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\n  [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\n  [\"1P 2M 4P 5P 6M\", \"ritusen\"],\n  [\"1P 2M 4P 5P 7m\", \"egyptian\"],\n  [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\n  [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\n  [\"1P 2m 3m 5P 6m\", \"pelog\"],\n  [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\n  [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\n  [\"1P 2m 4P 5d 7m\", \"iwato\"],\n  [\"1P 2m 4P 5P 7m\", \"in-sen\"],\n  [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\n  [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\n  [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\n  [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\n  [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\n  [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\n  [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\n  [\"1P 2m 3M 5P 6M\", \"scriabin\"],\n  [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\n  [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\n  [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\n  [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\n  [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\n  [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\n  [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\n  [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\n  [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\n  [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\n  [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\n  [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\n  [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\n  [\"1P 2M 3M 4A 5A 7m\", \"whole tone\", \"messiaen's mode #1\"],\n  [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\n  [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\n  [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\n  [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\n  [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\n  [\n    \"1P 2m 2A 3M 4A 6m 7m\",\n    \"altered\",\n    \"super locrian\",\n    \"diminished whole tone\",\n    \"pomeroy\"\n  ],\n  [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\n  [\n    \"1P 2M 3M 4P 5P 6m 7m\",\n    \"mixolydian b6\",\n    \"melodic minor fifth mode\",\n    \"hindu\"\n  ],\n  [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\n  [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\n  [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\n  [\n    \"1P 2m 3m 4P 5P 6M 7m\",\n    \"dorian b2\",\n    \"phrygian #6\",\n    \"melodic minor second mode\"\n  ],\n  [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\n  [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\n  [\n    \"1P 2m 3m 4d 5d 6m 7d\",\n    \"ultralocrian\",\n    \"superlocrian bb7\",\n    \"superlocrian diminished\"\n  ],\n  [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\n  [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\n  [\n    \"1P 2M 3m 4A 5P 6M 7m\",\n    \"dorian #4\",\n    \"ukrainian dorian\",\n    \"romanian minor\",\n    \"altered dorian\"\n  ],\n  [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\n  [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\n  [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\n  [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\n  [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\n  [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\n  [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\n  [\"1P 2M 3m 4P 5P 6m 7m\", \"aeolian\", \"minor\"],\n  [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\n  [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\n  [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\n  [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\n  [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\n  [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\n  [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\n  [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\n  [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\n  [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\n  [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\n  [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\n  [\n    \"1P 2M 3M 4P 5A 6M 7M\",\n    \"major augmented\",\n    \"major #5\",\n    \"ionian augmented\",\n    \"ionian #5\"\n  ],\n  [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\n  [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\n  [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\n  [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\n  [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\n  [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\n  [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\n  [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\n  [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\n  [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\n  [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\n  [\n    \"1P 2m 3m 3M 4A 5P 6M 7m\",\n    \"half-whole diminished\",\n    \"dominant diminished\",\n    \"messiaen's mode #2\"\n  ],\n  [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\n  [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\n  [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\n  [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\n  [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\n  [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"]\n];\nconst NoScaleType = {\n  ...EmptyPcset,\n  intervals: [],\n  aliases: []\n};\nlet dictionary = [];\nlet index$3 = {};\nfunction names$2() {\n  return dictionary.map((scale2) => scale2.name);\n}\nfunction get$3(type) {\n  return index$3[type] || NoScaleType;\n}\nconst scaleType$1 = deprecate(\"ScaleDictionary.scaleType\", \"ScaleType.get\", get$3);\nfunction all() {\n  return dictionary.slice();\n}\nconst entries = deprecate(\"ScaleDictionary.entries\", \"ScaleType.all\", all);\nfunction keys() {\n  return Object.keys(index$3);\n}\nfunction removeAll() {\n  dictionary = [];\n  index$3 = {};\n}\nfunction add(intervals2, name2, aliases = []) {\n  const scale2 = { ...get$5(intervals2), name: name2, intervals: intervals2, aliases };\n  dictionary.push(scale2);\n  index$3[scale2.name] = scale2;\n  index$3[scale2.setNum] = scale2;\n  index$3[scale2.chroma] = scale2;\n  scale2.aliases.forEach((alias) => addAlias(scale2, alias));\n  return scale2;\n}\nfunction addAlias(scale2, alias) {\n  index$3[alias] = scale2;\n}\nSCALES.forEach(([ivls, name2, ...aliases]) => add(ivls.split(\" \"), name2, aliases));\nvar index$1$1 = {\n  names: names$2,\n  get: get$3,\n  all,\n  add,\n  removeAll,\n  keys,\n  entries,\n  scaleType: scaleType$1\n};\nconst L2 = Math.log(2);\nconst L440 = Math.log(440);\nfunction freqToMidi(freq2) {\n  const v2 = 12 * (Math.log(freq2) - L440) / L2 + 69;\n  return Math.round(v2 * 100) / 100;\n}\nconst SHARPS = \"C C# D D# E F F# G G# A A# B\".split(\" \");\nconst FLATS = \"C Db D Eb E F Gb G Ab A Bb B\".split(\" \");\nfunction midiToNoteName(midi2, options2 = {}) {\n  if (isNaN(midi2) || midi2 === -Infinity || midi2 === Infinity)\n    return \"\";\n  midi2 = Math.round(midi2);\n  const pcs = options2.sharps === true ? SHARPS : FLATS;\n  const pc = pcs[midi2 % 12];\n  if (options2.pitchClass) {\n    return pc;\n  }\n  const o2 = Math.floor(midi2 / 12) - 1;\n  return pc + o2;\n}\nconst NAMES = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\nconst toName = (n2) => n2.name;\nconst onlyNotes = (array) => array.map(note).filter((n2) => !n2.empty);\nfunction names$1(array) {\n  if (array === void 0) {\n    return NAMES.slice();\n  } else if (!Array.isArray(array)) {\n    return [];\n  } else {\n    return onlyNotes(array).map(toName);\n  }\n}\nconst get$2 = note;\nconst name = (note2) => get$2(note2).name;\nconst pitchClass = (note2) => get$2(note2).pc;\nconst accidentals = (note2) => get$2(note2).acc;\nconst octave = (note2) => get$2(note2).oct;\nconst midi = (note2) => get$2(note2).midi;\nconst freq = (note2) => get$2(note2).freq;\nconst chroma = (note2) => get$2(note2).chroma;\nfunction fromMidi(midi2) {\n  return midiToNoteName(midi2);\n}\nfunction fromFreq(freq2) {\n  return midiToNoteName(freqToMidi(freq2));\n}\nfunction fromFreqSharps(freq2) {\n  return midiToNoteName(freqToMidi(freq2), { sharps: true });\n}\nfunction fromMidiSharps(midi2) {\n  return midiToNoteName(midi2, { sharps: true });\n}\nconst transpose = transpose$1;\nconst tr = transpose$1;\nconst transposeBy = (interval2) => (note2) => transpose(note2, interval2);\nconst trBy = transposeBy;\nconst transposeFrom = (note2) => (interval2) => transpose(note2, interval2);\nconst trFrom = transposeFrom;\nfunction transposeFifths(noteName, fifths) {\n  const note2 = get$2(noteName);\n  if (note2.empty) {\n    return \"\";\n  }\n  const [nFifths, nOcts] = note2.coord;\n  const transposed = nOcts === void 0 ? coordToNote([nFifths + fifths]) : coordToNote([nFifths + fifths, nOcts]);\n  return transposed.name;\n}\nconst trFifths = transposeFifths;\nconst ascending = (a2, b2) => a2.height - b2.height;\nconst descending = (a2, b2) => b2.height - a2.height;\nfunction sortedNames(notes2, comparator) {\n  comparator = comparator || ascending;\n  return onlyNotes(notes2).sort(comparator).map(toName);\n}\nfunction sortedUniqNames(notes2) {\n  return sortedNames(notes2, ascending).filter((n2, i2, a2) => i2 === 0 || n2 !== a2[i2 - 1]);\n}\nconst simplify = (noteName) => {\n  const note2 = get$2(noteName);\n  if (note2.empty) {\n    return \"\";\n  }\n  return midiToNoteName(note2.midi || note2.chroma, {\n    sharps: note2.alt > 0,\n    pitchClass: note2.midi === null\n  });\n};\nfunction enharmonic(noteName, destName) {\n  const src = get$2(noteName);\n  if (src.empty) {\n    return \"\";\n  }\n  const dest = get$2(destName || midiToNoteName(src.midi || src.chroma, {\n    sharps: src.alt < 0,\n    pitchClass: true\n  }));\n  if (dest.empty || dest.chroma !== src.chroma) {\n    return \"\";\n  }\n  if (src.oct === void 0) {\n    return dest.pc;\n  }\n  const srcChroma = src.chroma - src.alt;\n  const destChroma = dest.chroma - dest.alt;\n  const destOctOffset = srcChroma > 11 || destChroma < 0 ? -1 : srcChroma < 0 || destChroma > 11 ? 1 : 0;\n  const destOct = src.oct + destOctOffset;\n  return dest.pc + destOct;\n}\nvar index$2 = {\n  names: names$1,\n  get: get$2,\n  name,\n  pitchClass,\n  accidentals,\n  octave,\n  midi,\n  ascending,\n  descending,\n  sortedNames,\n  sortedUniqNames,\n  fromMidi,\n  fromMidiSharps,\n  freq,\n  fromFreq,\n  fromFreqSharps,\n  chroma,\n  transpose,\n  tr,\n  transposeBy,\n  trBy,\n  transposeFrom,\n  trFrom,\n  transposeFifths,\n  trFifths,\n  simplify,\n  enharmonic\n};\nObject.freeze([]);\nconst MODES = [\n  [0, 2773, 0, \"ionian\", \"\", \"Maj7\", \"major\"],\n  [1, 2902, 2, \"dorian\", \"m\", \"m7\"],\n  [2, 3418, 4, \"phrygian\", \"m\", \"m7\"],\n  [3, 2741, -1, \"lydian\", \"\", \"Maj7\"],\n  [4, 2774, 1, \"mixolydian\", \"\", \"7\"],\n  [5, 2906, 3, \"aeolian\", \"m\", \"m7\", \"minor\"],\n  [6, 3434, 5, \"locrian\", \"dim\", \"m7b5\"]\n];\nconst NoMode = {\n  ...EmptyPcset,\n  name: \"\",\n  alt: 0,\n  modeNum: NaN,\n  triad: \"\",\n  seventh: \"\",\n  aliases: []\n};\nconst modes = MODES.map(toMode);\nconst index$1 = {};\nmodes.forEach((mode) => {\n  index$1[mode.name] = mode;\n  mode.aliases.forEach((alias) => {\n    index$1[alias] = mode;\n  });\n});\nfunction get$1(name2) {\n  return typeof name2 === \"string\" ? index$1[name2.toLowerCase()] || NoMode : name2 && name2.name ? get$1(name2.name) : NoMode;\n}\nfunction toMode(mode) {\n  const [modeNum, setNum, alt, name2, triad, seventh, alias] = mode;\n  const aliases = alias ? [alias] : [];\n  const chroma2 = Number(setNum).toString(2);\n  const intervals2 = get$3(name2).intervals;\n  return {\n    empty: false,\n    intervals: intervals2,\n    modeNum,\n    chroma: chroma2,\n    normalized: chroma2,\n    name: name2,\n    setNum,\n    alt,\n    triad,\n    seventh,\n    aliases\n  };\n}\nfunction chords$1(chords2) {\n  return (modeName, tonic) => {\n    const mode = get$1(modeName);\n    if (mode.empty)\n      return [];\n    const triads = rotate(mode.modeNum, chords2);\n    const tonics = mode.intervals.map((i2) => transpose$1(tonic, i2));\n    return triads.map((triad, i2) => tonics[i2] + triad);\n  };\n}\nchords$1(MODES.map((x2) => x2[4]));\nchords$1(MODES.map((x2) => x2[5]));\nconst NoScale = {\n  empty: true,\n  name: \"\",\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: []\n};\nfunction tokenize(name2) {\n  if (typeof name2 !== \"string\") {\n    return [\"\", \"\"];\n  }\n  const i2 = name2.indexOf(\" \");\n  const tonic = note(name2.substring(0, i2));\n  if (tonic.empty) {\n    const n2 = note(name2);\n    return n2.empty ? [\"\", name2] : [n2.name, \"\"];\n  }\n  const type = name2.substring(tonic.name.length + 1);\n  return [tonic.name, type.length ? type : \"\"];\n}\nconst names = names$2;\nfunction get(src) {\n  const tokens = Array.isArray(src) ? src : tokenize(src);\n  const tonic = note(tokens[0]).name;\n  const st = get$3(tokens[1]);\n  if (st.empty) {\n    return NoScale;\n  }\n  const type = st.name;\n  const notes2 = tonic ? st.intervals.map((i2) => transpose$1(tonic, i2)) : [];\n  const name2 = tonic ? tonic + \" \" + type : type;\n  return { ...st, name: name2, type, tonic, notes: notes2 };\n}\nconst scale = deprecate(\"Scale.scale\", \"Scale.get\", get);\nfunction scaleChords(name2) {\n  const s2 = get(name2);\n  const inScale = isSubsetOf(s2.chroma);\n  return all$1().filter((chord) => inScale(chord.chroma)).map((chord) => chord.aliases[0]);\n}\nfunction extended(name2) {\n  const s2 = get(name2);\n  const isSuperset = isSupersetOf(s2.chroma);\n  return all().filter((scale2) => isSuperset(scale2.chroma)).map((scale2) => scale2.name);\n}\nfunction reduced(name2) {\n  const isSubset = isSubsetOf(get(name2).chroma);\n  return all().filter((scale2) => isSubset(scale2.chroma)).map((scale2) => scale2.name);\n}\nfunction scaleNotes(notes2) {\n  const pcset2 = notes2.map((n2) => note(n2).pc).filter((x2) => x2);\n  const tonic = pcset2[0];\n  const scale2 = sortedUniqNames(pcset2);\n  return rotate(scale2.indexOf(tonic), scale2);\n}\nfunction modeNames(name2) {\n  const s2 = get(name2);\n  if (s2.empty) {\n    return [];\n  }\n  const tonics = s2.tonic ? s2.notes : s2.intervals;\n  return modes$1(s2.chroma).map((chroma2, i2) => {\n    const modeName = get(chroma2).name;\n    return modeName ? [tonics[i2], modeName] : [\"\", \"\"];\n  }).filter((x2) => x2[0]);\n}\nfunction getNoteNameOf(scale2) {\n  const names2 = Array.isArray(scale2) ? scaleNotes(scale2) : get(scale2).notes;\n  const chromas2 = names2.map((name2) => note(name2).chroma);\n  return (noteOrMidi) => {\n    const currNote = typeof noteOrMidi === \"number\" ? note(fromMidi(noteOrMidi)) : note(noteOrMidi);\n    const height = currNote.height;\n    if (height === void 0)\n      return void 0;\n    const chroma2 = height % 12;\n    const position = chromas2.indexOf(chroma2);\n    if (position === -1)\n      return void 0;\n    return enharmonic(currNote.name, names2[position]);\n  };\n}\nfunction rangeOf(scale2) {\n  const getName = getNoteNameOf(scale2);\n  return (fromNote, toNote) => {\n    const from = note(fromNote).height;\n    const to = note(toNote).height;\n    if (from === void 0 || to === void 0)\n      return [];\n    return range(from, to).map(getName).filter((x2) => x2);\n  };\n}\nvar index = {\n  get,\n  names,\n  extended,\n  modeNames,\n  reduced,\n  scaleChords,\n  scaleNotes,\n  tokenize,\n  rangeOf,\n  scale\n};\nindex$1$2.add([\"1P\", \"2m\"], [\"2m\"], \"minor second\");\nindex$1$2.add([\"1P\", \"2M\"], [\"2M\"], \"major second\");\nindex$1$2.add([\"1P\", \"3m\"], [\"3m\"], \"minor third\");\nindex$1$2.add([\"1P\", \"3M\"], [\"3M\"], \"major third\");\nindex$1$2.add([\"1P\", \"4P\"], [\"4P\"], \"perfect fourth\");\nindex$1$2.add([\"1P\", \"5d\"], [\"TT\"], \"tritone\");\nindex$1$2.add([\"1P\", \"5P\"], [\"5P\"], \"perfect fifth\");\nindex$1$2.add([\"1P\", \"6m\"], [\"6m\"], \"minor sixth\");\nindex$1$2.add([\"1P\", \"6M\"], [\"6M\"], \"major sixth\");\nindex$1$2.add([\"1P\", \"7m\"], [\"7m\"], \"minor seventh\");\nindex$1$2.add([\"1P\", \"7M\"], [\"7M\"], \"major seventh\");\nconst chordType = index$1$2;\nconst scaleType = index$1$1;\nconst chordList = index$1$2.all();\nconst scaleList = index$1$1.all();\nconst intervals = [\"1P\", \"2m\", \"2M\", \"3m\", \"3M\", \"4P\", \"TT\", \"5P\", \"6m\", \"6M\", \"7m\", \"7M\"];\nconst noteNames = [];\nconst naturals = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"];\nconst sharps = [\"G##\", \"A#\", \"A##\", \"B#\", \"C#\", \"C##\", \"D#\", \"D##\", \"E#\", \"F#\", \"F##\", \"G#\"];\nconst flats = [\"Bbb\", \"Bb\", \"Cb\", \"Dbb\", \"Db\", \"Ebb\", \"Eb\", \"Fb\", \"Gbb\", \"Gb\", \"Abb\", \"Ab\"];\nnaturals.forEach((note2, n2) => {\n  noteNames[note2] = n2;\n});\nsharps.forEach((note2, n2) => {\n  noteNames[note2] = n2;\n});\nflats.forEach((note2, n2) => {\n  noteNames[note2] = n2;\n});\nconst notes = naturals;\nconst chords = {\n  min: { handle: \"min\", name: \"Minor\", semitones: [0, 3, 7] },\n  maj: { handle: \"maj\", name: \"Major\", semitones: [0, 4, 7] },\n  aug: { handle: \"aug\", name: \"Augmented\", semitones: [0, 4, 8] },\n  dim: { handle: \"dim\", name: \"Diminished\", semitones: [0, 3, 6] },\n  M7: { handle: \"M7\", name: \"Major 7th\", semitones: [0, 4, 7, 11] },\n  m7: { handle: \"m7\", name: \"Minor 7th\", semitones: [0, 3, 7, 10] },\n  \"7\": { handle: \"7\", name: \"Dominant 7th\", semitones: [0, 4, 7, 10] },\n  \"+7\": { handle: \"+7\", name: \"Augmented 7th\", semitones: [0, 4, 8, 10] },\n  o7: { handle: \"o7\", name: \"Diminished 7th\", semitones: [0, 3, 6, 9] },\n  \"07\": { handle: \"07\", name: \"Half-diminished 7th\", semitones: [0, 3, 6, 10] },\n  \"+M7\": { handle: \"+M7\", name: \"Augmented major 7th\", semitones: [0, 3, 7, 11] },\n  \"6\": { handle: \"6\", name: \"Major 6th\", semitones: [0, 4, 7, 9] },\n  m6: { handle: \"m6\", name: \"Minor 6th\", semitones: [0, 3, 7, 9] },\n  sus2: { handle: \"sus2\", name: \"Suspended 2nd\", semitones: [0, 2, 7] },\n  sus4: { handle: \"sus4\", name: \"Suspended 4th\", semitones: [0, 5, 7] },\n  \"9\": { handle: \"9\", name: \"9th\", semitones: [0, 3, 7, 13] }\n};\nconst scales = {\n  major: {\n    handle: \"major\",\n    name: \"Major (Ionian)\",\n    chords: [\"maj\", \"\", \"min\", \"\", \"min\", \"maj\", \"\", \"7\", \"\", \"min\", \"\", \"dim\"],\n    steps: [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]\n  },\n  minor: {\n    handle: \"minor\",\n    name: \"Minor (Aeolian)\",\n    chords: [\"min\", \"\", \"dim\", \"maj\", \"\", \"min\", \"\", \"min\", \"maj\", \"\", \"7\", \"\"],\n    steps: [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0]\n  },\n  dorian: {\n    handle: \"dorian\",\n    name: \"Dorian\",\n    chords: [\"min\", \"\", \"min\", \"maj\", \"\", \"7\", \"\", \"min\", \"\", \"dim\", \"maj\", \"\"],\n    steps: [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0]\n  },\n  phrygian: {\n    handle: \"phrygian\",\n    name: \"Phrygian\",\n    chords: [\"min\", \"maj\", \"\", \"7\", \"\", \"min\", \"\", \"dim\", \"maj\", \"\", \"min\", \"\"],\n    steps: [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0]\n  },\n  lydian: {\n    handle: \"lydian\",\n    name: \"Lydian\",\n    chords: [\"maj\", \"\", \"7\", \"\", \"min\", \"\", \"dim\", \"maj\", \"\", \"min\", \"\", \"min\"],\n    steps: [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1]\n  },\n  mixolydian: {\n    handle: \"mixolydian\",\n    name: \"Mixolydian\",\n    chords: [\"7\", \"\", \"min\", \"\", \"dim\", \"maj\", \"\", \"min\", \"\", \"min\", \"maj\", \"\"],\n    steps: [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0]\n  },\n  locrian: {\n    handle: \"locrian\",\n    name: \"Locrian\",\n    chords: [\"dim\", \"maj\", \"\", \"min\", \"\", \"min\", \"maj\", \"\", \"7\", \"\", \"min\", \"\"],\n    steps: [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0]\n  },\n  majorPenta: {\n    handle: \"majorPenta\",\n    name: \"Major pentatonic\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0]\n  },\n  minorPenta: {\n    handle: \"minorPenta\",\n    name: \"Minor pentatonic\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0]\n  },\n  acoustic: {\n    handle: \"acoustic\",\n    name: \"Acoustic\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0]\n  },\n  adonai: {\n    handle: \"adonai\",\n    name: \"Adonai malakh\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0]\n  },\n  algerian: {\n    handle: \"algerian\",\n    name: \"Algerian\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1]\n  },\n  augmented: {\n    handle: \"augmented\",\n    name: \"Augmented\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]\n  },\n  bebopDom: {\n    handle: \"bebopDom\",\n    name: \"Bebop dominant\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1]\n  },\n  bebopMaj: {\n    handle: \"bebopMaj\",\n    name: \"Bebop major\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1]\n  },\n  bluesHexa: {\n    handle: \"bluesHexa\",\n    name: \"Blues hexatonic\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0]\n  },\n  doubleHarmonic: {\n    handle: \"doubleHarmonic\",\n    name: \"Double harmonic\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1]\n  },\n  enigmatic: {\n    handle: \"enigmatic\",\n    name: \"Enigmatic\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1]\n  },\n  gypsy: {\n    handle: \"gypsy\",\n    name: \"Gypsy\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0]\n  },\n  halfDim: {\n    handle: \"halfDim\",\n    name: \"Half diminished\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0]\n  },\n  harmonicMaj: {\n    handle: \"harmonicMaj\",\n    name: \"Harmonic major\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1]\n  },\n  harmonicMin: {\n    handle: \"harmonicMin\",\n    name: \"Harmonic minor\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1]\n  },\n  hungarianMin: {\n    handle: \"hungarianMin\",\n    name: \"Hungarian minor\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1]\n  },\n  istrian: {\n    handle: \"istrian\",\n    name: \"Istrian\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0]\n  },\n  lydianAug: {\n    handle: \"lydianAug\",\n    name: \"Lydian augmented\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1]\n  },\n  majLocrian: {\n    handle: \"majLocrian\",\n    name: \"Major locrian\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0]\n  },\n  jazzMin: {\n    handle: \"jazzMin\",\n    name: \"Jazz minor\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1]\n  },\n  neapolitanMaj: {\n    handle: \"neapolitanMaj\",\n    name: \"Neapolitan major\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1]\n  },\n  neapolitanMin: {\n    handle: \"neapolitanMin\",\n    name: \"Neapolitan minor\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1]\n  },\n  octatonic: {\n    handle: \"octatonic\",\n    name: \"Octatonic (diminished)\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1]\n  },\n  persian: {\n    handle: \"persian\",\n    name: \"Persian\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1]\n  },\n  phrygianDom: {\n    handle: \"phrygianDom\",\n    name: \"Phrygian dominant\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0]\n  },\n  prometheus: {\n    handle: \"prometheus\",\n    name: \"Prometheus\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0]\n  },\n  tritone: {\n    handle: \"tritone\",\n    name: \"Tritone\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0]\n  },\n  ukranianDorian: {\n    handle: \"ukranianDorian\",\n    name: \"Ukranian dorian\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0]\n  },\n  wholeTone: {\n    handle: \"wholeTone\",\n    name: \"Whole tone\",\n    chords: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    steps: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]\n  },\n  chromatic: {\n    handle: \"chromatic\",\n    name: \"Chromatic\",\n    chords: [\n      \"1/1\",\n      \"25/24\",\n      \"9/8\",\n      \"6/5\",\n      \"5/4\",\n      \"4/3\",\n      \"45/32\",\n      \"3/2\",\n      \"8/5\",\n      \"5/3\",\n      \"9/5\",\n      \"15/8\"\n    ],\n    steps: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n  }\n};\nconst allNotes = [...notes].map((n2, i2) => ({ name: n2, pitch: i2 }));\nconst globalScale = reactive({\n  tonic: useClamp(useStorage(\"global-tonic\", 0), 0, 11),\n  note: computed(() => allNotes[globalScale.tonic]),\n  chroma: useStorage(\"global-chroma\", \"101011010101\"),\n  set: computed(() => index$1$1.get(globalScale.chroma)),\n  full: computed(() => {\n    let sc = globalScale.note.name + \"4 \" + globalScale.set.name;\n    return index.get(sc);\n  }),\n  pcs: computed(() => index.scaleNotes(globalScale.full.notes)),\n  isIn: computed(() => index$5.isNoteIncludedIn(globalScale.pcs))\n});\nfunction getChromaNotes(chroma2 = \"100010010000\", tonic = globalScale.tonic) {\n  let shiftChroma = rotateArray(chroma2.split(\"\"), -tonic);\n  let chOct = rotateArray(allNotes, -tonic).map((n2, i2) => {\n    let noteName = Frequency(n2.pitch + tonic + 57, \"midi\").toNote();\n    return noteName;\n  });\n  let filtered = chOct.filter((val, i2) => {\n    if (shiftChroma[i2] == \"1\") {\n      return true;\n    }\n  });\n  return index$2.sortedNames(filtered);\n}\nfunction playChromaOnce(chroma2, tonic) {\n  let notes2 = getChromaNotes(chroma2, tonic);\n  notes2.forEach((name2, i2) => {\n    midiOnce(name2);\n  });\n  synthOnce(notes2, \"4n\");\n}\nfunction playChroma(chroma2, tonic) {\n  let notes2 = getChromaNotes(chroma2, tonic);\n  notes2.forEach((name2) => {\n    midiPlay(name2);\n  });\n  synthAttack(notes2);\n}\nfunction stopChroma(chroma2, tonic) {\n  let notes2 = getChromaNotes(chroma2, tonic);\n  notes2.forEach((name2) => {\n    midiStop(name2);\n  });\n  synthRelease(notes2);\n}\nfunction playNote(name2) {\n  midiPlay(name2);\n  synthAttack(name2);\n}\nfunction stopNote(name2) {\n  midiStop(name2);\n  synthRelease(name2);\n}\nvar r$5 = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) }, t$5 = function(r2) {\n  return typeof r2 == \"string\" ? r2.length > 0 : typeof r2 == \"number\";\n}, n$5 = function(r2, t2, n2) {\n  return t2 === void 0 && (t2 = 0), n2 === void 0 && (n2 = Math.pow(10, t2)), Math.round(n2 * r2) / n2 + 0;\n}, e$5 = function(r2, t2, n2) {\n  return t2 === void 0 && (t2 = 0), n2 === void 0 && (n2 = 1), r2 > n2 ? n2 : r2 > t2 ? r2 : t2;\n}, u$5 = function(r2) {\n  return (r2 = isFinite(r2) ? r2 % 360 : 0) > 0 ? r2 : r2 + 360;\n}, a$5 = function(r2) {\n  return { r: e$5(r2.r, 0, 255), g: e$5(r2.g, 0, 255), b: e$5(r2.b, 0, 255), a: e$5(r2.a) };\n}, o$5 = function(r2) {\n  return { r: n$5(r2.r), g: n$5(r2.g), b: n$5(r2.b), a: n$5(r2.a, 3) };\n}, i$5 = /^#([0-9a-f]{3,8})$/i, s$1 = function(r2) {\n  var t2 = r2.toString(16);\n  return t2.length < 2 ? \"0\" + t2 : t2;\n}, h$4 = function(r2) {\n  var t2 = r2.r, n2 = r2.g, e2 = r2.b, u2 = r2.a, a2 = Math.max(t2, n2, e2), o2 = a2 - Math.min(t2, n2, e2), i2 = o2 ? a2 === t2 ? (n2 - e2) / o2 : a2 === n2 ? 2 + (e2 - t2) / o2 : 4 + (t2 - n2) / o2 : 0;\n  return { h: 60 * (i2 < 0 ? i2 + 6 : i2), s: a2 ? o2 / a2 * 100 : 0, v: a2 / 255 * 100, a: u2 };\n}, b$3 = function(r2) {\n  var t2 = r2.h, n2 = r2.s, e2 = r2.v, u2 = r2.a;\n  t2 = t2 / 360 * 6, n2 /= 100, e2 /= 100;\n  var a2 = Math.floor(t2), o2 = e2 * (1 - n2), i2 = e2 * (1 - (t2 - a2) * n2), s2 = e2 * (1 - (1 - t2 + a2) * n2), h2 = a2 % 6;\n  return { r: 255 * [e2, i2, o2, o2, s2, e2][h2], g: 255 * [s2, e2, e2, i2, o2, o2][h2], b: 255 * [o2, o2, s2, e2, e2, i2][h2], a: u2 };\n}, g = function(r2) {\n  return { h: u$5(r2.h), s: e$5(r2.s, 0, 100), l: e$5(r2.l, 0, 100), a: e$5(r2.a) };\n}, d$2 = function(r2) {\n  return { h: n$5(r2.h), s: n$5(r2.s), l: n$5(r2.l), a: n$5(r2.a, 3) };\n}, f$2 = function(r2) {\n  return b$3((n2 = (t2 = r2).s, { h: t2.h, s: (n2 *= ((e2 = t2.l) < 50 ? e2 : 100 - e2) / 100) > 0 ? 2 * n2 / (e2 + n2) * 100 : 0, v: e2 + n2, a: t2.a }));\n  var t2, n2, e2;\n}, c$3 = function(r2) {\n  return { h: (t2 = h$4(r2)).h, s: (u2 = (200 - (n2 = t2.s)) * (e2 = t2.v) / 100) > 0 && u2 < 200 ? n2 * e2 / 100 / (u2 <= 100 ? u2 : 200 - u2) * 100 : 0, l: u2 / 2, a: t2.a };\n  var t2, n2, e2, u2;\n}, l$2 = /^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i, p$3 = /^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i, v$1 = /^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i, m$1 = /^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i, y$1 = { string: [[function(r2) {\n  var t2 = i$5.exec(r2);\n  return t2 ? (r2 = t2[1]).length <= 4 ? { r: parseInt(r2[0] + r2[0], 16), g: parseInt(r2[1] + r2[1], 16), b: parseInt(r2[2] + r2[2], 16), a: r2.length === 4 ? n$5(parseInt(r2[3] + r2[3], 16) / 255, 2) : 1 } : r2.length === 6 || r2.length === 8 ? { r: parseInt(r2.substr(0, 2), 16), g: parseInt(r2.substr(2, 2), 16), b: parseInt(r2.substr(4, 2), 16), a: r2.length === 8 ? n$5(parseInt(r2.substr(6, 2), 16) / 255, 2) : 1 } : null : null;\n}, \"hex\"], [function(r2) {\n  var t2 = v$1.exec(r2) || m$1.exec(r2);\n  return t2 ? t2[2] !== t2[4] || t2[4] !== t2[6] ? null : a$5({ r: Number(t2[1]) / (t2[2] ? 100 / 255 : 1), g: Number(t2[3]) / (t2[4] ? 100 / 255 : 1), b: Number(t2[5]) / (t2[6] ? 100 / 255 : 1), a: t2[7] === void 0 ? 1 : Number(t2[7]) / (t2[8] ? 100 : 1) }) : null;\n}, \"rgb\"], [function(t2) {\n  var n2 = l$2.exec(t2) || p$3.exec(t2);\n  if (!n2)\n    return null;\n  var e2, u2, a2 = g({ h: (e2 = n2[1], u2 = n2[2], u2 === void 0 && (u2 = \"deg\"), Number(e2) * (r$5[u2] || 1)), s: Number(n2[3]), l: Number(n2[4]), a: n2[5] === void 0 ? 1 : Number(n2[5]) / (n2[6] ? 100 : 1) });\n  return f$2(a2);\n}, \"hsl\"]], object: [[function(r2) {\n  var n2 = r2.r, e2 = r2.g, u2 = r2.b, o2 = r2.a, i2 = o2 === void 0 ? 1 : o2;\n  return t$5(n2) && t$5(e2) && t$5(u2) ? a$5({ r: Number(n2), g: Number(e2), b: Number(u2), a: Number(i2) }) : null;\n}, \"rgb\"], [function(r2) {\n  var n2 = r2.h, e2 = r2.s, u2 = r2.l, a2 = r2.a, o2 = a2 === void 0 ? 1 : a2;\n  if (!t$5(n2) || !t$5(e2) || !t$5(u2))\n    return null;\n  var i2 = g({ h: Number(n2), s: Number(e2), l: Number(u2), a: Number(o2) });\n  return f$2(i2);\n}, \"hsl\"], [function(r2) {\n  var n2 = r2.h, a2 = r2.s, o2 = r2.v, i2 = r2.a, s2 = i2 === void 0 ? 1 : i2;\n  if (!t$5(n2) || !t$5(a2) || !t$5(o2))\n    return null;\n  var h2 = function(r3) {\n    return { h: u$5(r3.h), s: e$5(r3.s, 0, 100), v: e$5(r3.v, 0, 100), a: e$5(r3.a) };\n  }({ h: Number(n2), s: Number(a2), v: Number(o2), a: Number(s2) });\n  return b$3(h2);\n}, \"hsv\"]] }, N = function(r2, t2) {\n  for (var n2 = 0; n2 < t2.length; n2++) {\n    var e2 = t2[n2][0](r2);\n    if (e2)\n      return [e2, t2[n2][1]];\n  }\n  return [null, void 0];\n}, x$2 = function(r2) {\n  return typeof r2 == \"string\" ? N(r2.trim(), y$1.string) : typeof r2 == \"object\" && r2 !== null ? N(r2, y$1.object) : [null, void 0];\n}, M$2 = function(r2, t2) {\n  var n2 = c$3(r2);\n  return { h: n2.h, s: e$5(n2.s + 100 * t2, 0, 100), l: n2.l, a: n2.a };\n}, H = function(r2) {\n  return (299 * r2.r + 587 * r2.g + 114 * r2.b) / 1e3 / 255;\n}, $ = function(r2, t2) {\n  var n2 = c$3(r2);\n  return { h: n2.h, s: n2.s, l: e$5(n2.l + 100 * t2, 0, 100), a: n2.a };\n}, j = function() {\n  function r2(r3) {\n    this.parsed = x$2(r3)[0], this.rgba = this.parsed || { r: 0, g: 0, b: 0, a: 1 };\n  }\n  return r2.prototype.isValid = function() {\n    return this.parsed !== null;\n  }, r2.prototype.brightness = function() {\n    return n$5(H(this.rgba), 2);\n  }, r2.prototype.isDark = function() {\n    return H(this.rgba) < 0.5;\n  }, r2.prototype.isLight = function() {\n    return H(this.rgba) >= 0.5;\n  }, r2.prototype.toHex = function() {\n    return r3 = o$5(this.rgba), t2 = r3.r, e2 = r3.g, u2 = r3.b, i2 = (a2 = r3.a) < 1 ? s$1(n$5(255 * a2)) : \"\", \"#\" + s$1(t2) + s$1(e2) + s$1(u2) + i2;\n    var r3, t2, e2, u2, a2, i2;\n  }, r2.prototype.toRgb = function() {\n    return o$5(this.rgba);\n  }, r2.prototype.toRgbString = function() {\n    return r3 = o$5(this.rgba), t2 = r3.r, n2 = r3.g, e2 = r3.b, (u2 = r3.a) < 1 ? \"rgba(\" + t2 + \", \" + n2 + \", \" + e2 + \", \" + u2 + \")\" : \"rgb(\" + t2 + \", \" + n2 + \", \" + e2 + \")\";\n    var r3, t2, n2, e2, u2;\n  }, r2.prototype.toHsl = function() {\n    return d$2(c$3(this.rgba));\n  }, r2.prototype.toHslString = function() {\n    return r3 = d$2(c$3(this.rgba)), t2 = r3.h, n2 = r3.s, e2 = r3.l, (u2 = r3.a) < 1 ? \"hsla(\" + t2 + \", \" + n2 + \"%, \" + e2 + \"%, \" + u2 + \")\" : \"hsl(\" + t2 + \", \" + n2 + \"%, \" + e2 + \"%)\";\n    var r3, t2, n2, e2, u2;\n  }, r2.prototype.toHsv = function() {\n    return r3 = h$4(this.rgba), { h: n$5(r3.h), s: n$5(r3.s), v: n$5(r3.v), a: n$5(r3.a, 3) };\n    var r3;\n  }, r2.prototype.invert = function() {\n    return w$1({ r: 255 - (r3 = this.rgba).r, g: 255 - r3.g, b: 255 - r3.b, a: r3.a });\n    var r3;\n  }, r2.prototype.saturate = function(r3) {\n    return r3 === void 0 && (r3 = 0.1), w$1(M$2(this.rgba, r3));\n  }, r2.prototype.desaturate = function(r3) {\n    return r3 === void 0 && (r3 = 0.1), w$1(M$2(this.rgba, -r3));\n  }, r2.prototype.grayscale = function() {\n    return w$1(M$2(this.rgba, -1));\n  }, r2.prototype.lighten = function(r3) {\n    return r3 === void 0 && (r3 = 0.1), w$1($(this.rgba, r3));\n  }, r2.prototype.darken = function(r3) {\n    return r3 === void 0 && (r3 = 0.1), w$1($(this.rgba, -r3));\n  }, r2.prototype.rotate = function(r3) {\n    return r3 === void 0 && (r3 = 15), this.hue(this.hue() + r3);\n  }, r2.prototype.alpha = function(r3) {\n    return typeof r3 == \"number\" ? w$1({ r: (t2 = this.rgba).r, g: t2.g, b: t2.b, a: r3 }) : n$5(this.rgba.a, 3);\n    var t2;\n  }, r2.prototype.hue = function(r3) {\n    var t2 = c$3(this.rgba);\n    return typeof r3 == \"number\" ? w$1({ h: r3, s: t2.s, l: t2.l, a: t2.a }) : n$5(t2.h);\n  }, r2.prototype.isEqual = function(r3) {\n    return this.toHex() === w$1(r3).toHex();\n  }, r2;\n}(), w$1 = function(r2) {\n  return r2 instanceof j ? r2 : new j(r2);\n}, S = [], k = function(r2) {\n  r2.forEach(function(r3) {\n    S.indexOf(r3) < 0 && (r3(j, y$1), S.push(r3));\n  });\n};\nvar r$4 = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) }, t$4 = function(r2) {\n  return typeof r2 == \"string\" ? r2.length > 0 : typeof r2 == \"number\";\n}, a$4 = function(r2, t2, a2) {\n  return t2 === void 0 && (t2 = 0), a2 === void 0 && (a2 = Math.pow(10, t2)), Math.round(a2 * r2) / a2 + 0;\n}, n$4 = function(r2, t2, a2) {\n  return t2 === void 0 && (t2 = 0), a2 === void 0 && (a2 = 1), r2 > a2 ? a2 : r2 > t2 ? r2 : t2;\n}, u$4 = function(r2) {\n  var t2 = r2 / 255;\n  return t2 < 0.04045 ? t2 / 12.92 : Math.pow((t2 + 0.055) / 1.055, 2.4);\n}, h$3 = function(r2) {\n  return 255 * (r2 > 31308e-7 ? 1.055 * Math.pow(r2, 1 / 2.4) - 0.055 : 12.92 * r2);\n}, o$4 = 96.422, e$4 = 100, c$2 = 82.521, i$4 = function(r2) {\n  var t2, a2, u2 = { x: 0.9555766 * (t2 = r2).x + -0.0230393 * t2.y + 0.0631636 * t2.z, y: -0.0282895 * t2.x + 1.0099416 * t2.y + 0.0210077 * t2.z, z: 0.0122982 * t2.x + -0.020483 * t2.y + 1.3299098 * t2.z };\n  return a2 = { r: h$3(0.032404542 * u2.x - 0.015371385 * u2.y - 4985314e-9 * u2.z), g: h$3(-969266e-8 * u2.x + 0.018760108 * u2.y + 41556e-8 * u2.z), b: h$3(556434e-9 * u2.x - 2040259e-9 * u2.y + 0.010572252 * u2.z), a: r2.a }, { r: n$4(a2.r, 0, 255), g: n$4(a2.g, 0, 255), b: n$4(a2.b, 0, 255), a: n$4(a2.a) };\n}, l$1 = function(r2) {\n  var t2 = u$4(r2.r), a2 = u$4(r2.g), h2 = u$4(r2.b);\n  return function(r3) {\n    return { x: n$4(r3.x, 0, o$4), y: n$4(r3.y, 0, e$4), z: n$4(r3.z, 0, c$2), a: n$4(r3.a) };\n  }(function(r3) {\n    return { x: 1.0478112 * r3.x + 0.0228866 * r3.y + -0.050127 * r3.z, y: 0.0295424 * r3.x + 0.9904844 * r3.y + -0.0170491 * r3.z, z: -92345e-7 * r3.x + 0.0150436 * r3.y + 0.7521316 * r3.z, a: r3.a };\n  }({ x: 100 * (0.4124564 * t2 + 0.3575761 * a2 + 0.1804375 * h2), y: 100 * (0.2126729 * t2 + 0.7151522 * a2 + 0.072175 * h2), z: 100 * (0.0193339 * t2 + 0.119192 * a2 + 0.9503041 * h2), a: r2.a }));\n}, f$1 = 216 / 24389, b$2 = 24389 / 27, d$1 = function(r2) {\n  return { l: n$4(r2.l, 0, 100), c: r2.c, h: (t2 = r2.h, (t2 = isFinite(t2) ? t2 % 360 : 0) > 0 ? t2 : t2 + 360), a: r2.a };\n  var t2;\n}, p$2 = function(r2) {\n  return { l: a$4(r2.l, 2), c: a$4(r2.c, 2), h: a$4(r2.h, 2), a: a$4(r2.a, 3) };\n}, v = function(r2) {\n  var a2 = r2.l, n2 = r2.c, u2 = r2.h, h2 = r2.a, o2 = h2 === void 0 ? 1 : h2;\n  if (!t$4(a2) || !t$4(n2) || !t$4(u2))\n    return null;\n  var e2 = d$1({ l: Number(a2), c: Number(n2), h: Number(u2), a: Number(o2) });\n  return M$1(e2);\n}, y = function(r2) {\n  var t2 = function(r3) {\n    var t3 = l$1(r3), a2 = t3.x / o$4, n3 = t3.y / e$4, u3 = t3.z / c$2;\n    return a2 = a2 > f$1 ? Math.cbrt(a2) : (b$2 * a2 + 16) / 116, { l: 116 * (n3 = n3 > f$1 ? Math.cbrt(n3) : (b$2 * n3 + 16) / 116) - 16, a: 500 * (a2 - n3), b: 200 * (n3 - (u3 = u3 > f$1 ? Math.cbrt(u3) : (b$2 * u3 + 16) / 116)), alpha: t3.a };\n  }(r2), n2 = a$4(t2.a, 3), u2 = a$4(t2.b, 3), h2 = Math.atan2(u2, n2) / Math.PI * 180;\n  return { l: t2.l, c: Math.sqrt(n2 * n2 + u2 * u2), h: h2 < 0 ? h2 + 360 : h2, a: t2.alpha };\n}, M$1 = function(r2) {\n  return t2 = { l: r2.l, a: r2.c * Math.cos(r2.h * Math.PI / 180), b: r2.c * Math.sin(r2.h * Math.PI / 180), alpha: r2.a }, n2 = t2.a / 500 + (a2 = (t2.l + 16) / 116), u2 = a2 - t2.b / 200, i$4({ x: (Math.pow(n2, 3) > f$1 ? Math.pow(n2, 3) : (116 * n2 - 16) / b$2) * o$4, y: (t2.l > 8 ? Math.pow((t2.l + 16) / 116, 3) : t2.l / b$2) * e$4, z: (Math.pow(u2, 3) > f$1 ? Math.pow(u2, 3) : (116 * u2 - 16) / b$2) * c$2, a: t2.alpha });\n  var t2, a2, n2, u2;\n}, x$1 = /^lch\\(\\s*([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)\\s+([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i, s = function(t2) {\n  var a2 = x$1.exec(t2);\n  if (!a2)\n    return null;\n  var n2, u2, h2 = d$1({ l: Number(a2[1]), c: Number(a2[2]), h: (n2 = a2[3], u2 = a2[4], u2 === void 0 && (u2 = \"deg\"), Number(n2) * (r$4[u2] || 1)), a: a2[5] === void 0 ? 1 : Number(a2[5]) / (a2[6] ? 100 : 1) });\n  return M$1(h2);\n};\nfunction lchPlugin(r2, t2) {\n  r2.prototype.toLch = function() {\n    return p$2(y(this.rgba));\n  }, r2.prototype.toLchString = function() {\n    return r3 = p$2(y(this.rgba)), t3 = r3.l, a2 = r3.c, n2 = r3.h, (u2 = r3.a) < 1 ? \"lch(\" + t3 + \"% \" + a2 + \" \" + n2 + \" / \" + u2 + \")\" : \"lch(\" + t3 + \"% \" + a2 + \" \" + n2 + \")\";\n    var r3, t3, a2, n2, u2;\n  }, t2.string.push([s, \"lch\"]), t2.object.push([v, \"lch\"]);\n}\nvar t$3 = function(t2, a2, n2) {\n  return a2 === void 0 && (a2 = 0), n2 === void 0 && (n2 = 1), t2 > n2 ? n2 : t2 > a2 ? t2 : a2;\n}, a$3 = function(t2) {\n  var a2 = t2 / 255;\n  return a2 < 0.04045 ? a2 / 12.92 : Math.pow((a2 + 0.055) / 1.055, 2.4);\n}, n$3 = function(t2) {\n  return 255 * (t2 > 31308e-7 ? 1.055 * Math.pow(t2, 1 / 2.4) - 0.055 : 12.92 * t2);\n}, r$3 = 96.422, o$3 = 100, u$3 = 82.521, e$3 = function(a2) {\n  var r2, o2, u2 = { x: 0.9555766 * (r2 = a2).x + -0.0230393 * r2.y + 0.0631636 * r2.z, y: -0.0282895 * r2.x + 1.0099416 * r2.y + 0.0210077 * r2.z, z: 0.0122982 * r2.x + -0.020483 * r2.y + 1.3299098 * r2.z };\n  return o2 = { r: n$3(0.032404542 * u2.x - 0.015371385 * u2.y - 4985314e-9 * u2.z), g: n$3(-969266e-8 * u2.x + 0.018760108 * u2.y + 41556e-8 * u2.z), b: n$3(556434e-9 * u2.x - 2040259e-9 * u2.y + 0.010572252 * u2.z), a: a2.a }, { r: t$3(o2.r, 0, 255), g: t$3(o2.g, 0, 255), b: t$3(o2.b, 0, 255), a: t$3(o2.a) };\n}, i$3 = function(n2) {\n  var e2 = a$3(n2.r), i2 = a$3(n2.g), p2 = a$3(n2.b);\n  return function(a2) {\n    return { x: t$3(a2.x, 0, r$3), y: t$3(a2.y, 0, o$3), z: t$3(a2.z, 0, u$3), a: t$3(a2.a) };\n  }(function(t2) {\n    return { x: 1.0478112 * t2.x + 0.0228866 * t2.y + -0.050127 * t2.z, y: 0.0295424 * t2.x + 0.9904844 * t2.y + -0.0170491 * t2.z, z: -92345e-7 * t2.x + 0.0150436 * t2.y + 0.7521316 * t2.z, a: t2.a };\n  }({ x: 100 * (0.4124564 * e2 + 0.3575761 * i2 + 0.1804375 * p2), y: 100 * (0.2126729 * e2 + 0.7151522 * i2 + 0.072175 * p2), z: 100 * (0.0193339 * e2 + 0.119192 * i2 + 0.9503041 * p2), a: n2.a }));\n}, p$1 = 216 / 24389, h$2 = 24389 / 27, f = function(t2) {\n  var a2 = i$3(t2), n2 = a2.x / r$3, e2 = a2.y / o$3, f2 = a2.z / u$3;\n  return n2 = n2 > p$1 ? Math.cbrt(n2) : (h$2 * n2 + 16) / 116, { l: 116 * (e2 = e2 > p$1 ? Math.cbrt(e2) : (h$2 * e2 + 16) / 116) - 16, a: 500 * (n2 - e2), b: 200 * (e2 - (f2 = f2 > p$1 ? Math.cbrt(f2) : (h$2 * f2 + 16) / 116)), alpha: a2.a };\n}, c$1 = function(a2, n2, i2) {\n  var c2, y2 = f(a2), x2 = f(n2);\n  return function(t2) {\n    var a3 = (t2.l + 16) / 116, n3 = t2.a / 500 + a3, i3 = a3 - t2.b / 200;\n    return e$3({ x: (Math.pow(n3, 3) > p$1 ? Math.pow(n3, 3) : (116 * n3 - 16) / h$2) * r$3, y: (t2.l > 8 ? Math.pow((t2.l + 16) / 116, 3) : t2.l / h$2) * o$3, z: (Math.pow(i3, 3) > p$1 ? Math.pow(i3, 3) : (116 * i3 - 16) / h$2) * u$3, a: t2.alpha });\n  }({ l: t$3((c2 = { l: y2.l * (1 - i2) + x2.l * i2, a: y2.a * (1 - i2) + x2.a * i2, b: y2.b * (1 - i2) + x2.b * i2, alpha: y2.alpha * (1 - i2) + x2.alpha * i2 }).l, 0, 400), a: c2.a, b: c2.b, alpha: t$3(c2.alpha) });\n};\nfunction mixPlugin(t2) {\n  function a2(t3, a3, n2) {\n    n2 === void 0 && (n2 = 5);\n    for (var r2 = [], o2 = 1 / (n2 - 1), u2 = 0; u2 <= n2 - 1; u2++)\n      r2.push(t3.mix(a3, o2 * u2));\n    return r2;\n  }\n  t2.prototype.mix = function(a3, n2) {\n    n2 === void 0 && (n2 = 0.5);\n    var r2 = a3 instanceof t2 ? a3 : new t2(a3), o2 = c$1(this.toRgb(), r2.toRgb(), n2);\n    return new t2(o2);\n  }, t2.prototype.tints = function(t3) {\n    return a2(this, \"#fff\", t3);\n  }, t2.prototype.shades = function(t3) {\n    return a2(this, \"#000\", t3);\n  }, t2.prototype.tones = function(t3) {\n    return a2(this, \"#808080\", t3);\n  };\n}\nfunction namesPlugin(e2, f2) {\n  var a2 = { white: \"#ffffff\", bisque: \"#ffe4c4\", blue: \"#0000ff\", cadetblue: \"#5f9ea0\", chartreuse: \"#7fff00\", chocolate: \"#d2691e\", coral: \"#ff7f50\", antiquewhite: \"#faebd7\", aqua: \"#00ffff\", azure: \"#f0ffff\", whitesmoke: \"#f5f5f5\", papayawhip: \"#ffefd5\", plum: \"#dda0dd\", blanchedalmond: \"#ffebcd\", black: \"#000000\", gold: \"#ffd700\", goldenrod: \"#daa520\", gainsboro: \"#dcdcdc\", cornsilk: \"#fff8dc\", cornflowerblue: \"#6495ed\", burlywood: \"#deb887\", aquamarine: \"#7fffd4\", beige: \"#f5f5dc\", crimson: \"#dc143c\", cyan: \"#00ffff\", darkblue: \"#00008b\", darkcyan: \"#008b8b\", darkgoldenrod: \"#b8860b\", darkkhaki: \"#bdb76b\", darkgray: \"#a9a9a9\", darkgreen: \"#006400\", darkgrey: \"#a9a9a9\", peachpuff: \"#ffdab9\", darkmagenta: \"#8b008b\", darkred: \"#8b0000\", darkorchid: \"#9932cc\", darkorange: \"#ff8c00\", darkslateblue: \"#483d8b\", gray: \"#808080\", darkslategray: \"#2f4f4f\", darkslategrey: \"#2f4f4f\", deeppink: \"#ff1493\", deepskyblue: \"#00bfff\", wheat: \"#f5deb3\", firebrick: \"#b22222\", floralwhite: \"#fffaf0\", ghostwhite: \"#f8f8ff\", darkviolet: \"#9400d3\", magenta: \"#ff00ff\", green: \"#008000\", dodgerblue: \"#1e90ff\", grey: \"#808080\", honeydew: \"#f0fff0\", hotpink: \"#ff69b4\", blueviolet: \"#8a2be2\", forestgreen: \"#228b22\", lawngreen: \"#7cfc00\", indianred: \"#cd5c5c\", indigo: \"#4b0082\", fuchsia: \"#ff00ff\", brown: \"#a52a2a\", maroon: \"#800000\", mediumblue: \"#0000cd\", lightcoral: \"#f08080\", darkturquoise: \"#00ced1\", lightcyan: \"#e0ffff\", ivory: \"#fffff0\", lightyellow: \"#ffffe0\", lightsalmon: \"#ffa07a\", lightseagreen: \"#20b2aa\", linen: \"#faf0e6\", mediumaquamarine: \"#66cdaa\", lemonchiffon: \"#fffacd\", lime: \"#00ff00\", khaki: \"#f0e68c\", mediumseagreen: \"#3cb371\", limegreen: \"#32cd32\", mediumspringgreen: \"#00fa9a\", lightskyblue: \"#87cefa\", lightblue: \"#add8e6\", midnightblue: \"#191970\", lightpink: \"#ffb6c1\", mistyrose: \"#ffe4e1\", moccasin: \"#ffe4b5\", mintcream: \"#f5fffa\", lightslategray: \"#778899\", lightslategrey: \"#778899\", navajowhite: \"#ffdead\", navy: \"#000080\", mediumvioletred: \"#c71585\", powderblue: \"#b0e0e6\", palegoldenrod: \"#eee8aa\", oldlace: \"#fdf5e6\", paleturquoise: \"#afeeee\", mediumturquoise: \"#48d1cc\", mediumorchid: \"#ba55d3\", rebeccapurple: \"#663399\", lightsteelblue: \"#b0c4de\", mediumslateblue: \"#7b68ee\", thistle: \"#d8bfd8\", tan: \"#d2b48c\", orchid: \"#da70d6\", mediumpurple: \"#9370db\", purple: \"#800080\", pink: \"#ffc0cb\", skyblue: \"#87ceeb\", springgreen: \"#00ff7f\", palegreen: \"#98fb98\", red: \"#ff0000\", yellow: \"#ffff00\", slateblue: \"#6a5acd\", lavenderblush: \"#fff0f5\", peru: \"#cd853f\", palevioletred: \"#db7093\", violet: \"#ee82ee\", teal: \"#008080\", slategray: \"#708090\", slategrey: \"#708090\", aliceblue: \"#f0f8ff\", darkseagreen: \"#8fbc8f\", darkolivegreen: \"#556b2f\", greenyellow: \"#adff2f\", seagreen: \"#2e8b57\", seashell: \"#fff5ee\", tomato: \"#ff6347\", silver: \"#c0c0c0\", sienna: \"#a0522d\", lavender: \"#e6e6fa\", lightgreen: \"#90ee90\", orange: \"#ffa500\", orangered: \"#ff4500\", steelblue: \"#4682b4\", royalblue: \"#4169e1\", turquoise: \"#40e0d0\", yellowgreen: \"#9acd32\", salmon: \"#fa8072\", saddlebrown: \"#8b4513\", sandybrown: \"#f4a460\", rosybrown: \"#bc8f8f\", darksalmon: \"#e9967a\", lightgoldenrodyellow: \"#fafad2\", snow: \"#fffafa\", lightgrey: \"#d3d3d3\", lightgray: \"#d3d3d3\", dimgray: \"#696969\", dimgrey: \"#696969\", olivedrab: \"#6b8e23\", olive: \"#808000\" }, r2 = {};\n  for (var d2 in a2)\n    r2[a2[d2]] = d2;\n  var l2 = {};\n  e2.prototype.toName = function(f3) {\n    if (!(this.rgba.a || this.rgba.r || this.rgba.g || this.rgba.b))\n      return \"transparent\";\n    var d3, i2, n2 = r2[this.toHex()];\n    if (n2)\n      return n2;\n    if (f3 == null ? void 0 : f3.closest) {\n      var o2 = this.toRgb(), t2 = 1 / 0, b2 = \"black\";\n      if (!l2.length)\n        for (var c2 in a2)\n          l2[c2] = new e2(a2[c2]).toRgb();\n      for (var g2 in a2) {\n        var u2 = (d3 = o2, i2 = l2[g2], Math.pow(d3.r - i2.r, 2) + Math.pow(d3.g - i2.g, 2) + Math.pow(d3.b - i2.b, 2));\n        u2 < t2 && (t2 = u2, b2 = g2);\n      }\n      return b2;\n    }\n  };\n  f2.string.push([function(f3) {\n    var r3 = f3.toLowerCase(), d3 = r3 === \"transparent\" ? \"#0000\" : a2[r3];\n    return d3 ? new e2(d3).toRgb() : null;\n  }, \"name\"]);\n}\nvar a$2 = function(a2) {\n  return typeof a2 == \"string\" ? a2.length > 0 : typeof a2 == \"number\";\n}, t$2 = function(a2, t2, o2) {\n  return t2 === void 0 && (t2 = 0), o2 === void 0 && (o2 = Math.pow(10, t2)), Math.round(o2 * a2) / o2 + 0;\n}, o$2 = function(a2, t2, o2) {\n  return t2 === void 0 && (t2 = 0), o2 === void 0 && (o2 = 1), a2 > o2 ? o2 : a2 > t2 ? a2 : t2;\n}, r$2 = function(a2) {\n  var t2 = a2 / 255;\n  return t2 < 0.04045 ? t2 / 12.92 : Math.pow((t2 + 0.055) / 1.055, 2.4);\n}, h$1 = function(a2) {\n  return 255 * (a2 > 31308e-7 ? 1.055 * Math.pow(a2, 1 / 2.4) - 0.055 : 12.92 * a2);\n}, n$2 = 96.422, p = 100, M = 82.521, u$2 = function(a2) {\n  var t2, r2, n2 = { x: 0.9555766 * (t2 = a2).x + -0.0230393 * t2.y + 0.0631636 * t2.z, y: -0.0282895 * t2.x + 1.0099416 * t2.y + 0.0210077 * t2.z, z: 0.0122982 * t2.x + -0.020483 * t2.y + 1.3299098 * t2.z };\n  return r2 = { r: h$1(0.032404542 * n2.x - 0.015371385 * n2.y - 4985314e-9 * n2.z), g: h$1(-969266e-8 * n2.x + 0.018760108 * n2.y + 41556e-8 * n2.z), b: h$1(556434e-9 * n2.x - 2040259e-9 * n2.y + 0.010572252 * n2.z), a: a2.a }, { r: o$2(r2.r, 0, 255), g: o$2(r2.g, 0, 255), b: o$2(r2.b, 0, 255), a: o$2(r2.a) };\n}, e$2 = function(a2) {\n  var t2 = r$2(a2.r), h2 = r$2(a2.g), u2 = r$2(a2.b);\n  return function(a3) {\n    return { x: o$2(a3.x, 0, n$2), y: o$2(a3.y, 0, p), z: o$2(a3.z, 0, M), a: o$2(a3.a) };\n  }(function(a3) {\n    return { x: 1.0478112 * a3.x + 0.0228866 * a3.y + -0.050127 * a3.z, y: 0.0295424 * a3.x + 0.9904844 * a3.y + -0.0170491 * a3.z, z: -92345e-7 * a3.x + 0.0150436 * a3.y + 0.7521316 * a3.z, a: a3.a };\n  }({ x: 100 * (0.4124564 * t2 + 0.3575761 * h2 + 0.1804375 * u2), y: 100 * (0.2126729 * t2 + 0.7151522 * h2 + 0.072175 * u2), z: 100 * (0.0193339 * t2 + 0.119192 * h2 + 0.9503041 * u2), a: a2.a }));\n}, w = 216 / 24389, b$1 = 24389 / 27, i$2 = function(t2) {\n  var r2 = t2.l, h2 = t2.a, n2 = t2.b, p2 = t2.alpha, M2 = p2 === void 0 ? 1 : p2;\n  if (!a$2(r2) || !a$2(h2) || !a$2(n2))\n    return null;\n  var u2 = function(a2) {\n    return { l: o$2(a2.l, 0, 400), a: a2.a, b: a2.b, alpha: o$2(a2.alpha) };\n  }({ l: Number(r2), a: Number(h2), b: Number(n2), alpha: Number(M2) });\n  return l(u2);\n}, l = function(a2) {\n  var t2 = (a2.l + 16) / 116, o2 = a2.a / 500 + t2, r2 = t2 - a2.b / 200;\n  return u$2({ x: (Math.pow(o2, 3) > w ? Math.pow(o2, 3) : (116 * o2 - 16) / b$1) * n$2, y: (a2.l > 8 ? Math.pow((a2.l + 16) / 116, 3) : a2.l / b$1) * p, z: (Math.pow(r2, 3) > w ? Math.pow(r2, 3) : (116 * r2 - 16) / b$1) * M, a: a2.alpha });\n};\nfunction labPlugin(a2, r2) {\n  a2.prototype.toLab = function() {\n    return o2 = e$2(this.rgba), h2 = o2.y / p, u2 = o2.z / M, r3 = (r3 = o2.x / n$2) > w ? Math.cbrt(r3) : (b$1 * r3 + 16) / 116, a3 = { l: 116 * (h2 = h2 > w ? Math.cbrt(h2) : (b$1 * h2 + 16) / 116) - 16, a: 500 * (r3 - h2), b: 200 * (h2 - (u2 = u2 > w ? Math.cbrt(u2) : (b$1 * u2 + 16) / 116)), alpha: o2.a }, { l: t$2(a3.l, 2), a: t$2(a3.a, 2), b: t$2(a3.b, 2), alpha: t$2(a3.alpha, 3) };\n    var a3, o2, r3, h2, u2;\n  }, a2.prototype.delta = function(r3) {\n    r3 === void 0 && (r3 = \"#FFF\");\n    var h2 = r3 instanceof a2 ? r3 : new a2(r3), n2 = function(a3, t2) {\n      var o2 = a3.l, r4 = a3.a, h3 = a3.b, n3 = t2.l, p2 = t2.a, M2 = t2.b, u2 = 180 / Math.PI, e2 = Math.PI / 180, w2 = Math.pow(Math.pow(r4, 2) + Math.pow(h3, 2), 0.5), b2 = Math.pow(Math.pow(p2, 2) + Math.pow(M2, 2), 0.5), i2 = (o2 + n3) / 2, l2 = Math.pow((w2 + b2) / 2, 7), c2 = 0.5 * (1 - Math.pow(l2 / (l2 + Math.pow(25, 7)), 0.5)), f2 = r4 * (1 + c2), y2 = p2 * (1 + c2), v2 = Math.pow(Math.pow(f2, 2) + Math.pow(h3, 2), 0.5), x2 = Math.pow(Math.pow(y2, 2) + Math.pow(M2, 2), 0.5), z = (v2 + x2) / 2, s2 = f2 === 0 && h3 === 0 ? 0 : Math.atan2(h3, f2) * u2, d2 = y2 === 0 && M2 === 0 ? 0 : Math.atan2(M2, y2) * u2;\n      s2 < 0 && (s2 += 360), d2 < 0 && (d2 += 360);\n      var g2 = d2 - s2, m2 = Math.abs(d2 - s2);\n      m2 > 180 && d2 <= s2 ? g2 += 360 : m2 > 180 && d2 > s2 && (g2 -= 360);\n      var N2 = s2 + d2;\n      m2 <= 180 ? N2 /= 2 : N2 = (s2 + d2 < 360 ? N2 + 360 : N2 - 360) / 2;\n      var F = 1 - 0.17 * Math.cos(e2 * (N2 - 30)) + 0.24 * Math.cos(2 * e2 * N2) + 0.32 * Math.cos(e2 * (3 * N2 + 6)) - 0.2 * Math.cos(e2 * (4 * N2 - 63)), L = n3 - o2, I = x2 - v2, P = 2 * Math.sin(e2 * g2 / 2) * Math.pow(v2 * x2, 0.5), j2 = 1 + 0.015 * Math.pow(i2 - 50, 2) / Math.pow(20 + Math.pow(i2 - 50, 2), 0.5), k2 = 1 + 0.045 * z, q = 1 + 0.015 * z * F, A = 30 * Math.exp(-1 * Math.pow((N2 - 275) / 25, 2)), B = -2 * Math.pow(l2 / (l2 + Math.pow(25, 7)), 0.5) * Math.sin(2 * e2 * A);\n      return Math.pow(Math.pow(L / 1 / j2, 2) + Math.pow(I / 1 / k2, 2) + Math.pow(P / 1 / q, 2) + B * I * P / (1 * k2 * 1 * q), 0.5);\n    }(this.toLab(), h2.toLab()) / 100;\n    return o$2(t$2(n2, 3));\n  }, r2.object.push([i$2, \"lab\"]);\n}\nvar r$1 = function(r2) {\n  return typeof r2 == \"string\" ? r2.length > 0 : typeof r2 == \"number\";\n}, n$1 = function(r2, n2, t2) {\n  return n2 === void 0 && (n2 = 0), t2 === void 0 && (t2 = Math.pow(10, n2)), Math.round(t2 * r2) / t2 + 0;\n}, t$1 = function(r2, n2, t2) {\n  return n2 === void 0 && (n2 = 0), t2 === void 0 && (t2 = 1), r2 > t2 ? t2 : r2 > n2 ? r2 : n2;\n}, u$1 = function(r2) {\n  return { c: t$1(r2.c, 0, 100), m: t$1(r2.m, 0, 100), y: t$1(r2.y, 0, 100), k: t$1(r2.k, 0, 100), a: t$1(r2.a) };\n}, e$1 = function(r2) {\n  return { c: n$1(r2.c, 2), m: n$1(r2.m, 2), y: n$1(r2.y, 2), k: n$1(r2.k, 2), a: n$1(r2.a, 3) };\n};\nfunction c(r2) {\n  return { r: n$1(255 * (1 - r2.c / 100) * (1 - r2.k / 100)), g: n$1(255 * (1 - r2.m / 100) * (1 - r2.k / 100)), b: n$1(255 * (1 - r2.y / 100) * (1 - r2.k / 100)), a: r2.a };\n}\nfunction i$1(r2) {\n  var t2 = 1 - Math.max(r2.r / 255, r2.g / 255, r2.b / 255), u2 = (1 - r2.r / 255 - t2) / (1 - t2), e2 = (1 - r2.g / 255 - t2) / (1 - t2), c2 = (1 - r2.b / 255 - t2) / (1 - t2);\n  return { c: isNaN(u2) ? 0 : n$1(100 * u2), m: isNaN(e2) ? 0 : n$1(100 * e2), y: isNaN(c2) ? 0 : n$1(100 * c2), k: n$1(100 * t2), a: r2.a };\n}\nfunction o$1(n2) {\n  var t2 = n2.c, e2 = n2.m, i2 = n2.y, o2 = n2.k, m2 = n2.a, a2 = m2 === void 0 ? 1 : m2;\n  return r$1(t2) && r$1(e2) && r$1(i2) && r$1(o2) ? c(u$1({ c: Number(t2), m: Number(e2), y: Number(i2), k: Number(o2), a: Number(a2) })) : null;\n}\nvar m = /^device-cmyk\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i, a$1 = function(r2) {\n  var n2 = m.exec(r2);\n  return n2 ? c(u$1({ c: Number(n2[1]) * (n2[2] ? 1 : 100), m: Number(n2[3]) * (n2[4] ? 1 : 100), y: Number(n2[5]) * (n2[6] ? 1 : 100), k: Number(n2[7]) * (n2[8] ? 1 : 100), a: n2[9] === void 0 ? 1 : Number(n2[9]) / (n2[10] ? 100 : 1) })) : null;\n};\nfunction cmykPlugin(r2, n2) {\n  r2.prototype.toCmyk = function() {\n    return e$1(i$1(this.rgba));\n  }, r2.prototype.toCmykString = function() {\n    return r3 = e$1(i$1(this.rgba)), n3 = r3.c, t2 = r3.m, u2 = r3.y, c2 = r3.k, (o2 = r3.a) < 1 ? \"device-cmyk(\" + n3 + \"% \" + t2 + \"% \" + u2 + \"% \" + c2 + \"% / \" + o2 + \")\" : \"device-cmyk(\" + n3 + \"% \" + t2 + \"% \" + u2 + \"% \" + c2 + \"%)\";\n    var r3, n3, t2, u2, c2, o2;\n  }, n2.object.push([o$1, \"cmyk\"]), n2.string.push([a$1, \"cmyk\"]);\n}\nvar r = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) }, t = function(r2) {\n  return typeof r2 == \"string\" ? r2.length > 0 : typeof r2 == \"number\";\n}, n = function(r2, t2, n2) {\n  return t2 === void 0 && (t2 = 0), n2 === void 0 && (n2 = Math.pow(10, t2)), Math.round(n2 * r2) / n2 + 0;\n}, u = function(r2, t2, n2) {\n  return t2 === void 0 && (t2 = 0), n2 === void 0 && (n2 = 1), r2 > n2 ? n2 : r2 > t2 ? r2 : t2;\n}, a = function(r2) {\n  return { h: (t2 = r2.h, (t2 = isFinite(t2) ? t2 % 360 : 0) > 0 ? t2 : t2 + 360), w: u(r2.w, 0, 100), b: u(r2.b, 0, 100), a: u(r2.a) };\n  var t2;\n}, e = function(r2) {\n  return { h: n(r2.h), w: n(r2.w), b: n(r2.b), a: n(r2.a, 3) };\n}, b = function(r2) {\n  return { h: function(r3) {\n    var t2 = r3.r, n2 = r3.g, u2 = r3.b, a2 = r3.a, e2 = Math.max(t2, n2, u2), b2 = e2 - Math.min(t2, n2, u2), o2 = b2 ? e2 === t2 ? (n2 - u2) / b2 : e2 === n2 ? 2 + (u2 - t2) / b2 : 4 + (t2 - n2) / b2 : 0;\n    return { h: 60 * (o2 < 0 ? o2 + 6 : o2), s: e2 ? b2 / e2 * 100 : 0, v: e2 / 255 * 100, a: a2 };\n  }(r2).h, w: Math.min(r2.r, r2.g, r2.b) / 255 * 100, b: 100 - Math.max(r2.r, r2.g, r2.b) / 255 * 100, a: r2.a };\n}, o = function(r2) {\n  return function(r3) {\n    var t2 = r3.h, n2 = r3.s, u2 = r3.v, a2 = r3.a;\n    t2 = t2 / 360 * 6, n2 /= 100, u2 /= 100;\n    var e2 = Math.floor(t2), b2 = u2 * (1 - n2), o2 = u2 * (1 - (t2 - e2) * n2), i2 = u2 * (1 - (1 - t2 + e2) * n2), h2 = e2 % 6;\n    return { r: 255 * [u2, o2, b2, b2, i2, u2][h2], g: 255 * [i2, u2, u2, o2, b2, b2][h2], b: 255 * [b2, b2, i2, u2, u2, o2][h2], a: a2 };\n  }({ h: r2.h, s: r2.b === 100 ? 0 : 100 - r2.w / (100 - r2.b) * 100, v: 100 - r2.b, a: r2.a });\n}, i = function(r2) {\n  var n2 = r2.h, u2 = r2.w, e2 = r2.b, b2 = r2.a, i2 = b2 === void 0 ? 1 : b2;\n  if (!t(n2) || !t(u2) || !t(e2))\n    return null;\n  var h2 = a({ h: Number(n2), w: Number(u2), b: Number(e2), a: Number(i2) });\n  return o(h2);\n}, h = /^hwb\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i, d = function(t2) {\n  var n2 = h.exec(t2);\n  if (!n2)\n    return null;\n  var u2, e2, b2 = a({ h: (u2 = n2[1], e2 = n2[2], e2 === void 0 && (e2 = \"deg\"), Number(u2) * (r[e2] || 1)), w: Number(n2[3]), b: Number(n2[4]), a: n2[5] === void 0 ? 1 : Number(n2[5]) / (n2[6] ? 100 : 1) });\n  return o(b2);\n};\nfunction hwbPlugin(r2, t2) {\n  r2.prototype.toHwb = function() {\n    return e(b(this.rgba));\n  }, r2.prototype.toHwbString = function() {\n    return r3 = e(b(this.rgba)), t3 = r3.h, n2 = r3.w, u2 = r3.b, (a2 = r3.a) < 1 ? \"hwb(\" + t3 + \" \" + n2 + \"% \" + u2 + \"% / \" + a2 + \")\" : \"hwb(\" + t3 + \" \" + n2 + \"% \" + u2 + \"%)\";\n    var r3, t3, n2, u2, a2;\n  }, t2.string.push([d, \"hwb\"]), t2.object.push([i, \"hwb\"]);\n}\nk([mixPlugin, lchPlugin, namesPlugin, labPlugin, cmykPlugin, hwbPlugin]);\nfunction lchToHsl(n2 = 0, total = 12, a2 = 1, s2 = 20, lightness = 60) {\n  let lch = `lch(${lightness}% ${s2} ${n2 * (360 / total)} / ${a2})`;\n  let hsl = w$1(lch).toHslString();\n  return hsl;\n}\nfunction getColorInfo(color) {\n  const cld = w$1(color);\n  let info = {\n    dark: cld.isDark(),\n    hex: cld.toHex(),\n    rgb: cld.toRgbString(),\n    name: cld.toName({ closest: true }),\n    cmyk: cld.toCmykString(),\n    hsl: cld.toHslString(),\n    lab: cld.toLab()\n  };\n  return info;\n}\nfunction levelColor(i2 = 0, n2 = 3, a2 = \"0.5\", s2 = \"0.8\", l2 = \"0.5\", reverse = false) {\n  if (reverse) {\n    i2 = n2 - i2 - 1;\n  }\n  return `hsla(${i2 * (360 / n2)}, ${s2 * 100}%, ${l2 * 100}%, ${a2})`;\n}\nfunction chromaColorMix(chroma2, tonic, part = 0.3) {\n  let hsl = w$1(pitchColor(tonic));\n  let lch = w$1(lchToHsl(tonic, 12, 1));\n  chroma2.split(\"\").forEach((bit, i2) => {\n    if (isInChroma(chroma2, tonic, i2)) {\n      hsl = hsl.mix(pitchColor(i2), part);\n      lch = lch.mix(lchToHsl(i2, 12, 1), part);\n    }\n  });\n  return {\n    hsl: hsl.toHslString(),\n    lch: lch.toHslString()\n  };\n}\nconst tempo = reactive({\n  initialized: false,\n  bpm: useClamp(useStorage(\"tempo-bpm\", 100), 10, 500),\n  blink: false,\n  started: false,\n  playing: false,\n  stopped: false,\n  mute: useStorage(\"tempo-mute\", true),\n  volume: useClamp(useStorage(\"tempo-volume\", 0.5), 0, 1),\n  progress: 0,\n  position: 0,\n  ticks: 0,\n  metre: {\n    over: 4,\n    under: 4,\n    num: computed(() => (tempo.metre.over / (tempo.metre.under / 4)).toFixed(2))\n  },\n  hz: computed(() => (tempo.bpm / 60).toFixed(2)),\n  note: computed(() => index$2.pitchClass(Frequency(tempo.hz).toNote())),\n  tune: computed(() => {\n    return index$2.pitchClass(tempo.note) + 4;\n  }),\n  pitch: computed(() => freqPitch(tempo.hz)),\n  digit: computed(() => (Frequency(tempo.hz).toMidi() + 12 * 10 + 3) % 12),\n  color: computed(() => pitchColor(tempo.digit)),\n  tap: {\n    last: 0,\n    diff: 0,\n    timeout: 2e3,\n    times: [],\n    bpm: null\n  },\n  set(diff) {\n    tempo.bpm = Math.round(diff + tempo.bpm);\n  }\n});\nfunction useTempo() {\n  if (tempo.initialized)\n    return tempo;\n  const metro = shallowReactive({\n    counter: 0\n  });\n  onMounted(() => {\n    const { channel } = createChannel$1(\"tempo-tick\");\n    metro.channel = channel;\n    metro.pluck = new Sampler({\n      urls: {\n        E1: \"/logic/high.wav\",\n        E2: \"/logic/low.wav\"\n      },\n      volume: -20,\n      envelope: {\n        attack: 1e-3,\n        release: 2\n      },\n      baseUrl: \"/audio/metronome/\"\n    }).connect(channel);\n    metro.loop = new Loop((time) => {\n      let even = metro.counter % 2 == 0;\n      if (even)\n        tempo.blink = true;\n      if (!tempo.mute) {\n        metro.pluck.triggerAttackRelease(even ? \"E1\" : \"E2\", \"16n\", time, even ? 1 : 0.2);\n      }\n      metro.counter++;\n      setTimeout(() => {\n        tempo.blink = false;\n      }, 60);\n    }, \"8n\").start(0);\n    useRafFn(() => {\n      tempo.position = Transport.position;\n      tempo.ticks = Transport.ticks;\n      tempo.progress = metro.loop.progress;\n    });\n  });\n  watch(() => tempo.volume, (vol) => metro.pluck.volume.rampTo(gainToDb(tempo.volume)));\n  watch(() => tempo.bpm, (bpm) => Transport.bpm.rampTo(bpm, \"4n\"), { immediate: true });\n  watch(() => tempo.stopped, (stop) => {\n    if (stop) {\n      Transport.stop();\n      tempo.playing = false;\n    }\n  });\n  watch(() => tempo.playing, (playing) => {\n    if (playing) {\n      if (!tempo.started) {\n        start$1();\n        tempo.started = true;\n      }\n      tempo.stopped = false;\n      Transport.start();\n    } else {\n      Transport.pause();\n    }\n  }, {\n    immediate: true\n  });\n  tempo.initialized = true;\n  return tempo;\n}\nfunction tap() {\n  var time = performance.now();\n  if (tempo.tap.last) {\n    tempo.tap.diff = time - tempo.tap.last;\n    tempo.tap.times.push(tempo.tap.diff);\n    refresh();\n  }\n  tempo.tap.last = time;\n  beginTimeout();\n}\nfunction refresh() {\n  if (tempo.tap.times.length > 2) {\n    var average = tempo.tap.times.reduce((result, t2) => result += t2) / tempo.tap.times.length;\n    var bpm = 1 / (average / 1e3) * 60;\n    tempo.tap.bpm = bpm;\n  }\n}\nlet timer = null;\nfunction beginTimeout() {\n  clearTimeout(timer);\n  timer = setTimeout(function() {\n    tempo.tap.times = [tempo.tap.diff];\n    tempo.tap.last = null;\n  }, tempo.tap.timeout);\n}\nvar commonjsGlobal = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nfunction getDefaultExportFromCjs(x2) {\n  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, \"default\") ? x2[\"default\"] : x2;\n}\nfunction getAugmentedNamespace(n2) {\n  if (n2.__esModule)\n    return n2;\n  var a2 = Object.defineProperty({}, \"__esModule\", { value: true });\n  Object.keys(n2).forEach(function(k2) {\n    var d2 = Object.getOwnPropertyDescriptor(n2, k2);\n    Object.defineProperty(a2, k2, d2.get ? d2 : {\n      enumerable: true,\n      get: function() {\n        return n2[k2];\n      }\n    });\n  });\n  return a2;\n}\nvar Midi = {};\nvar midiFile = {};\nfunction parseMidi(data) {\n  var p2 = new Parser(data);\n  var headerChunk = p2.readChunk();\n  if (headerChunk.id != \"MThd\")\n    throw \"Bad MIDI file.  Expected 'MHdr', got: '\" + headerChunk.id + \"'\";\n  var header = parseHeader(headerChunk.data);\n  var tracks2 = [];\n  for (var i2 = 0; !p2.eof() && i2 < header.numTracks; i2++) {\n    var trackChunk = p2.readChunk();\n    if (trackChunk.id != \"MTrk\")\n      throw \"Bad MIDI file.  Expected 'MTrk', got: '\" + trackChunk.id + \"'\";\n    var track = parseTrack(trackChunk.data);\n    tracks2.push(track);\n  }\n  return {\n    header,\n    tracks: tracks2\n  };\n}\nfunction parseHeader(data) {\n  var p2 = new Parser(data);\n  var format = p2.readUInt16();\n  var numTracks = p2.readUInt16();\n  var result = {\n    format,\n    numTracks\n  };\n  var timeDivision = p2.readUInt16();\n  if (timeDivision & 32768) {\n    result.framesPerSecond = 256 - (timeDivision >> 8);\n    result.ticksPerFrame = timeDivision & 255;\n  } else {\n    result.ticksPerBeat = timeDivision;\n  }\n  return result;\n}\nfunction parseTrack(data) {\n  var p2 = new Parser(data);\n  var events = [];\n  while (!p2.eof()) {\n    var event = readEvent();\n    events.push(event);\n  }\n  return events;\n  var lastEventTypeByte = null;\n  function readEvent() {\n    var event2 = {};\n    event2.deltaTime = p2.readVarInt();\n    var eventTypeByte = p2.readUInt8();\n    if ((eventTypeByte & 240) === 240) {\n      if (eventTypeByte === 255) {\n        event2.meta = true;\n        var metatypeByte = p2.readUInt8();\n        var length = p2.readVarInt();\n        switch (metatypeByte) {\n          case 0:\n            event2.type = \"sequenceNumber\";\n            if (length !== 2)\n              throw \"Expected length for sequenceNumber event is 2, got \" + length;\n            event2.number = p2.readUInt16();\n            return event2;\n          case 1:\n            event2.type = \"text\";\n            event2.text = p2.readString(length);\n            return event2;\n          case 2:\n            event2.type = \"copyrightNotice\";\n            event2.text = p2.readString(length);\n            return event2;\n          case 3:\n            event2.type = \"trackName\";\n            event2.text = p2.readString(length);\n            return event2;\n          case 4:\n            event2.type = \"instrumentName\";\n            event2.text = p2.readString(length);\n            return event2;\n          case 5:\n            event2.type = \"lyrics\";\n            event2.text = p2.readString(length);\n            return event2;\n          case 6:\n            event2.type = \"marker\";\n            event2.text = p2.readString(length);\n            return event2;\n          case 7:\n            event2.type = \"cuePoint\";\n            event2.text = p2.readString(length);\n            return event2;\n          case 32:\n            event2.type = \"channelPrefix\";\n            if (length != 1)\n              throw \"Expected length for channelPrefix event is 1, got \" + length;\n            event2.channel = p2.readUInt8();\n            return event2;\n          case 33:\n            event2.type = \"portPrefix\";\n            if (length != 1)\n              throw \"Expected length for portPrefix event is 1, got \" + length;\n            event2.port = p2.readUInt8();\n            return event2;\n          case 47:\n            event2.type = \"endOfTrack\";\n            if (length != 0)\n              throw \"Expected length for endOfTrack event is 0, got \" + length;\n            return event2;\n          case 81:\n            event2.type = \"setTempo\";\n            if (length != 3)\n              throw \"Expected length for setTempo event is 3, got \" + length;\n            event2.microsecondsPerBeat = p2.readUInt24();\n            return event2;\n          case 84:\n            event2.type = \"smpteOffset\";\n            if (length != 5)\n              throw \"Expected length for smpteOffset event is 5, got \" + length;\n            var hourByte = p2.readUInt8();\n            var FRAME_RATES = { 0: 24, 32: 25, 64: 29, 96: 30 };\n            event2.frameRate = FRAME_RATES[hourByte & 96];\n            event2.hour = hourByte & 31;\n            event2.min = p2.readUInt8();\n            event2.sec = p2.readUInt8();\n            event2.frame = p2.readUInt8();\n            event2.subFrame = p2.readUInt8();\n            return event2;\n          case 88:\n            event2.type = \"timeSignature\";\n            if (length != 2 && length != 4)\n              throw \"Expected length for timeSignature event is 4 or 2, got \" + length;\n            event2.numerator = p2.readUInt8();\n            event2.denominator = 1 << p2.readUInt8();\n            if (length === 4) {\n              event2.metronome = p2.readUInt8();\n              event2.thirtyseconds = p2.readUInt8();\n            } else {\n              event2.metronome = 36;\n              event2.thirtyseconds = 8;\n            }\n            return event2;\n          case 89:\n            event2.type = \"keySignature\";\n            if (length != 2)\n              throw \"Expected length for keySignature event is 2, got \" + length;\n            event2.key = p2.readInt8();\n            event2.scale = p2.readUInt8();\n            return event2;\n          case 127:\n            event2.type = \"sequencerSpecific\";\n            event2.data = p2.readBytes(length);\n            return event2;\n          default:\n            event2.type = \"unknownMeta\";\n            event2.data = p2.readBytes(length);\n            event2.metatypeByte = metatypeByte;\n            return event2;\n        }\n      } else if (eventTypeByte == 240) {\n        event2.type = \"sysEx\";\n        var length = p2.readVarInt();\n        event2.data = p2.readBytes(length);\n        return event2;\n      } else if (eventTypeByte == 247) {\n        event2.type = \"endSysEx\";\n        var length = p2.readVarInt();\n        event2.data = p2.readBytes(length);\n        return event2;\n      } else {\n        throw \"Unrecognised MIDI event type byte: \" + eventTypeByte;\n      }\n    } else {\n      var param1;\n      if ((eventTypeByte & 128) === 0) {\n        if (lastEventTypeByte === null)\n          throw \"Running status byte encountered before status byte\";\n        param1 = eventTypeByte;\n        eventTypeByte = lastEventTypeByte;\n        event2.running = true;\n      } else {\n        param1 = p2.readUInt8();\n        lastEventTypeByte = eventTypeByte;\n      }\n      var eventType = eventTypeByte >> 4;\n      event2.channel = eventTypeByte & 15;\n      switch (eventType) {\n        case 8:\n          event2.type = \"noteOff\";\n          event2.noteNumber = param1;\n          event2.velocity = p2.readUInt8();\n          return event2;\n        case 9:\n          var velocity = p2.readUInt8();\n          event2.type = velocity === 0 ? \"noteOff\" : \"noteOn\";\n          event2.noteNumber = param1;\n          event2.velocity = velocity;\n          if (velocity === 0)\n            event2.byte9 = true;\n          return event2;\n        case 10:\n          event2.type = \"noteAftertouch\";\n          event2.noteNumber = param1;\n          event2.amount = p2.readUInt8();\n          return event2;\n        case 11:\n          event2.type = \"controller\";\n          event2.controllerType = param1;\n          event2.value = p2.readUInt8();\n          return event2;\n        case 12:\n          event2.type = \"programChange\";\n          event2.programNumber = param1;\n          return event2;\n        case 13:\n          event2.type = \"channelAftertouch\";\n          event2.amount = param1;\n          return event2;\n        case 14:\n          event2.type = \"pitchBend\";\n          event2.value = param1 + (p2.readUInt8() << 7) - 8192;\n          return event2;\n        default:\n          throw \"Unrecognised MIDI event type: \" + eventType;\n      }\n    }\n  }\n}\nfunction Parser(data) {\n  this.buffer = data;\n  this.bufferLen = this.buffer.length;\n  this.pos = 0;\n}\nParser.prototype.eof = function() {\n  return this.pos >= this.bufferLen;\n};\nParser.prototype.readUInt8 = function() {\n  var result = this.buffer[this.pos];\n  this.pos += 1;\n  return result;\n};\nParser.prototype.readInt8 = function() {\n  var u2 = this.readUInt8();\n  if (u2 & 128)\n    return u2 - 256;\n  else\n    return u2;\n};\nParser.prototype.readUInt16 = function() {\n  var b0 = this.readUInt8(), b1 = this.readUInt8();\n  return (b0 << 8) + b1;\n};\nParser.prototype.readInt16 = function() {\n  var u2 = this.readUInt16();\n  if (u2 & 32768)\n    return u2 - 65536;\n  else\n    return u2;\n};\nParser.prototype.readUInt24 = function() {\n  var b0 = this.readUInt8(), b1 = this.readUInt8(), b2 = this.readUInt8();\n  return (b0 << 16) + (b1 << 8) + b2;\n};\nParser.prototype.readInt24 = function() {\n  var u2 = this.readUInt24();\n  if (u2 & 8388608)\n    return u2 - 16777216;\n  else\n    return u2;\n};\nParser.prototype.readUInt32 = function() {\n  var b0 = this.readUInt8(), b1 = this.readUInt8(), b2 = this.readUInt8(), b3 = this.readUInt8();\n  return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n};\nParser.prototype.readBytes = function(len) {\n  var bytes = this.buffer.slice(this.pos, this.pos + len);\n  this.pos += len;\n  return bytes;\n};\nParser.prototype.readString = function(len) {\n  var bytes = this.readBytes(len);\n  return String.fromCharCode.apply(null, bytes);\n};\nParser.prototype.readVarInt = function() {\n  var result = 0;\n  while (!this.eof()) {\n    var b2 = this.readUInt8();\n    if (b2 & 128) {\n      result += b2 & 127;\n      result <<= 7;\n    } else {\n      return result + b2;\n    }\n  }\n  return result;\n};\nParser.prototype.readChunk = function() {\n  var id = this.readString(4);\n  var length = this.readUInt32();\n  var data = this.readBytes(length);\n  return {\n    id,\n    length,\n    data\n  };\n};\nvar midiParser = parseMidi;\nfunction writeMidi(data, opts) {\n  if (typeof data !== \"object\")\n    throw \"Invalid MIDI data\";\n  opts = opts || {};\n  var header = data.header || {};\n  var tracks2 = data.tracks || [];\n  var i2, len = tracks2.length;\n  var w2 = new Writer();\n  writeHeader(w2, header, len);\n  for (i2 = 0; i2 < len; i2++) {\n    writeTrack(w2, tracks2[i2], opts);\n  }\n  return w2.buffer;\n}\nfunction writeHeader(w2, header, numTracks) {\n  var format = header.format == null ? 1 : header.format;\n  var timeDivision = 128;\n  if (header.timeDivision) {\n    timeDivision = header.timeDivision;\n  } else if (header.ticksPerFrame && header.framesPerSecond) {\n    timeDivision = -(header.framesPerSecond & 255) << 8 | header.ticksPerFrame & 255;\n  } else if (header.ticksPerBeat) {\n    timeDivision = header.ticksPerBeat & 32767;\n  }\n  var h2 = new Writer();\n  h2.writeUInt16(format);\n  h2.writeUInt16(numTracks);\n  h2.writeUInt16(timeDivision);\n  w2.writeChunk(\"MThd\", h2.buffer);\n}\nfunction writeTrack(w2, track, opts) {\n  var t2 = new Writer();\n  var i2, len = track.length;\n  var eventTypeByte = null;\n  for (i2 = 0; i2 < len; i2++) {\n    if (opts.running === false || !opts.running && !track[i2].running)\n      eventTypeByte = null;\n    eventTypeByte = writeEvent(t2, track[i2], eventTypeByte, opts.useByte9ForNoteOff);\n  }\n  w2.writeChunk(\"MTrk\", t2.buffer);\n}\nfunction writeEvent(w2, event, lastEventTypeByte, useByte9ForNoteOff) {\n  var type = event.type;\n  var deltaTime = event.deltaTime;\n  var text = event.text || \"\";\n  var data = event.data || [];\n  var eventTypeByte = null;\n  w2.writeVarInt(deltaTime);\n  switch (type) {\n    case \"sequenceNumber\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(0);\n      w2.writeVarInt(2);\n      w2.writeUInt16(event.number);\n      break;\n    case \"text\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(1);\n      w2.writeVarInt(text.length);\n      w2.writeString(text);\n      break;\n    case \"copyrightNotice\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(2);\n      w2.writeVarInt(text.length);\n      w2.writeString(text);\n      break;\n    case \"trackName\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(3);\n      w2.writeVarInt(text.length);\n      w2.writeString(text);\n      break;\n    case \"instrumentName\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(4);\n      w2.writeVarInt(text.length);\n      w2.writeString(text);\n      break;\n    case \"lyrics\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(5);\n      w2.writeVarInt(text.length);\n      w2.writeString(text);\n      break;\n    case \"marker\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(6);\n      w2.writeVarInt(text.length);\n      w2.writeString(text);\n      break;\n    case \"cuePoint\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(7);\n      w2.writeVarInt(text.length);\n      w2.writeString(text);\n      break;\n    case \"channelPrefix\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(32);\n      w2.writeVarInt(1);\n      w2.writeUInt8(event.channel);\n      break;\n    case \"portPrefix\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(33);\n      w2.writeVarInt(1);\n      w2.writeUInt8(event.port);\n      break;\n    case \"endOfTrack\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(47);\n      w2.writeVarInt(0);\n      break;\n    case \"setTempo\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(81);\n      w2.writeVarInt(3);\n      w2.writeUInt24(event.microsecondsPerBeat);\n      break;\n    case \"smpteOffset\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(84);\n      w2.writeVarInt(5);\n      var FRAME_RATES = { 24: 0, 25: 32, 29: 64, 30: 96 };\n      var hourByte = event.hour & 31 | FRAME_RATES[event.frameRate];\n      w2.writeUInt8(hourByte);\n      w2.writeUInt8(event.min);\n      w2.writeUInt8(event.sec);\n      w2.writeUInt8(event.frame);\n      w2.writeUInt8(event.subFrame);\n      break;\n    case \"timeSignature\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(88);\n      w2.writeVarInt(4);\n      w2.writeUInt8(event.numerator);\n      var denominator = Math.floor(Math.log(event.denominator) / Math.LN2) & 255;\n      w2.writeUInt8(denominator);\n      w2.writeUInt8(event.metronome);\n      w2.writeUInt8(event.thirtyseconds || 8);\n      break;\n    case \"keySignature\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(89);\n      w2.writeVarInt(2);\n      w2.writeInt8(event.key);\n      w2.writeUInt8(event.scale);\n      break;\n    case \"sequencerSpecific\":\n      w2.writeUInt8(255);\n      w2.writeUInt8(127);\n      w2.writeVarInt(data.length);\n      w2.writeBytes(data);\n      break;\n    case \"unknownMeta\":\n      if (event.metatypeByte != null) {\n        w2.writeUInt8(255);\n        w2.writeUInt8(event.metatypeByte);\n        w2.writeVarInt(data.length);\n        w2.writeBytes(data);\n      }\n      break;\n    case \"sysEx\":\n      w2.writeUInt8(240);\n      w2.writeVarInt(data.length);\n      w2.writeBytes(data);\n      break;\n    case \"endSysEx\":\n      w2.writeUInt8(247);\n      w2.writeVarInt(data.length);\n      w2.writeBytes(data);\n      break;\n    case \"noteOff\":\n      var noteByte = useByte9ForNoteOff !== false && event.byte9 || useByte9ForNoteOff && event.velocity == 0 ? 144 : 128;\n      eventTypeByte = noteByte | event.channel;\n      if (eventTypeByte !== lastEventTypeByte)\n        w2.writeUInt8(eventTypeByte);\n      w2.writeUInt8(event.noteNumber);\n      w2.writeUInt8(event.velocity);\n      break;\n    case \"noteOn\":\n      eventTypeByte = 144 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte)\n        w2.writeUInt8(eventTypeByte);\n      w2.writeUInt8(event.noteNumber);\n      w2.writeUInt8(event.velocity);\n      break;\n    case \"noteAftertouch\":\n      eventTypeByte = 160 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte)\n        w2.writeUInt8(eventTypeByte);\n      w2.writeUInt8(event.noteNumber);\n      w2.writeUInt8(event.amount);\n      break;\n    case \"controller\":\n      eventTypeByte = 176 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte)\n        w2.writeUInt8(eventTypeByte);\n      w2.writeUInt8(event.controllerType);\n      w2.writeUInt8(event.value);\n      break;\n    case \"programChange\":\n      eventTypeByte = 192 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte)\n        w2.writeUInt8(eventTypeByte);\n      w2.writeUInt8(event.programNumber);\n      break;\n    case \"channelAftertouch\":\n      eventTypeByte = 208 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte)\n        w2.writeUInt8(eventTypeByte);\n      w2.writeUInt8(event.amount);\n      break;\n    case \"pitchBend\":\n      eventTypeByte = 224 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte)\n        w2.writeUInt8(eventTypeByte);\n      var value14 = 8192 + event.value;\n      var lsb14 = value14 & 127;\n      var msb14 = value14 >> 7 & 127;\n      w2.writeUInt8(lsb14);\n      w2.writeUInt8(msb14);\n      break;\n    default:\n      throw \"Unrecognized event type: \" + type;\n  }\n  return eventTypeByte;\n}\nfunction Writer() {\n  this.buffer = [];\n}\nWriter.prototype.writeUInt8 = function(v2) {\n  this.buffer.push(v2 & 255);\n};\nWriter.prototype.writeInt8 = Writer.prototype.writeUInt8;\nWriter.prototype.writeUInt16 = function(v2) {\n  var b0 = v2 >> 8 & 255, b1 = v2 & 255;\n  this.writeUInt8(b0);\n  this.writeUInt8(b1);\n};\nWriter.prototype.writeInt16 = Writer.prototype.writeUInt16;\nWriter.prototype.writeUInt24 = function(v2) {\n  var b0 = v2 >> 16 & 255, b1 = v2 >> 8 & 255, b2 = v2 & 255;\n  this.writeUInt8(b0);\n  this.writeUInt8(b1);\n  this.writeUInt8(b2);\n};\nWriter.prototype.writeInt24 = Writer.prototype.writeUInt24;\nWriter.prototype.writeUInt32 = function(v2) {\n  var b0 = v2 >> 24 & 255, b1 = v2 >> 16 & 255, b2 = v2 >> 8 & 255, b3 = v2 & 255;\n  this.writeUInt8(b0);\n  this.writeUInt8(b1);\n  this.writeUInt8(b2);\n  this.writeUInt8(b3);\n};\nWriter.prototype.writeInt32 = Writer.prototype.writeUInt32;\nWriter.prototype.writeBytes = function(arr) {\n  this.buffer = this.buffer.concat(Array.prototype.slice.call(arr, 0));\n};\nWriter.prototype.writeString = function(str) {\n  var i2, len = str.length, arr = [];\n  for (i2 = 0; i2 < len; i2++) {\n    arr.push(str.codePointAt(i2));\n  }\n  this.writeBytes(arr);\n};\nWriter.prototype.writeVarInt = function(v2) {\n  if (v2 < 0)\n    throw \"Cannot write negative variable-length integer\";\n  if (v2 <= 127) {\n    this.writeUInt8(v2);\n  } else {\n    var i2 = v2;\n    var bytes = [];\n    bytes.push(i2 & 127);\n    i2 >>= 7;\n    while (i2) {\n      var b2 = i2 & 127 | 128;\n      bytes.push(b2);\n      i2 >>= 7;\n    }\n    this.writeBytes(bytes.reverse());\n  }\n};\nWriter.prototype.writeChunk = function(id, data) {\n  this.writeString(id);\n  this.writeUInt32(data.length);\n  this.writeBytes(data);\n};\nvar midiWriter = writeMidi;\nmidiFile.parseMidi = midiParser;\nmidiFile.writeMidi = midiWriter;\nvar Header = {};\nvar BinarySearch = {};\nObject.defineProperty(BinarySearch, \"__esModule\", { value: true });\nBinarySearch.insert = BinarySearch.search = void 0;\nfunction search(array, value, prop) {\n  if (prop === void 0) {\n    prop = \"ticks\";\n  }\n  var beginning = 0;\n  var len = array.length;\n  var end = len;\n  if (len > 0 && array[len - 1][prop] <= value) {\n    return len - 1;\n  }\n  while (beginning < end) {\n    var midPoint = Math.floor(beginning + (end - beginning) / 2);\n    var event_1 = array[midPoint];\n    var nextEvent = array[midPoint + 1];\n    if (event_1[prop] === value) {\n      for (var i2 = midPoint; i2 < array.length; i2++) {\n        var testEvent = array[i2];\n        if (testEvent[prop] === value) {\n          midPoint = i2;\n        }\n      }\n      return midPoint;\n    } else if (event_1[prop] < value && nextEvent[prop] > value) {\n      return midPoint;\n    } else if (event_1[prop] > value) {\n      end = midPoint;\n    } else if (event_1[prop] < value) {\n      beginning = midPoint + 1;\n    }\n  }\n  return -1;\n}\nBinarySearch.search = search;\nfunction insert(array, event, prop) {\n  if (prop === void 0) {\n    prop = \"ticks\";\n  }\n  if (array.length) {\n    var index2 = search(array, event[prop], prop);\n    array.splice(index2 + 1, 0, event);\n  } else {\n    array.push(event);\n  }\n}\nBinarySearch.insert = insert;\n(function(exports) {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.Header = exports.keySignatureKeys = void 0;\n  var BinarySearch_12 = BinarySearch;\n  var privatePPQMap = /* @__PURE__ */ new WeakMap();\n  exports.keySignatureKeys = [\n    \"Cb\",\n    \"Gb\",\n    \"Db\",\n    \"Ab\",\n    \"Eb\",\n    \"Bb\",\n    \"F\",\n    \"C\",\n    \"G\",\n    \"D\",\n    \"A\",\n    \"E\",\n    \"B\",\n    \"F#\",\n    \"C#\"\n  ];\n  var Header2 = function() {\n    function Header3(midiData) {\n      var _this = this;\n      this.tempos = [];\n      this.timeSignatures = [];\n      this.keySignatures = [];\n      this.meta = [];\n      this.name = \"\";\n      privatePPQMap.set(this, 480);\n      if (midiData) {\n        privatePPQMap.set(this, midiData.header.ticksPerBeat);\n        midiData.tracks.forEach(function(track) {\n          track.forEach(function(event) {\n            if (event.meta) {\n              if (event.type === \"timeSignature\") {\n                _this.timeSignatures.push({\n                  ticks: event.absoluteTime,\n                  timeSignature: [\n                    event.numerator,\n                    event.denominator\n                  ]\n                });\n              } else if (event.type === \"setTempo\") {\n                _this.tempos.push({\n                  bpm: 6e7 / event.microsecondsPerBeat,\n                  ticks: event.absoluteTime\n                });\n              } else if (event.type === \"keySignature\") {\n                _this.keySignatures.push({\n                  key: exports.keySignatureKeys[event.key + 7],\n                  scale: event.scale === 0 ? \"major\" : \"minor\",\n                  ticks: event.absoluteTime\n                });\n              }\n            }\n          });\n        });\n        var firstTrackCurrentTicks_1 = 0;\n        midiData.tracks[0].forEach(function(event) {\n          firstTrackCurrentTicks_1 += event.deltaTime;\n          if (event.meta) {\n            if (event.type === \"trackName\") {\n              _this.name = event.text;\n            } else if (event.type === \"text\" || event.type === \"cuePoint\" || event.type === \"marker\" || event.type === \"lyrics\") {\n              _this.meta.push({\n                text: event.text,\n                ticks: firstTrackCurrentTicks_1,\n                type: event.type\n              });\n            }\n          }\n        });\n        this.update();\n      }\n    }\n    Header3.prototype.update = function() {\n      var _this = this;\n      var currentTime = 0;\n      var lastEventBeats = 0;\n      this.tempos.sort(function(a2, b2) {\n        return a2.ticks - b2.ticks;\n      });\n      this.tempos.forEach(function(event, index2) {\n        var lastBPM = index2 > 0 ? _this.tempos[index2 - 1].bpm : _this.tempos[0].bpm;\n        var beats = event.ticks / _this.ppq - lastEventBeats;\n        var elapsedSeconds = 60 / lastBPM * beats;\n        event.time = elapsedSeconds + currentTime;\n        currentTime = event.time;\n        lastEventBeats += beats;\n      });\n      this.timeSignatures.sort(function(a2, b2) {\n        return a2.ticks - b2.ticks;\n      });\n      this.timeSignatures.forEach(function(event, index2) {\n        var lastEvent = index2 > 0 ? _this.timeSignatures[index2 - 1] : _this.timeSignatures[0];\n        var elapsedBeats = (event.ticks - lastEvent.ticks) / _this.ppq;\n        var elapsedMeasures = elapsedBeats / lastEvent.timeSignature[0] / (lastEvent.timeSignature[1] / 4);\n        lastEvent.measures = lastEvent.measures || 0;\n        event.measures = elapsedMeasures + lastEvent.measures;\n      });\n    };\n    Header3.prototype.ticksToSeconds = function(ticks) {\n      var index2 = (0, BinarySearch_12.search)(this.tempos, ticks);\n      if (index2 !== -1) {\n        var tempo2 = this.tempos[index2];\n        var tempoTime = tempo2.time;\n        var elapsedBeats = (ticks - tempo2.ticks) / this.ppq;\n        return tempoTime + 60 / tempo2.bpm * elapsedBeats;\n      } else {\n        var beats = ticks / this.ppq;\n        return 60 / 120 * beats;\n      }\n    };\n    Header3.prototype.ticksToMeasures = function(ticks) {\n      var index2 = (0, BinarySearch_12.search)(this.timeSignatures, ticks);\n      if (index2 !== -1) {\n        var timeSigEvent = this.timeSignatures[index2];\n        var elapsedBeats = (ticks - timeSigEvent.ticks) / this.ppq;\n        return timeSigEvent.measures + elapsedBeats / (timeSigEvent.timeSignature[0] / timeSigEvent.timeSignature[1]) / 4;\n      } else {\n        return ticks / this.ppq / 4;\n      }\n    };\n    Object.defineProperty(Header3.prototype, \"ppq\", {\n      get: function() {\n        return privatePPQMap.get(this);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Header3.prototype.secondsToTicks = function(seconds) {\n      var index2 = (0, BinarySearch_12.search)(this.tempos, seconds, \"time\");\n      if (index2 !== -1) {\n        var tempo2 = this.tempos[index2];\n        var tempoTime = tempo2.time;\n        var elapsedTime = seconds - tempoTime;\n        var elapsedBeats = elapsedTime / (60 / tempo2.bpm);\n        return Math.round(tempo2.ticks + elapsedBeats * this.ppq);\n      } else {\n        var beats = seconds / (60 / 120);\n        return Math.round(beats * this.ppq);\n      }\n    };\n    Header3.prototype.toJSON = function() {\n      return {\n        keySignatures: this.keySignatures,\n        meta: this.meta,\n        name: this.name,\n        ppq: this.ppq,\n        tempos: this.tempos.map(function(t2) {\n          return {\n            bpm: t2.bpm,\n            ticks: t2.ticks\n          };\n        }),\n        timeSignatures: this.timeSignatures\n      };\n    };\n    Header3.prototype.fromJSON = function(json) {\n      this.name = json.name;\n      this.tempos = json.tempos.map(function(t2) {\n        return Object.assign({}, t2);\n      });\n      this.timeSignatures = json.timeSignatures.map(function(t2) {\n        return Object.assign({}, t2);\n      });\n      this.keySignatures = json.keySignatures.map(function(t2) {\n        return Object.assign({}, t2);\n      });\n      this.meta = json.meta.map(function(t2) {\n        return Object.assign({}, t2);\n      });\n      privatePPQMap.set(this, json.ppq);\n      this.update();\n    };\n    Header3.prototype.setTempo = function(bpm) {\n      this.tempos = [\n        {\n          bpm,\n          ticks: 0\n        }\n      ];\n      this.update();\n    };\n    return Header3;\n  }();\n  exports.Header = Header2;\n})(Header);\nvar Track$1 = {};\nvar ControlChange = {};\n(function(exports) {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.ControlChange = exports.controlChangeIds = exports.controlChangeNames = void 0;\n  exports.controlChangeNames = {\n    1: \"modulationWheel\",\n    2: \"breath\",\n    4: \"footController\",\n    5: \"portamentoTime\",\n    7: \"volume\",\n    8: \"balance\",\n    10: \"pan\",\n    64: \"sustain\",\n    65: \"portamentoTime\",\n    66: \"sostenuto\",\n    67: \"softPedal\",\n    68: \"legatoFootswitch\",\n    84: \"portamentoControl\"\n  };\n  exports.controlChangeIds = Object.keys(exports.controlChangeNames).reduce(function(obj, key) {\n    obj[exports.controlChangeNames[key]] = key;\n    return obj;\n  }, {});\n  var privateHeaderMap2 = /* @__PURE__ */ new WeakMap();\n  var privateCCNumberMap = /* @__PURE__ */ new WeakMap();\n  var ControlChange2 = function() {\n    function ControlChange3(event, header) {\n      privateHeaderMap2.set(this, header);\n      privateCCNumberMap.set(this, event.controllerType);\n      this.ticks = event.absoluteTime;\n      this.value = event.value;\n    }\n    Object.defineProperty(ControlChange3.prototype, \"number\", {\n      get: function() {\n        return privateCCNumberMap.get(this);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(ControlChange3.prototype, \"name\", {\n      get: function() {\n        if (exports.controlChangeNames[this.number]) {\n          return exports.controlChangeNames[this.number];\n        } else {\n          return null;\n        }\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(ControlChange3.prototype, \"time\", {\n      get: function() {\n        var header = privateHeaderMap2.get(this);\n        return header.ticksToSeconds(this.ticks);\n      },\n      set: function(t2) {\n        var header = privateHeaderMap2.get(this);\n        this.ticks = header.secondsToTicks(t2);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    ControlChange3.prototype.toJSON = function() {\n      return {\n        number: this.number,\n        ticks: this.ticks,\n        time: this.time,\n        value: this.value\n      };\n    };\n    return ControlChange3;\n  }();\n  exports.ControlChange = ControlChange2;\n})(ControlChange);\nvar ControlChanges = {};\nObject.defineProperty(ControlChanges, \"__esModule\", { value: true });\nControlChanges.createControlChanges = void 0;\nvar ControlChange_1$1 = ControlChange;\nfunction createControlChanges() {\n  return new Proxy({}, {\n    get: function(target, handler) {\n      if (target[handler]) {\n        return target[handler];\n      } else if (ControlChange_1$1.controlChangeIds.hasOwnProperty(handler)) {\n        return target[ControlChange_1$1.controlChangeIds[handler]];\n      }\n    },\n    set: function(target, handler, value) {\n      if (ControlChange_1$1.controlChangeIds.hasOwnProperty(handler)) {\n        target[ControlChange_1$1.controlChangeIds[handler]] = value;\n      } else {\n        target[handler] = value;\n      }\n      return true;\n    }\n  });\n}\nControlChanges.createControlChanges = createControlChanges;\nvar PitchBend$1 = {};\nObject.defineProperty(PitchBend$1, \"__esModule\", { value: true });\nPitchBend$1.PitchBend = void 0;\nvar privateHeaderMap$2 = /* @__PURE__ */ new WeakMap();\nvar PitchBend = function() {\n  function PitchBend2(event, header) {\n    privateHeaderMap$2.set(this, header);\n    this.ticks = event.absoluteTime;\n    this.value = event.value;\n  }\n  Object.defineProperty(PitchBend2.prototype, \"time\", {\n    get: function() {\n      var header = privateHeaderMap$2.get(this);\n      return header.ticksToSeconds(this.ticks);\n    },\n    set: function(t2) {\n      var header = privateHeaderMap$2.get(this);\n      this.ticks = header.secondsToTicks(t2);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PitchBend2.prototype.toJSON = function() {\n    return {\n      ticks: this.ticks,\n      time: this.time,\n      value: this.value\n    };\n  };\n  return PitchBend2;\n}();\nPitchBend$1.PitchBend = PitchBend;\nvar Instrument$1 = {};\nvar InstrumentMaps = {};\nObject.defineProperty(InstrumentMaps, \"__esModule\", { value: true });\nInstrumentMaps.DrumKitByPatchID = InstrumentMaps.InstrumentFamilyByID = InstrumentMaps.instrumentByPatchID = void 0;\nInstrumentMaps.instrumentByPatchID = [\n  \"acoustic grand piano\",\n  \"bright acoustic piano\",\n  \"electric grand piano\",\n  \"honky-tonk piano\",\n  \"electric piano 1\",\n  \"electric piano 2\",\n  \"harpsichord\",\n  \"clavi\",\n  \"celesta\",\n  \"glockenspiel\",\n  \"music box\",\n  \"vibraphone\",\n  \"marimba\",\n  \"xylophone\",\n  \"tubular bells\",\n  \"dulcimer\",\n  \"drawbar organ\",\n  \"percussive organ\",\n  \"rock organ\",\n  \"church organ\",\n  \"reed organ\",\n  \"accordion\",\n  \"harmonica\",\n  \"tango accordion\",\n  \"acoustic guitar (nylon)\",\n  \"acoustic guitar (steel)\",\n  \"electric guitar (jazz)\",\n  \"electric guitar (clean)\",\n  \"electric guitar (muted)\",\n  \"overdriven guitar\",\n  \"distortion guitar\",\n  \"guitar harmonics\",\n  \"acoustic bass\",\n  \"electric bass (finger)\",\n  \"electric bass (pick)\",\n  \"fretless bass\",\n  \"slap bass 1\",\n  \"slap bass 2\",\n  \"synth bass 1\",\n  \"synth bass 2\",\n  \"violin\",\n  \"viola\",\n  \"cello\",\n  \"contrabass\",\n  \"tremolo strings\",\n  \"pizzicato strings\",\n  \"orchestral harp\",\n  \"timpani\",\n  \"string ensemble 1\",\n  \"string ensemble 2\",\n  \"synthstrings 1\",\n  \"synthstrings 2\",\n  \"choir aahs\",\n  \"voice oohs\",\n  \"synth voice\",\n  \"orchestra hit\",\n  \"trumpet\",\n  \"trombone\",\n  \"tuba\",\n  \"muted trumpet\",\n  \"french horn\",\n  \"brass section\",\n  \"synthbrass 1\",\n  \"synthbrass 2\",\n  \"soprano sax\",\n  \"alto sax\",\n  \"tenor sax\",\n  \"baritone sax\",\n  \"oboe\",\n  \"english horn\",\n  \"bassoon\",\n  \"clarinet\",\n  \"piccolo\",\n  \"flute\",\n  \"recorder\",\n  \"pan flute\",\n  \"blown bottle\",\n  \"shakuhachi\",\n  \"whistle\",\n  \"ocarina\",\n  \"lead 1 (square)\",\n  \"lead 2 (sawtooth)\",\n  \"lead 3 (calliope)\",\n  \"lead 4 (chiff)\",\n  \"lead 5 (charang)\",\n  \"lead 6 (voice)\",\n  \"lead 7 (fifths)\",\n  \"lead 8 (bass + lead)\",\n  \"pad 1 (new age)\",\n  \"pad 2 (warm)\",\n  \"pad 3 (polysynth)\",\n  \"pad 4 (choir)\",\n  \"pad 5 (bowed)\",\n  \"pad 6 (metallic)\",\n  \"pad 7 (halo)\",\n  \"pad 8 (sweep)\",\n  \"fx 1 (rain)\",\n  \"fx 2 (soundtrack)\",\n  \"fx 3 (crystal)\",\n  \"fx 4 (atmosphere)\",\n  \"fx 5 (brightness)\",\n  \"fx 6 (goblins)\",\n  \"fx 7 (echoes)\",\n  \"fx 8 (sci-fi)\",\n  \"sitar\",\n  \"banjo\",\n  \"shamisen\",\n  \"koto\",\n  \"kalimba\",\n  \"bag pipe\",\n  \"fiddle\",\n  \"shanai\",\n  \"tinkle bell\",\n  \"agogo\",\n  \"steel drums\",\n  \"woodblock\",\n  \"taiko drum\",\n  \"melodic tom\",\n  \"synth drum\",\n  \"reverse cymbal\",\n  \"guitar fret noise\",\n  \"breath noise\",\n  \"seashore\",\n  \"bird tweet\",\n  \"telephone ring\",\n  \"helicopter\",\n  \"applause\",\n  \"gunshot\"\n];\nInstrumentMaps.InstrumentFamilyByID = [\n  \"piano\",\n  \"chromatic percussion\",\n  \"organ\",\n  \"guitar\",\n  \"bass\",\n  \"strings\",\n  \"ensemble\",\n  \"brass\",\n  \"reed\",\n  \"pipe\",\n  \"synth lead\",\n  \"synth pad\",\n  \"synth effects\",\n  \"world\",\n  \"percussive\",\n  \"sound effects\"\n];\nInstrumentMaps.DrumKitByPatchID = {\n  0: \"standard kit\",\n  8: \"room kit\",\n  16: \"power kit\",\n  24: \"electronic kit\",\n  25: \"tr-808 kit\",\n  32: \"jazz kit\",\n  40: \"brush kit\",\n  48: \"orchestra kit\",\n  56: \"sound fx kit\"\n};\nObject.defineProperty(Instrument$1, \"__esModule\", { value: true });\nInstrument$1.Instrument = void 0;\nvar InstrumentMaps_1 = InstrumentMaps;\nvar privateTrackMap = /* @__PURE__ */ new WeakMap();\nvar Instrument = function() {\n  function Instrument2(trackData, track) {\n    this.number = 0;\n    privateTrackMap.set(this, track);\n    this.number = 0;\n    if (trackData) {\n      var programChange = trackData.find(function(e2) {\n        return e2.type === \"programChange\";\n      });\n      if (programChange) {\n        this.number = programChange.programNumber;\n      }\n    }\n  }\n  Object.defineProperty(Instrument2.prototype, \"name\", {\n    get: function() {\n      if (this.percussion) {\n        return InstrumentMaps_1.DrumKitByPatchID[this.number];\n      } else {\n        return InstrumentMaps_1.instrumentByPatchID[this.number];\n      }\n    },\n    set: function(n2) {\n      var patchNumber = InstrumentMaps_1.instrumentByPatchID.indexOf(n2);\n      if (patchNumber !== -1) {\n        this.number = patchNumber;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Instrument2.prototype, \"family\", {\n    get: function() {\n      if (this.percussion) {\n        return \"drums\";\n      } else {\n        return InstrumentMaps_1.InstrumentFamilyByID[Math.floor(this.number / 8)];\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Instrument2.prototype, \"percussion\", {\n    get: function() {\n      var track = privateTrackMap.get(this);\n      return track.channel === 9;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Instrument2.prototype.toJSON = function() {\n    return {\n      family: this.family,\n      number: this.number,\n      name: this.name\n    };\n  };\n  Instrument2.prototype.fromJSON = function(json) {\n    this.number = json.number;\n  };\n  return Instrument2;\n}();\nInstrument$1.Instrument = Instrument;\nvar Note$1 = {};\nObject.defineProperty(Note$1, \"__esModule\", { value: true });\nNote$1.Note = void 0;\nfunction midiToPitch(midi2) {\n  var octave2 = Math.floor(midi2 / 12) - 1;\n  return midiToPitchClass(midi2) + octave2.toString();\n}\nfunction midiToPitchClass(midi2) {\n  var scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n  var note2 = midi2 % 12;\n  return scaleIndexToNote[note2];\n}\nfunction pitchClassToMidi(pitch) {\n  var scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n  return scaleIndexToNote.indexOf(pitch);\n}\nvar pitchToMidi = function() {\n  var regexp = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i;\n  var noteToScaleIndex = {\n    cbb: -2,\n    cb: -1,\n    c: 0,\n    \"c#\": 1,\n    cx: 2,\n    dbb: 0,\n    db: 1,\n    d: 2,\n    \"d#\": 3,\n    dx: 4,\n    ebb: 2,\n    eb: 3,\n    e: 4,\n    \"e#\": 5,\n    ex: 6,\n    fbb: 3,\n    fb: 4,\n    f: 5,\n    \"f#\": 6,\n    fx: 7,\n    gbb: 5,\n    gb: 6,\n    g: 7,\n    \"g#\": 8,\n    gx: 9,\n    abb: 7,\n    ab: 8,\n    a: 9,\n    \"a#\": 10,\n    ax: 11,\n    bbb: 9,\n    bb: 10,\n    b: 11,\n    \"b#\": 12,\n    bx: 13\n  };\n  return function(note2) {\n    var split = regexp.exec(note2);\n    var pitch = split[1];\n    var octave2 = split[2];\n    var index2 = noteToScaleIndex[pitch.toLowerCase()];\n    return index2 + (parseInt(octave2, 10) + 1) * 12;\n  };\n}();\nvar privateHeaderMap$1 = /* @__PURE__ */ new WeakMap();\nvar Note = function() {\n  function Note2(noteOn, noteOff, header) {\n    privateHeaderMap$1.set(this, header);\n    this.midi = noteOn.midi;\n    this.velocity = noteOn.velocity;\n    this.noteOffVelocity = noteOff.velocity;\n    this.ticks = noteOn.ticks;\n    this.durationTicks = noteOff.ticks - noteOn.ticks;\n  }\n  Object.defineProperty(Note2.prototype, \"name\", {\n    get: function() {\n      return midiToPitch(this.midi);\n    },\n    set: function(n2) {\n      this.midi = pitchToMidi(n2);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Note2.prototype, \"octave\", {\n    get: function() {\n      return Math.floor(this.midi / 12) - 1;\n    },\n    set: function(o2) {\n      var diff = o2 - this.octave;\n      this.midi += diff * 12;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Note2.prototype, \"pitch\", {\n    get: function() {\n      return midiToPitchClass(this.midi);\n    },\n    set: function(p2) {\n      this.midi = 12 * (this.octave + 1) + pitchClassToMidi(p2);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Note2.prototype, \"duration\", {\n    get: function() {\n      var header = privateHeaderMap$1.get(this);\n      return header.ticksToSeconds(this.ticks + this.durationTicks) - header.ticksToSeconds(this.ticks);\n    },\n    set: function(d2) {\n      var header = privateHeaderMap$1.get(this);\n      var noteEndTicks = header.secondsToTicks(this.time + d2);\n      this.durationTicks = noteEndTicks - this.ticks;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Note2.prototype, \"time\", {\n    get: function() {\n      var header = privateHeaderMap$1.get(this);\n      return header.ticksToSeconds(this.ticks);\n    },\n    set: function(t2) {\n      var header = privateHeaderMap$1.get(this);\n      this.ticks = header.secondsToTicks(t2);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Note2.prototype, \"bars\", {\n    get: function() {\n      var header = privateHeaderMap$1.get(this);\n      return header.ticksToMeasures(this.ticks);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Note2.prototype.toJSON = function() {\n    return {\n      duration: this.duration,\n      durationTicks: this.durationTicks,\n      midi: this.midi,\n      name: this.name,\n      ticks: this.ticks,\n      time: this.time,\n      velocity: this.velocity\n    };\n  };\n  return Note2;\n}();\nNote$1.Note = Note;\nObject.defineProperty(Track$1, \"__esModule\", { value: true });\nTrack$1.Track = void 0;\nvar BinarySearch_1 = BinarySearch;\nvar ControlChange_1 = ControlChange;\nvar ControlChanges_1 = ControlChanges;\nvar PitchBend_1 = PitchBend$1;\nvar Instrument_1 = Instrument$1;\nvar Note_1 = Note$1;\nvar privateHeaderMap = /* @__PURE__ */ new WeakMap();\nvar Track = function() {\n  function Track2(trackData, header) {\n    var _this = this;\n    this.name = \"\";\n    this.notes = [];\n    this.controlChanges = (0, ControlChanges_1.createControlChanges)();\n    this.pitchBends = [];\n    privateHeaderMap.set(this, header);\n    if (trackData) {\n      var nameEvent = trackData.find(function(e2) {\n        return e2.type === \"trackName\";\n      });\n      this.name = nameEvent ? nameEvent.text : \"\";\n    }\n    this.instrument = new Instrument_1.Instrument(trackData, this);\n    this.channel = 0;\n    if (trackData) {\n      var noteOns = trackData.filter(function(event) {\n        return event.type === \"noteOn\";\n      });\n      var noteOffs = trackData.filter(function(event) {\n        return event.type === \"noteOff\";\n      });\n      var _loop_1 = function() {\n        var currentNote = noteOns.shift();\n        this_1.channel = currentNote.channel;\n        var offIndex = noteOffs.findIndex(function(note2) {\n          return note2.noteNumber === currentNote.noteNumber && note2.absoluteTime >= currentNote.absoluteTime;\n        });\n        if (offIndex !== -1) {\n          var noteOff = noteOffs.splice(offIndex, 1)[0];\n          this_1.addNote({\n            durationTicks: noteOff.absoluteTime - currentNote.absoluteTime,\n            midi: currentNote.noteNumber,\n            noteOffVelocity: noteOff.velocity / 127,\n            ticks: currentNote.absoluteTime,\n            velocity: currentNote.velocity / 127\n          });\n        }\n      };\n      var this_1 = this;\n      while (noteOns.length) {\n        _loop_1();\n      }\n      var controlChanges = trackData.filter(function(event) {\n        return event.type === \"controller\";\n      });\n      controlChanges.forEach(function(event) {\n        _this.addCC({\n          number: event.controllerType,\n          ticks: event.absoluteTime,\n          value: event.value / 127\n        });\n      });\n      var pitchBends = trackData.filter(function(event) {\n        return event.type === \"pitchBend\";\n      });\n      pitchBends.forEach(function(event) {\n        _this.addPitchBend({\n          ticks: event.absoluteTime,\n          value: event.value / Math.pow(2, 13)\n        });\n      });\n      var endOfTrackEvent = trackData.find(function(event) {\n        return event.type === \"endOfTrack\";\n      });\n      this.endOfTrackTicks = endOfTrackEvent !== void 0 ? endOfTrackEvent.absoluteTime : void 0;\n    }\n  }\n  Track2.prototype.addNote = function(props) {\n    var header = privateHeaderMap.get(this);\n    var note2 = new Note_1.Note({\n      midi: 0,\n      ticks: 0,\n      velocity: 1\n    }, {\n      ticks: 0,\n      velocity: 0\n    }, header);\n    Object.assign(note2, props);\n    (0, BinarySearch_1.insert)(this.notes, note2, \"ticks\");\n    return this;\n  };\n  Track2.prototype.addCC = function(props) {\n    var header = privateHeaderMap.get(this);\n    var cc = new ControlChange_1.ControlChange({\n      controllerType: props.number\n    }, header);\n    delete props.number;\n    Object.assign(cc, props);\n    if (!Array.isArray(this.controlChanges[cc.number])) {\n      this.controlChanges[cc.number] = [];\n    }\n    (0, BinarySearch_1.insert)(this.controlChanges[cc.number], cc, \"ticks\");\n    return this;\n  };\n  Track2.prototype.addPitchBend = function(props) {\n    var header = privateHeaderMap.get(this);\n    var pb = new PitchBend_1.PitchBend({}, header);\n    Object.assign(pb, props);\n    (0, BinarySearch_1.insert)(this.pitchBends, pb, \"ticks\");\n    return this;\n  };\n  Object.defineProperty(Track2.prototype, \"duration\", {\n    get: function() {\n      if (!this.notes.length) {\n        return 0;\n      }\n      var maxDuration = this.notes[this.notes.length - 1].time + this.notes[this.notes.length - 1].duration;\n      for (var i2 = 0; i2 < this.notes.length - 1; i2++) {\n        var duration2 = this.notes[i2].time + this.notes[i2].duration;\n        if (maxDuration < duration2) {\n          maxDuration = duration2;\n        }\n      }\n      return maxDuration;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Track2.prototype, \"durationTicks\", {\n    get: function() {\n      if (!this.notes.length) {\n        return 0;\n      }\n      var maxDuration = this.notes[this.notes.length - 1].ticks + this.notes[this.notes.length - 1].durationTicks;\n      for (var i2 = 0; i2 < this.notes.length - 1; i2++) {\n        var duration2 = this.notes[i2].ticks + this.notes[i2].durationTicks;\n        if (maxDuration < duration2) {\n          maxDuration = duration2;\n        }\n      }\n      return maxDuration;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Track2.prototype.fromJSON = function(json) {\n    var _this = this;\n    this.name = json.name;\n    this.channel = json.channel;\n    this.instrument = new Instrument_1.Instrument(void 0, this);\n    this.instrument.fromJSON(json.instrument);\n    if (json.endOfTrackTicks !== void 0) {\n      this.endOfTrackTicks = json.endOfTrackTicks;\n    }\n    for (var number in json.controlChanges) {\n      if (json.controlChanges[number]) {\n        json.controlChanges[number].forEach(function(cc) {\n          _this.addCC({\n            number: cc.number,\n            ticks: cc.ticks,\n            value: cc.value\n          });\n        });\n      }\n    }\n    json.notes.forEach(function(n2) {\n      _this.addNote({\n        durationTicks: n2.durationTicks,\n        midi: n2.midi,\n        ticks: n2.ticks,\n        velocity: n2.velocity\n      });\n    });\n  };\n  Track2.prototype.toJSON = function() {\n    var controlChanges = {};\n    for (var i2 = 0; i2 < 127; i2++) {\n      if (this.controlChanges.hasOwnProperty(i2)) {\n        controlChanges[i2] = this.controlChanges[i2].map(function(c2) {\n          return c2.toJSON();\n        });\n      }\n    }\n    var json = {\n      channel: this.channel,\n      controlChanges,\n      pitchBends: this.pitchBends.map(function(pb) {\n        return pb.toJSON();\n      }),\n      instrument: this.instrument.toJSON(),\n      name: this.name,\n      notes: this.notes.map(function(n2) {\n        return n2.toJSON();\n      })\n    };\n    if (this.endOfTrackTicks !== void 0) {\n      json.endOfTrackTicks = this.endOfTrackTicks;\n    }\n    return json;\n  };\n  return Track2;\n}();\nTrack$1.Track = Track;\nvar Encode = {};\nfunction flatten(array) {\n  var result = [];\n  $flatten(array, result);\n  return result;\n}\nfunction $flatten(array, result) {\n  for (var i2 = 0; i2 < array.length; i2++) {\n    var value = array[i2];\n    if (Array.isArray(value)) {\n      $flatten(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n}\nvar dist_es2015 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  flatten\n}, Symbol.toStringTag, { value: \"Module\" }));\nvar require$$2 = /* @__PURE__ */ getAugmentedNamespace(dist_es2015);\nvar __spreadArray = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from, pack) {\n  if (pack || arguments.length === 2)\n    for (var i2 = 0, l2 = from.length, ar; i2 < l2; i2++) {\n      if (ar || !(i2 in from)) {\n        if (!ar)\n          ar = Array.prototype.slice.call(from, 0, i2);\n        ar[i2] = from[i2];\n      }\n    }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(Encode, \"__esModule\", { value: true });\nEncode.encode = void 0;\nvar midi_file_1 = midiFile;\nvar Header_1 = Header;\nvar array_flatten_1 = require$$2;\nfunction encodeNote(note2, channel) {\n  return [\n    {\n      absoluteTime: note2.ticks,\n      channel,\n      deltaTime: 0,\n      noteNumber: note2.midi,\n      type: \"noteOn\",\n      velocity: Math.floor(note2.velocity * 127)\n    },\n    {\n      absoluteTime: note2.ticks + note2.durationTicks,\n      channel,\n      deltaTime: 0,\n      noteNumber: note2.midi,\n      type: \"noteOff\",\n      velocity: Math.floor(note2.noteOffVelocity * 127)\n    }\n  ];\n}\nfunction encodeNotes(track) {\n  return (0, array_flatten_1.flatten)(track.notes.map(function(note2) {\n    return encodeNote(note2, track.channel);\n  }));\n}\nfunction encodeControlChange(cc, channel) {\n  return {\n    absoluteTime: cc.ticks,\n    channel,\n    controllerType: cc.number,\n    deltaTime: 0,\n    type: \"controller\",\n    value: Math.floor(cc.value * 127)\n  };\n}\nfunction encodeControlChanges(track) {\n  var controlChanges = [];\n  for (var i2 = 0; i2 < 127; i2++) {\n    if (track.controlChanges.hasOwnProperty(i2)) {\n      track.controlChanges[i2].forEach(function(cc) {\n        controlChanges.push(encodeControlChange(cc, track.channel));\n      });\n    }\n  }\n  return controlChanges;\n}\nfunction encodePitchBend(pb, channel) {\n  return {\n    absoluteTime: pb.ticks,\n    channel,\n    deltaTime: 0,\n    type: \"pitchBend\",\n    value: pb.value\n  };\n}\nfunction encodePitchBends(track) {\n  var pitchBends = [];\n  track.pitchBends.forEach(function(pb) {\n    pitchBends.push(encodePitchBend(pb, track.channel));\n  });\n  return pitchBends;\n}\nfunction encodeInstrument(track) {\n  return {\n    absoluteTime: 0,\n    channel: track.channel,\n    deltaTime: 0,\n    programNumber: track.instrument.number,\n    type: \"programChange\"\n  };\n}\nfunction encodeTrackName(name2) {\n  return {\n    absoluteTime: 0,\n    deltaTime: 0,\n    meta: true,\n    text: name2,\n    type: \"trackName\"\n  };\n}\nfunction encodeTempo(tempo2) {\n  return {\n    absoluteTime: tempo2.ticks,\n    deltaTime: 0,\n    meta: true,\n    microsecondsPerBeat: Math.floor(6e7 / tempo2.bpm),\n    type: \"setTempo\"\n  };\n}\nfunction encodeTimeSignature(timeSig) {\n  return {\n    absoluteTime: timeSig.ticks,\n    deltaTime: 0,\n    denominator: timeSig.timeSignature[1],\n    meta: true,\n    metronome: 24,\n    numerator: timeSig.timeSignature[0],\n    thirtyseconds: 8,\n    type: \"timeSignature\"\n  };\n}\nfunction encodeKeySignature(keySig) {\n  var keyIndex = Header_1.keySignatureKeys.indexOf(keySig.key);\n  return {\n    absoluteTime: keySig.ticks,\n    deltaTime: 0,\n    key: keyIndex + 7,\n    meta: true,\n    scale: keySig.scale === \"major\" ? 0 : 1,\n    type: \"keySignature\"\n  };\n}\nfunction encodeText(textEvent) {\n  return {\n    absoluteTime: textEvent.ticks,\n    deltaTime: 0,\n    meta: true,\n    text: textEvent.text,\n    type: textEvent.type\n  };\n}\nfunction encode(midi2) {\n  var midiData = {\n    header: {\n      format: 1,\n      numTracks: midi2.tracks.length + 1,\n      ticksPerBeat: midi2.header.ppq\n    },\n    tracks: __spreadArray([\n      __spreadArray(__spreadArray(__spreadArray(__spreadArray([\n        {\n          absoluteTime: 0,\n          deltaTime: 0,\n          meta: true,\n          text: midi2.header.name,\n          type: \"trackName\"\n        }\n      ], midi2.header.keySignatures.map(function(keySig) {\n        return encodeKeySignature(keySig);\n      }), true), midi2.header.meta.map(function(e2) {\n        return encodeText(e2);\n      }), true), midi2.header.tempos.map(function(tempo2) {\n        return encodeTempo(tempo2);\n      }), true), midi2.header.timeSignatures.map(function(timeSig) {\n        return encodeTimeSignature(timeSig);\n      }), true)\n    ], midi2.tracks.map(function(track) {\n      return __spreadArray(__spreadArray(__spreadArray([\n        encodeTrackName(track.name),\n        encodeInstrument(track)\n      ], encodeNotes(track), true), encodeControlChanges(track), true), encodePitchBends(track), true);\n    }), true)\n  };\n  midiData.tracks = midiData.tracks.map(function(track) {\n    track = track.sort(function(a2, b2) {\n      return a2.absoluteTime - b2.absoluteTime;\n    });\n    var lastTime = 0;\n    track.forEach(function(note2) {\n      note2.deltaTime = note2.absoluteTime - lastTime;\n      lastTime = note2.absoluteTime;\n      delete note2.absoluteTime;\n    });\n    track.push({\n      deltaTime: 0,\n      meta: true,\n      type: \"endOfTrack\"\n    });\n    return track;\n  });\n  return new Uint8Array((0, midi_file_1.writeMidi)(midiData));\n}\nEncode.encode = encode;\n(function(exports) {\n  var __awaiter = commonjsGlobal && commonjsGlobal.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function(resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e2) {\n          reject(e2);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e2) {\n          reject(e2);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  var __generator = commonjsGlobal && commonjsGlobal.__generator || function(thisArg, body) {\n    var _ = { label: 0, sent: function() {\n      if (t2[0] & 1)\n        throw t2[1];\n      return t2[1];\n    }, trys: [], ops: [] }, f2, y2, t2, g2;\n    return g2 = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g2[Symbol.iterator] = function() {\n      return this;\n    }), g2;\n    function verb(n2) {\n      return function(v2) {\n        return step([n2, v2]);\n      };\n    }\n    function step(op) {\n      if (f2)\n        throw new TypeError(\"Generator is already executing.\");\n      while (_)\n        try {\n          if (f2 = 1, y2 && (t2 = op[0] & 2 ? y2[\"return\"] : op[0] ? y2[\"throw\"] || ((t2 = y2[\"return\"]) && t2.call(y2), 0) : y2.next) && !(t2 = t2.call(y2, op[1])).done)\n            return t2;\n          if (y2 = 0, t2)\n            op = [op[0] & 2, t2.value];\n          switch (op[0]) {\n            case 0:\n            case 1:\n              t2 = op;\n              break;\n            case 4:\n              _.label++;\n              return { value: op[1], done: false };\n            case 5:\n              _.label++;\n              y2 = op[1];\n              op = [0];\n              continue;\n            case 7:\n              op = _.ops.pop();\n              _.trys.pop();\n              continue;\n            default:\n              if (!(t2 = _.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                _ = 0;\n                continue;\n              }\n              if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {\n                _.label = op[1];\n                break;\n              }\n              if (op[0] === 6 && _.label < t2[1]) {\n                _.label = t2[1];\n                t2 = op;\n                break;\n              }\n              if (t2 && _.label < t2[2]) {\n                _.label = t2[2];\n                _.ops.push(op);\n                break;\n              }\n              if (t2[2])\n                _.ops.pop();\n              _.trys.pop();\n              continue;\n          }\n          op = body.call(thisArg, _);\n        } catch (e2) {\n          op = [6, e2];\n          y2 = 0;\n        } finally {\n          f2 = t2 = 0;\n        }\n      if (op[0] & 5)\n        throw op[1];\n      return { value: op[0] ? op[1] : void 0, done: true };\n    }\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.Header = exports.Track = exports.Midi = void 0;\n  var midi_file_12 = midiFile;\n  var Header_12 = Header;\n  var Track_1 = Track$1;\n  var Encode_1 = Encode;\n  var Midi2 = function() {\n    function Midi3(midiArray) {\n      var _this = this;\n      var midiData = null;\n      if (midiArray) {\n        var midiArrayLike = midiArray instanceof ArrayBuffer ? new Uint8Array(midiArray) : midiArray;\n        midiData = (0, midi_file_12.parseMidi)(midiArrayLike);\n        midiData.tracks.forEach(function(track) {\n          var currentTicks = 0;\n          track.forEach(function(event) {\n            currentTicks += event.deltaTime;\n            event.absoluteTime = currentTicks;\n          });\n        });\n        midiData.tracks = splitTracks(midiData.tracks);\n      }\n      this.header = new Header_12.Header(midiData);\n      this.tracks = [];\n      if (midiArray) {\n        this.tracks = midiData.tracks.map(function(trackData) {\n          return new Track_1.Track(trackData, _this.header);\n        });\n        if (midiData.header.format === 1 && this.tracks[0].duration === 0) {\n          this.tracks.shift();\n        }\n      }\n    }\n    Midi3.fromUrl = function(url) {\n      return __awaiter(this, void 0, void 0, function() {\n        var response, arrayBuffer;\n        return __generator(this, function(_a2) {\n          switch (_a2.label) {\n            case 0:\n              return [4, fetch(url)];\n            case 1:\n              response = _a2.sent();\n              if (!response.ok)\n                return [3, 3];\n              return [4, response.arrayBuffer()];\n            case 2:\n              arrayBuffer = _a2.sent();\n              return [2, new Midi3(arrayBuffer)];\n            case 3:\n              throw new Error(\"Could not load '\".concat(url, \"'\"));\n          }\n        });\n      });\n    };\n    Object.defineProperty(Midi3.prototype, \"name\", {\n      get: function() {\n        return this.header.name;\n      },\n      set: function(n2) {\n        this.header.name = n2;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(Midi3.prototype, \"duration\", {\n      get: function() {\n        var durations = this.tracks.map(function(t2) {\n          return t2.duration;\n        });\n        return Math.max.apply(Math, durations);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(Midi3.prototype, \"durationTicks\", {\n      get: function() {\n        var durationTicks = this.tracks.map(function(t2) {\n          return t2.durationTicks;\n        });\n        return Math.max.apply(Math, durationTicks);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Midi3.prototype.addTrack = function() {\n      var track = new Track_1.Track(void 0, this.header);\n      this.tracks.push(track);\n      return track;\n    };\n    Midi3.prototype.toArray = function() {\n      return (0, Encode_1.encode)(this);\n    };\n    Midi3.prototype.toJSON = function() {\n      return {\n        header: this.header.toJSON(),\n        tracks: this.tracks.map(function(track) {\n          return track.toJSON();\n        })\n      };\n    };\n    Midi3.prototype.fromJSON = function(json) {\n      var _this = this;\n      this.header = new Header_12.Header();\n      this.header.fromJSON(json.header);\n      this.tracks = json.tracks.map(function(trackJSON) {\n        var track = new Track_1.Track(void 0, _this.header);\n        track.fromJSON(trackJSON);\n        return track;\n      });\n    };\n    Midi3.prototype.clone = function() {\n      var midi2 = new Midi3();\n      midi2.fromJSON(this.toJSON());\n      return midi2;\n    };\n    return Midi3;\n  }();\n  exports.Midi = Midi2;\n  var Track_2 = Track$1;\n  Object.defineProperty(exports, \"Track\", { enumerable: true, get: function() {\n    return Track_2.Track;\n  } });\n  var Header_2 = Header;\n  Object.defineProperty(exports, \"Header\", { enumerable: true, get: function() {\n    return Header_2.Header;\n  } });\n  function splitTracks(tracks2) {\n    var newTracks = [];\n    for (var i2 = 0; i2 < tracks2.length; i2++) {\n      var defaultTrack = newTracks.length;\n      var trackMap = /* @__PURE__ */ new Map();\n      var currentProgram = Array(16).fill(0);\n      for (var _i = 0, _a2 = tracks2[i2]; _i < _a2.length; _i++) {\n        var event_1 = _a2[_i];\n        var targetTrack = defaultTrack;\n        var channel = event_1.channel;\n        if (channel !== void 0) {\n          if (event_1.type === \"programChange\") {\n            currentProgram[channel] = event_1.programNumber;\n          }\n          var program = currentProgram[channel];\n          var trackKey = \"\".concat(program, \" \").concat(channel);\n          if (trackMap.has(trackKey)) {\n            targetTrack = trackMap.get(trackKey);\n          } else {\n            targetTrack = defaultTrack + trackMap.size;\n            trackMap.set(trackKey, targetTrack);\n          }\n        }\n        if (!newTracks[targetTrack]) {\n          newTracks.push([]);\n        }\n        newTracks[targetTrack].push(event_1);\n      }\n    }\n    return newTracks;\n  }\n})(Midi);\nfunction createAndDownloadBlobFile(body, filename, extension = \"mid\") {\n  const blob = new Blob([body]);\n  const fileName = `${filename}.${extension}`;\n  if (navigator.msSaveBlob) {\n    navigator.msSaveBlob(blob, fileName);\n  } else {\n    const link = document.createElement(\"a\");\n    if (link.download !== void 0) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", fileName);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n}\nconst loops = reactive([]);\nfunction useLoop(order = 0) {\n  const loop = reactive({\n    pitch: computed(() => globalScale.tonic),\n    chroma: computed(() => globalScale.set.chroma),\n    metre: {\n      over: useStorage(`grid-${order}-over`, 4),\n      under: useStorage(`grid-${order}-under`, 4)\n    },\n    octave: useStorage(`grid-${order}-octave`, 3),\n    volume: useStorage(`grid-${order}-vol`, 1),\n    pan: useStorage(`grid-${order}-pan`, order % 2 == 1 ? -0.5 : 0.5),\n    probability: useStorage(`grid-${order}-probability`, 1),\n    tonic: computed(() => {\n      return loop.pitch + 12 * loop.octave - 3;\n    }),\n    steps: useStorage(`grid-${order}-steps`, []),\n    current: [],\n    progress: computed(() => {\n      if (tempo.ticks) {\n        return sequence == null ? void 0 : sequence.progress;\n      } else {\n        return 0;\n      }\n    }),\n    clear() {\n      loop.steps.forEach((step, s2) => {\n        loop.steps[s2] = [{}];\n      });\n    },\n    rotate(way = 1) {\n      loop.steps = rotateArray(loop.steps, way);\n    }\n  });\n  loops[order] = loop;\n  const { channel } = createChannel$1(`grid-loop-${order}`);\n  const panner = new PanVol(loop.pan, 0).connect(channel);\n  const synth2 = new PolySynth({\n    envelope: {\n      attack: 0.5,\n      release: 0.2\n    },\n    filterEnvelope: {\n      attack: 0.1,\n      release: 0.2\n    }\n  }).connect(panner);\n  synth2.maxPolyphony = 100;\n  let sequence = new Sequence((time, step) => {\n    beatClick(step, time);\n  }, loop.steps, loop.metre.under + \"n\").start(0);\n  watch(() => loop.metre.under, () => {\n    sequence.stop().dispose();\n    sequence = new Sequence((time, step) => {\n      beatClick(step, time);\n    }, loop.steps, loop.metre.under + \"n\").start(0);\n    sequence.probability = loop.probability;\n  });\n  watch(() => loop.metre.over, () => {\n    if (loop.steps.length > loop.metre.over) {\n      loop.steps.length = loop.metre.over;\n    } else {\n      for (let i2 = loop.steps.length; i2 < loop.metre.over; i2++) {\n        loop.steps.push([{}]);\n      }\n    }\n    sequence.events = loop.steps;\n  }, { immediate: true });\n  watchEffect(() => {\n    sequence.events = loop.steps;\n  });\n  watchEffect(() => {\n    if (tempo.stopped) {\n      loop.current = null;\n    }\n  });\n  watchEffect(() => {\n    sequence.probability = loop.probability;\n    panner.volume.targetRampTo(gainToDb(loop.volume), 1);\n    panner.pan.targetRampTo(loop.pan, 1);\n  });\n  function beatClick(step, time) {\n    if (context.state == \"suspended\") {\n      start$1();\n    }\n    let notes2 = Object.entries(step).map((entry) => {\n      if (entry[0] == \"sub\")\n        return;\n      return entry[1] ? Midi$1(Number(entry[0]) + loop.tonic) : null;\n    }).filter(Number);\n    synth2.triggerAttackRelease(notes2, { [loop.metre.under + \"n\"]: 1 / (step.sub || 1) }, time);\n    Draw.schedule(() => {\n      let dur = Time({\n        [loop.metre.under + \"n\"]: 1 / (step.sub || 1)\n      }).toMilliseconds();\n      let midiNotes = notes2.map((n2) => n2.toMidi());\n      midiPlay(midiNotes, { duration: dur, attack: loop.volume });\n    }, time);\n  }\n  onBeforeUnmount(() => {\n    loops.splice(order, 1);\n    sequence.stop().dispose();\n    panner.dispose();\n    synth2.dispose();\n  });\n  return loop;\n}\nconst mic = reactive({\n  initiated: false,\n  open: false,\n  opened: false,\n  monitor: false,\n  meter: 0,\n  volume: useClamp(useStorage(\"mic-vol\", 1), 0, 2),\n  gate: useClamp(useStorage(\"mic-gate\", -60), -100, -40)\n});\nlet meter, input, gate, compressor;\nfunction useMic() {\n  if (!mic.initiated) {\n    meter = new Meter();\n    meter.normalRange = true;\n    input = new UserMedia();\n    compressor = new Compressor({ threshold: -20, ratio: 2 }).connect(meter);\n    gate = new Gate({ threshold: -60, smoothing: 1 });\n    input.connect(gate);\n    gate.connect(compressor);\n    const { channel } = createChannel$1(\"mic\");\n    watch(() => mic.open, (o2) => {\n      if (o2) {\n        input.open().then(() => {\n          mic.opened = true;\n          useRafFn(() => {\n            mic.meter = meter.getValue();\n          });\n        });\n      } else {\n        input.close();\n        mic.opened = false;\n      }\n    });\n    watch(() => mic.monitor, (mon) => mon ? meter.connect(channel) : meter.disconnect(channel));\n    watch(() => mic.volume, (vol) => input.volume.rampTo(gainToDb(vol)), { immediate: true });\n    watch(() => mic.gate, (g2) => gate.threshold = g2, { immediate: true });\n  }\n  return { mic, input };\n}\nfunction useSvgMouse() {\n  const svg = ref(null);\n  const area = ref(null);\n  const { pressed } = useMousePressed();\n  const mouse = reactive({\n    x: 0,\n    y: 0,\n    normX: 0,\n    normY: 0,\n    pressed,\n    inside: false\n  });\n  onMounted(() => {\n    svg.value.addEventListener(\"mousemove\", getCursorPosition);\n    const { isOutside } = useMouseInElement(area);\n    watch(isOutside, (out) => {\n      mouse.inside = !out;\n    });\n  });\n  function getCursorPosition(event, svgElement = svg.value, rect = area.value) {\n    if (!svgElement)\n      return;\n    var svgPoint = svgElement.createSVGPoint();\n    svgPoint.x = event.clientX;\n    svgPoint.y = event.clientY;\n    let correct = svgPoint.matrixTransform(svgElement.getScreenCTM().inverse());\n    if (rect) {\n      let bounds = rect.getBBox();\n      mouse.x = correct.x < bounds.width ? correct.x < 0 ? 0 : correct.x : bounds.width;\n      mouse.y = correct.y < bounds.height ? correct.y < 0 ? 0 : correct.y : bounds.height;\n      mouse.normY = 1 - mouse.y / bounds.height;\n      mouse.normX = mouse.x / bounds.width;\n    } else {\n      mouse.x = correct.x;\n      mouse.y = correct.y;\n    }\n  }\n  return {\n    svg,\n    area,\n    mouse\n  };\n}\nconst types = { brown: \"brown\", pink: \"pink\", white: \"white\" };\nconst filterTypes = { lowpass: \"LP\", highpass: \"HP\", bandpass: \"BP\" };\nconst filterLFOTypes = {\n  sine: \"SIN\",\n  triangle: \"TRI\",\n  square: \"SQR\",\n  sawtooth: \"SAW\"\n};\nconst options = useStorage(\"noise-options\", {\n  noise: {\n    type: \"pink\"\n  },\n  envelope: {\n    attack: 0.1,\n    decay: 0.1,\n    sustain: 0.9,\n    release: 1\n  },\n  volume: 1\n});\nconst filterOptions = useStorage(\"filter-options\", {\n  on: false,\n  play: false,\n  volume: 0.5,\n  baseFrequency: 50,\n  depth: 0.1,\n  frequency: 1,\n  octaves: 2,\n  wet: 1,\n  type: \"sine\",\n  filter: {\n    Q: 1,\n    type: \"lowpass\"\n  }\n});\nconst pannerOptions = useStorage(\"panner-options\", {\n  on: false,\n  play: false,\n  wet: 1,\n  frequency: 1,\n  depth: 1,\n  volume: 1\n});\nconst crusherOptions = useStorage(\"bit-options\", {\n  on: false,\n  bits: 16,\n  wet: 1,\n  volume: 1\n});\nfunction useNoise() {\n  const active = ref(false);\n  const fftData = ref([]);\n  const fftFreq = ref([]);\n  const { channel } = createChannel$1(\"noise\");\n  const fft = new FFT({ size: 512, smoothing: 0.2 }).connect(channel);\n  for (let j2 = 0; j2 < 32; j2++) {\n    fftFreq.value[j2] = fft.getFrequencyOfIndex(j2);\n  }\n  const gain = new Gain(options.value.volume).connect(fft);\n  const filterGain = new Gain(filterOptions.value.volume).connect(fft);\n  const pannerGain = new Gain(pannerOptions.value.volume).connect(fft);\n  const crusherGain = new Gain(crusherOptions.value.volume).connect(fft);\n  const panner = new AutoPanner(pannerOptions.value).connect(pannerGain);\n  const crusher = new BitCrusher(crusherOptions.value).connect(crusherGain).connect(panner);\n  const filter2 = new AutoFilter(filterOptions.value).connect(filterGain).connect(crusher);\n  const synth2 = new NoiseSynth(options.value).connect(gain).connect(filter2);\n  useRafFn(() => {\n    let arr = fft.getValue();\n    for (let j2 = 0; j2 < 32; j2++) {\n      fftData.value[j2] = dbToGain(arr[j2]) * 10;\n    }\n  });\n  onKeyStroke(\" \", (e2) => {\n    e2.preventDefault();\n    active.value = true;\n  }, { eventName: \"keydown\" });\n  onKeyStroke(\" \", (e2) => {\n    active.value = false;\n  }, { eventName: \"keyup\" });\n  watch(active, (act) => {\n    if (act) {\n      synth2.triggerAttack();\n    } else {\n      synth2.triggerRelease();\n    }\n  });\n  watch(options.value, () => {\n    synth2.set(options.value);\n  });\n  watch(() => options.value.volume, (vol) => {\n    gain.gain.rampTo(vol, 1);\n  });\n  onBeforeUnmount(() => {\n    synth2.triggerRelease();\n  });\n  watch(filterOptions.value, (opt) => {\n    opt.play ? filter2.start() : filter2.stop();\n    if (opt.on) {\n      filterGain.gain.rampTo(filterOptions.value.volume, 0.2);\n    } else {\n      filterGain.gain.rampTo(0, 0.2);\n    }\n    filter2.set(opt);\n  });\n  watch(pannerOptions.value, (opt) => {\n    opt.play ? panner.start() : panner.stop();\n    opt.on ? pannerGain.gain.rampTo(pannerOptions.value.volume, 0.2) : pannerGain.gain.rampTo(0, 0.2);\n    panner.set(opt);\n  });\n  watch(crusherOptions.value, (opt) => {\n    opt.on ? crusherGain.gain.rampTo(crusherOptions.value.volume, 0.2) : crusherGain.gain.rampTo(0, 0.2);\n    crusher.set(opt);\n  });\n  return {\n    options,\n    filterOptions,\n    pannerOptions,\n    crusherOptions,\n    active,\n    fftData,\n    fftFreq,\n    types,\n    filterTypes,\n    filterLFOTypes\n  };\n}\nlet piano;\nfunction usePiano() {\n  init$1();\n  return { init: init$1, piano, pianoOnce, pianoAttack, pianoRelease, pianoReleaseAll };\n}\nfunction init$1() {\n  start$1();\n  if (piano)\n    return;\n  const { channel } = createChannel$1(\"piano\");\n  piano = new Sampler({\n    urls: {\n      A0: \"A0.mp3\",\n      C1: \"C1.mp3\",\n      \"D#1\": \"Ds1.mp3\",\n      \"F#1\": \"Fs1.mp3\",\n      A1: \"A1.mp3\",\n      C2: \"C2.mp3\",\n      \"D#2\": \"Ds2.mp3\",\n      \"F#2\": \"Fs2.mp3\",\n      A2: \"A2.mp3\",\n      C3: \"C3.mp3\",\n      \"D#3\": \"Ds3.mp3\",\n      \"F#3\": \"Fs3.mp3\",\n      A3: \"A3.mp3\",\n      C4: \"C4.mp3\",\n      \"D#4\": \"Ds4.mp3\",\n      \"F#4\": \"Fs4.mp3\",\n      A4: \"A4.mp3\",\n      C5: \"C5.mp3\",\n      \"D#5\": \"Ds5.mp3\",\n      \"F#5\": \"Fs5.mp3\",\n      A5: \"A5.mp3\",\n      C6: \"C6.mp3\",\n      \"D#6\": \"Ds6.mp3\",\n      \"F#6\": \"Fs6.mp3\",\n      A6: \"A6.mp3\",\n      C7: \"C7.mp3\",\n      \"D#7\": \"Ds7.mp3\",\n      \"F#7\": \"Fs7.mp3\",\n      A7: \"A7.mp3\",\n      C8: \"C8.mp3\"\n    },\n    release: 1,\n    volume: -10,\n    baseUrl: \"/audio/piano/\"\n  }).connect(channel);\n}\nfunction pianoOnce(note2 = \"A4\", duration2 = \"8n\", time) {\n  if (!piano)\n    return init$1();\n  piano.triggerAttackRelease(note2, duration2, time);\n}\nfunction pianoAttack(note2, velocity) {\n  if (!piano)\n    return init$1();\n  piano.triggerAttack(note2, now(), velocity);\n}\nfunction pianoRelease(note2) {\n  if (!piano)\n    return init$1();\n  piano.triggerRelease(note2);\n}\nfunction pianoReleaseAll() {\n  if (!piano)\n    return init$1();\n  piano.releaseAll();\n}\nconst tracks = reactive([]);\nfunction useSequence(metre = {\n  over: 4,\n  under: 4,\n  sound: \"A\",\n  volume: 1\n}, order = 0, mode = \"bar\") {\n  let pan = order % 2 == 1 ? -0.5 : 0.5;\n  const audio2 = {\n    meter: null,\n    mic: null,\n    recorder: null,\n    panner: null,\n    synth: null\n  };\n  const { channel } = createChannel$1(`sequence-${mode}-${order}`);\n  audio2.panner = new PanVol(pan, 0).connect(channel);\n  audio2.synth = new Sampler({\n    urls: {\n      A1: \"tongue/high.wav\",\n      A2: \"tongue/low.wav\",\n      B1: \"synth/high.wav\",\n      B2: \"synth/low.wav\",\n      C1: \"seiko/high.wav\",\n      C2: \"seiko/low.wav\",\n      D1: \"/ping/high.wav\",\n      D2: \"/ping/low.wav\",\n      E1: \"/logic/high.wav\",\n      E2: \"/logic/low.wav\"\n    },\n    volume: 1,\n    envelope: {\n      attack: 1e-3,\n      release: 2\n    },\n    baseUrl: \"/audio/metronome/\"\n  }).connect(audio2.panner);\n  audio2.recorder = new Recorder();\n  const recorder2 = reactive({\n    recording: false,\n    main: false,\n    accent: false,\n    both: computed(() => recorder2.main && recorder2.accent),\n    async load(pos = \"main\", blob) {\n      let arr = await blob.arrayBuffer();\n      let buff = await audio2.recorder.context.decodeAudioData(arr);\n      audio2.synth.add(pos == \"main\" ? \"F1\" : \"F2\", buff);\n      recorder2[pos] = true;\n      recorder2.recording = false;\n    },\n    async rec(pos = \"main\") {\n      if (!recorder2.recording) {\n        audio2.meter = new Meter().connect(audio2.recorder);\n        audio2.mic = new UserMedia(1).connect(audio2.meter);\n        audio2.mic.open().then(() => {\n          recorder2.recording = pos;\n          audio2.recorder.start();\n        }).catch((e2) => {\n          console.log(\"mic not open\");\n        });\n      } else {\n        let blob = await audio2.recorder.stop();\n        let arr = await blob.arrayBuffer();\n        let buff = await audio2.recorder.context.decodeAudioData(arr);\n        audio2.synth.add(pos == \"main\" ? \"F1\" : \"F2\", buff);\n        recorder2[pos] = true;\n        recorder2.recording = false;\n      }\n    }\n  });\n  watch(() => metre.sound, (sound) => {\n    if (sound != \"F\") {\n      recorder2.main = false;\n      recorder2.accent = false;\n    }\n  });\n  const current = ref(\"0-0\");\n  const steps = reactive([[\"0-1\"], [\"1-1\"], [\"2-1\"], [\"3-1\"]]);\n  const mutes = useStorage(`metro-${mode}-mutes-${order}`, []);\n  const accents = useStorage(`metro-${mode}-accents-${order}`, [true]);\n  const volume = useClamp(useStorage(`metro-${mode}-vol-${order}`, metre.volume || 1), 0, 1);\n  const panning = useClamp(useStorage(`metro-${mode}-pan-${order}`, pan), -1, 1);\n  const mutesCount = computed(() => mutes.value.reduce((acc, val) => {\n    if (!val) {\n      acc++;\n    }\n    return acc;\n  }, 0));\n  const euclidSeq = computed(() => mutesCount.value > 0 && mutesCount.value < steps.length ? getEuclideanRhythm(mutesCount.value, steps.length) : new Array(steps.length).fill(\"1\").join(\"\"));\n  const currentSeq = computed(() => mutes.value.reduce((acc, val) => val ? acc + \"0\" : acc + \"1\", \"\"));\n  const isEuclidean = computed(() => euclidSeq.value == currentSeq.value);\n  function reset() {\n    let arr = [];\n    euclidSeq.value.split(\"\").forEach((e2, i2) => {\n      arr[i2] = e2 != false && e2 != null ? false : true;\n    });\n    mutes.value = arr;\n  }\n  let sequence = new Sequence((time, step) => {\n    beatClick(step, time);\n  }, steps, metre.under + \"n\").start(0);\n  watch(() => metre.under, () => {\n    sequence.stop().dispose();\n    sequence = new Sequence((time, step) => {\n      beatClick(step, time);\n    }, steps, metre.under + \"n\").start(0);\n  });\n  watch(() => metre.over, () => {\n    steps.length = 0;\n    for (let i2 = 0; i2 < metre.over; i2++) {\n      steps.push([`${i2}-1`]);\n    }\n    sequence.events = steps;\n  }, { immediate: true });\n  watchEffect(() => {\n    sequence.events = steps;\n    accents.value.length = steps.length;\n    mutes.value.length = steps.length;\n  });\n  watchEffect(() => {\n    if (tempo.stopped) {\n      current.value = \"1000-1\";\n    }\n  });\n  watch(volume, (vol) => {\n    audio2.panner.volume.targetRampTo(gainToDb(vol), 1);\n  }, { immediate: true });\n  watch(panning, (p2) => {\n    audio2.panner.pan.targetRampTo(p2, 1);\n  }, { immediate: true });\n  const progress = computed(() => {\n    if (tempo.ticks) {\n      return sequence.progress;\n    } else {\n      return 0;\n    }\n  });\n  function beatClick(step, time) {\n    if (context.state == \"suspended\") {\n      start$1();\n    }\n    let mainStep = typeof step == \"string\" ? +step.split(\"-\")[0] : step;\n    Draw.schedule(() => {\n      current.value = step;\n    }, time);\n    let accented = accents.value[mainStep] && step.split(\"-\")[1] == \"1\";\n    if (mutes.value[mainStep])\n      return;\n    if (mutes.value[step])\n      return;\n    if (metre.sound == \"F\" && !accented && !recorder2.main)\n      return;\n    if (metre.sound == \"F\" && accented && !recorder2.accent)\n      return;\n    let note2 = `${metre.sound}${accented ? 2 : 1}`;\n    audio2.synth.triggerAttackRelease(note2, metre.under + \"n\", time);\n  }\n  const lastHit = ref(0);\n  onKeyStroke(\"Shift\", () => {\n    lastHit.value = progress.value;\n  });\n  onBeforeUnmount(() => {\n    sequence.stop().dispose();\n    audio2.panner.dispose();\n    audio2.synth.dispose();\n  });\n  tracks[order] = reactive({\n    metre: computed(() => metre),\n    steps,\n    mutes,\n    accents,\n    mutesCount,\n    isEuclidean,\n    reset\n  });\n  return {\n    progress,\n    current,\n    steps,\n    mutes,\n    accents,\n    volume,\n    panning,\n    recorder: recorder2,\n    lastHit,\n    reset,\n    isEuclidean\n  };\n}\nfunction _getEuclideanRhythm(m2, k2, input2) {\n  input2 = input2 || new Array(m2).fill(\"1\").concat(new Array(k2).fill(\"0\"));\n  const output = [];\n  for (let i2 = 0; i2 < Math.min(m2, k2); i2++) {\n    output.push(input2.shift() + input2.pop());\n  }\n  if (input2.length > 1) {\n    return _getEuclideanRhythm(output.length, input2.length, output.concat(input2));\n  }\n  return output.concat(input2);\n}\nfunction getEuclideanRhythm(x2, total) {\n  return _getEuclideanRhythm(x2, total - x2).join(\"\");\n}\nvar meyda_min = { exports: {} };\n(function(module, exports) {\n  !function(r2, t2) {\n    module.exports = t2();\n  }(commonjsGlobal, function() {\n    function r2(r3, t3, e3) {\n      if (e3 || arguments.length === 2)\n        for (var a3, n3 = 0, o3 = t3.length; n3 < o3; n3++)\n          !a3 && n3 in t3 || (a3 || (a3 = Array.prototype.slice.call(t3, 0, n3)), a3[n3] = t3[n3]);\n      return r3.concat(a3 || Array.prototype.slice.call(t3));\n    }\n    var t2 = Object.freeze({ __proto__: null, blackman: function(r3) {\n      for (var t3 = new Float32Array(r3), e3 = 2 * Math.PI / (r3 - 1), a3 = 2 * e3, n3 = 0; n3 < r3 / 2; n3++)\n        t3[n3] = 0.42 - 0.5 * Math.cos(n3 * e3) + 0.08 * Math.cos(n3 * a3);\n      for (n3 = Math.ceil(r3 / 2); n3 > 0; n3--)\n        t3[r3 - n3] = t3[n3 - 1];\n      return t3;\n    }, sine: function(r3) {\n      for (var t3 = Math.PI / (r3 - 1), e3 = new Float32Array(r3), a3 = 0; a3 < r3; a3++)\n        e3[a3] = Math.sin(t3 * a3);\n      return e3;\n    }, hanning: function(r3) {\n      for (var t3 = new Float32Array(r3), e3 = 0; e3 < r3; e3++)\n        t3[e3] = 0.5 - 0.5 * Math.cos(2 * Math.PI * e3 / (r3 - 1));\n      return t3;\n    }, hamming: function(r3) {\n      for (var t3 = new Float32Array(r3), e3 = 0; e3 < r3; e3++)\n        t3[e3] = 0.54 - 0.46 * Math.cos(2 * Math.PI * (e3 / r3 - 1));\n      return t3;\n    } }), e2 = {};\n    function a2(r3) {\n      for (; r3 % 2 == 0 && r3 > 1; )\n        r3 /= 2;\n      return r3 === 1;\n    }\n    function n2(r3, a3) {\n      if (a3 !== \"rect\") {\n        if (a3 !== \"\" && a3 || (a3 = \"hanning\"), e2[a3] || (e2[a3] = {}), !e2[a3][r3.length])\n          try {\n            e2[a3][r3.length] = t2[a3](r3.length);\n          } catch (r4) {\n            throw new Error(\"Invalid windowing function\");\n          }\n        r3 = function(r4, t3) {\n          for (var e3 = [], a4 = 0; a4 < Math.min(r4.length, t3.length); a4++)\n            e3[a4] = r4[a4] * t3[a4];\n          return e3;\n        }(r3, e2[a3][r3.length]);\n      }\n      return r3;\n    }\n    function o2(r3, t3, e3) {\n      for (var a3 = new Float32Array(r3), n3 = 0; n3 < a3.length; n3++)\n        a3[n3] = n3 * t3 / e3, a3[n3] = 13 * Math.atan(a3[n3] / 1315.8) + 3.5 * Math.atan(Math.pow(a3[n3] / 7518, 2));\n      return a3;\n    }\n    function i2(r3) {\n      return Float32Array.from(r3);\n    }\n    function u2(r3) {\n      return 1125 * Math.log(1 + r3 / 700);\n    }\n    function f2(r3, t3, e3) {\n      for (var a3, n3 = new Float32Array(r3 + 2), o3 = new Float32Array(r3 + 2), i3 = t3 / 2, f3 = u2(0), c3 = (u2(i3) - f3) / (r3 + 1), l3 = new Array(r3 + 2), s3 = 0; s3 < n3.length; s3++)\n        n3[s3] = s3 * c3, o3[s3] = (a3 = n3[s3], 700 * (Math.exp(a3 / 1125) - 1)), l3[s3] = Math.floor((e3 + 1) * o3[s3] / t3);\n      for (var m3 = new Array(r3), p3 = 0; p3 < m3.length; p3++) {\n        m3[p3] = new Array(e3 / 2 + 1).fill(0);\n        for (s3 = l3[p3]; s3 < l3[p3 + 1]; s3++)\n          m3[p3][s3] = (s3 - l3[p3]) / (l3[p3 + 1] - l3[p3]);\n        for (s3 = l3[p3 + 1]; s3 < l3[p3 + 2]; s3++)\n          m3[p3][s3] = (l3[p3 + 2] - s3) / (l3[p3 + 2] - l3[p3 + 1]);\n      }\n      return m3;\n    }\n    function c2(t3, e3, a3, n3, o3, i3, u3) {\n      n3 === void 0 && (n3 = 5), o3 === void 0 && (o3 = 2), i3 === void 0 && (i3 = true), u3 === void 0 && (u3 = 440);\n      var f3 = Math.floor(a3 / 2) + 1, c3 = new Array(a3).fill(0).map(function(r3, n4) {\n        return t3 * function(r4, t4) {\n          return Math.log2(16 * r4 / t4);\n        }(e3 * n4 / a3, u3);\n      });\n      c3[0] = c3[1] - 1.5 * t3;\n      var l3, s3, m3, p3 = c3.slice(1).map(function(r3, t4) {\n        return Math.max(r3 - c3[t4]);\n      }, 1).concat([1]), h3 = Math.round(t3 / 2), g3 = new Array(t3).fill(0).map(function(r3, e4) {\n        return c3.map(function(r4) {\n          return (10 * t3 + h3 + r4 - e4) % t3 - h3;\n        });\n      }), w3 = g3.map(function(r3, t4) {\n        return r3.map(function(r4, e4) {\n          return Math.exp(-0.5 * Math.pow(2 * g3[t4][e4] / p3[e4], 2));\n        });\n      });\n      if (s3 = (l3 = w3)[0].map(function() {\n        return 0;\n      }), m3 = l3.reduce(function(r3, t4) {\n        return t4.forEach(function(t5, e4) {\n          r3[e4] += Math.pow(t5, 2);\n        }), r3;\n      }, s3).map(Math.sqrt), w3 = l3.map(function(r3, t4) {\n        return r3.map(function(r4, t5) {\n          return r4 / (m3[t5] || 1);\n        });\n      }), o3) {\n        var v3 = c3.map(function(r3) {\n          return Math.exp(-0.5 * Math.pow((r3 / t3 - n3) / o3, 2));\n        });\n        w3 = w3.map(function(r3) {\n          return r3.map(function(r4, t4) {\n            return r4 * v3[t4];\n          });\n        });\n      }\n      return i3 && (w3 = r2(r2([], w3.slice(3), true), w3.slice(0, 3), true)), w3.map(function(r3) {\n        return r3.slice(0, f3);\n      });\n    }\n    function l2(r3, t3) {\n      for (var e3 = 0, a3 = 0, n3 = 0; n3 < t3.length; n3++)\n        e3 += Math.pow(n3, r3) * Math.abs(t3[n3]), a3 += t3[n3];\n      return e3 / a3;\n    }\n    function s2(r3) {\n      var t3 = r3.ampSpectrum, e3 = r3.barkScale, a3 = r3.numberOfBarkBands, n3 = a3 === void 0 ? 24 : a3;\n      if (typeof t3 != \"object\" || typeof e3 != \"object\")\n        throw new TypeError();\n      var o3 = n3, i3 = new Float32Array(o3), u3 = 0, f3 = t3, c3 = new Int32Array(o3 + 1);\n      c3[0] = 0;\n      for (var l3 = e3[f3.length - 1] / o3, s3 = 1, m3 = 0; m3 < f3.length; m3++)\n        for (; e3[m3] > l3; )\n          c3[s3++] = m3, l3 = s3 * e3[f3.length - 1] / o3;\n      c3[o3] = f3.length - 1;\n      for (m3 = 0; m3 < o3; m3++) {\n        for (var p3 = 0, h3 = c3[m3]; h3 < c3[m3 + 1]; h3++)\n          p3 += f3[h3];\n        i3[m3] = Math.pow(p3, 0.23);\n      }\n      for (m3 = 0; m3 < i3.length; m3++)\n        u3 += i3[m3];\n      return { specific: i3, total: u3 };\n    }\n    function m2(r3) {\n      var t3 = r3.ampSpectrum;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      for (var e3 = new Float32Array(t3.length), a3 = 0; a3 < e3.length; a3++)\n        e3[a3] = Math.pow(t3[a3], 2);\n      return e3;\n    }\n    function p2(r3) {\n      var t3 = r3.ampSpectrum, e3 = r3.melFilterBank, a3 = r3.bufferSize;\n      if (typeof t3 != \"object\")\n        throw new TypeError(\"Valid ampSpectrum is required to generate melBands\");\n      if (typeof e3 != \"object\")\n        throw new TypeError(\"Valid melFilterBank is required to generate melBands\");\n      for (var n3 = m2({ ampSpectrum: t3 }), o3 = e3.length, i3 = Array(o3), u3 = new Float32Array(o3), f3 = 0; f3 < u3.length; f3++) {\n        i3[f3] = new Float32Array(a3 / 2), u3[f3] = 0;\n        for (var c3 = 0; c3 < a3 / 2; c3++)\n          i3[f3][c3] = e3[f3][c3] * n3[c3], u3[f3] += i3[f3][c3];\n        u3[f3] = Math.log(u3[f3] + 1);\n      }\n      return Array.prototype.slice.call(u3);\n    }\n    function h2(r3) {\n      return r3 && r3.__esModule && Object.prototype.hasOwnProperty.call(r3, \"default\") ? r3.default : r3;\n    }\n    var g2 = { exports: {} }, w2 = null;\n    var v2 = function(r3, t3) {\n      var e3 = r3.length;\n      return t3 = t3 || 2, w2 && w2[e3] || function(r4) {\n        (w2 = w2 || {})[r4] = new Array(r4 * r4);\n        for (var t4 = Math.PI / r4, e4 = 0; e4 < r4; e4++)\n          for (var a3 = 0; a3 < r4; a3++)\n            w2[r4][a3 + e4 * r4] = Math.cos(t4 * (a3 + 0.5) * e4);\n      }(e3), r3.map(function() {\n        return 0;\n      }).map(function(a3, n3) {\n        return t3 * r3.reduce(function(r4, t4, a4, o3) {\n          return r4 + t4 * w2[e3][a4 + n3 * e3];\n        }, 0);\n      });\n    };\n    !function(r3) {\n      r3.exports = v2;\n    }(g2);\n    var d2 = h2(g2.exports);\n    var y2 = Object.freeze({ __proto__: null, buffer: function(r3) {\n      return r3.signal;\n    }, rms: function(r3) {\n      var t3 = r3.signal;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      for (var e3 = 0, a3 = 0; a3 < t3.length; a3++)\n        e3 += Math.pow(t3[a3], 2);\n      return e3 /= t3.length, e3 = Math.sqrt(e3);\n    }, energy: function(r3) {\n      var t3 = r3.signal;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      for (var e3 = 0, a3 = 0; a3 < t3.length; a3++)\n        e3 += Math.pow(Math.abs(t3[a3]), 2);\n      return e3;\n    }, complexSpectrum: function(r3) {\n      return r3.complexSpectrum;\n    }, spectralSlope: function(r3) {\n      var t3 = r3.ampSpectrum, e3 = r3.sampleRate, a3 = r3.bufferSize;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      for (var n3 = 0, o3 = 0, i3 = new Float32Array(t3.length), u3 = 0, f3 = 0, c3 = 0; c3 < t3.length; c3++) {\n        n3 += t3[c3];\n        var l3 = c3 * e3 / a3;\n        i3[c3] = l3, u3 += l3 * l3, o3 += l3, f3 += l3 * t3[c3];\n      }\n      return (t3.length * f3 - o3 * n3) / (n3 * (u3 - Math.pow(o3, 2)));\n    }, spectralCentroid: function(r3) {\n      var t3 = r3.ampSpectrum;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      return l2(1, t3);\n    }, spectralRolloff: function(r3) {\n      var t3 = r3.ampSpectrum, e3 = r3.sampleRate;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      for (var a3 = t3, n3 = e3 / (2 * (a3.length - 1)), o3 = 0, i3 = 0; i3 < a3.length; i3++)\n        o3 += a3[i3];\n      for (var u3 = 0.99 * o3, f3 = a3.length - 1; o3 > u3 && f3 >= 0; )\n        o3 -= a3[f3], --f3;\n      return (f3 + 1) * n3;\n    }, spectralFlatness: function(r3) {\n      var t3 = r3.ampSpectrum;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      for (var e3 = 0, a3 = 0, n3 = 0; n3 < t3.length; n3++)\n        e3 += Math.log(t3[n3]), a3 += t3[n3];\n      return Math.exp(e3 / t3.length) * t3.length / a3;\n    }, spectralSpread: function(r3) {\n      var t3 = r3.ampSpectrum;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      return Math.sqrt(l2(2, t3) - Math.pow(l2(1, t3), 2));\n    }, spectralSkewness: function(r3) {\n      var t3 = r3.ampSpectrum;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      var e3 = l2(1, t3), a3 = l2(2, t3), n3 = l2(3, t3);\n      return (2 * Math.pow(e3, 3) - 3 * e3 * a3 + n3) / Math.pow(Math.sqrt(a3 - Math.pow(e3, 2)), 3);\n    }, spectralKurtosis: function(r3) {\n      var t3 = r3.ampSpectrum;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      var e3 = t3, a3 = l2(1, e3), n3 = l2(2, e3), o3 = l2(3, e3), i3 = l2(4, e3);\n      return (-3 * Math.pow(a3, 4) + 6 * a3 * n3 - 4 * a3 * o3 + i3) / Math.pow(Math.sqrt(n3 - Math.pow(a3, 2)), 4);\n    }, amplitudeSpectrum: function(r3) {\n      return r3.ampSpectrum;\n    }, zcr: function(r3) {\n      var t3 = r3.signal;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      for (var e3 = 0, a3 = 1; a3 < t3.length; a3++)\n        (t3[a3 - 1] >= 0 && t3[a3] < 0 || t3[a3 - 1] < 0 && t3[a3] >= 0) && e3++;\n      return e3;\n    }, loudness: s2, perceptualSpread: function(r3) {\n      for (var t3 = s2({ ampSpectrum: r3.ampSpectrum, barkScale: r3.barkScale }), e3 = 0, a3 = 0; a3 < t3.specific.length; a3++)\n        t3.specific[a3] > e3 && (e3 = t3.specific[a3]);\n      return Math.pow((t3.total - e3) / t3.total, 2);\n    }, perceptualSharpness: function(r3) {\n      for (var t3 = s2({ ampSpectrum: r3.ampSpectrum, barkScale: r3.barkScale }), e3 = t3.specific, a3 = 0, n3 = 0; n3 < e3.length; n3++)\n        a3 += n3 < 15 ? (n3 + 1) * e3[n3 + 1] : 0.066 * Math.exp(0.171 * (n3 + 1));\n      return a3 *= 0.11 / t3.total;\n    }, powerSpectrum: m2, mfcc: function(r3) {\n      var t3 = r3.ampSpectrum, e3 = r3.melFilterBank, a3 = r3.numberOfMFCCCoefficients, n3 = r3.bufferSize, o3 = Math.min(40, Math.max(1, a3 || 13));\n      if (e3.length < o3)\n        throw new Error(\"Insufficient filter bank for requested number of coefficients\");\n      var i3 = p2({ ampSpectrum: t3, melFilterBank: e3, bufferSize: n3 });\n      return d2(i3).slice(0, o3);\n    }, chroma: function(r3) {\n      var t3 = r3.ampSpectrum, e3 = r3.chromaFilterBank;\n      if (typeof t3 != \"object\")\n        throw new TypeError(\"Valid ampSpectrum is required to generate chroma\");\n      if (typeof e3 != \"object\")\n        throw new TypeError(\"Valid chromaFilterBank is required to generate chroma\");\n      var a3 = e3.map(function(r4, e4) {\n        return t3.reduce(function(t4, e5, a4) {\n          return t4 + e5 * r4[a4];\n        }, 0);\n      }), n3 = Math.max.apply(Math, a3);\n      return n3 ? a3.map(function(r4) {\n        return r4 / n3;\n      }) : a3;\n    }, spectralFlux: function(r3) {\n      var t3 = r3.signal, e3 = r3.previousSignal, a3 = r3.bufferSize;\n      if (typeof t3 != \"object\" || typeof e3 != \"object\")\n        throw new TypeError();\n      for (var n3 = 0, o3 = -a3 / 2; o3 < t3.length / 2 - 1; o3++)\n        x = Math.abs(t3[o3]) - Math.abs(e3[o3]), n3 += (x + Math.abs(x)) / 2;\n      return n3;\n    }, spectralCrest: function(r3) {\n      var t3 = r3.ampSpectrum;\n      if (typeof t3 != \"object\")\n        throw new TypeError();\n      var e3 = 0, a3 = -1 / 0;\n      return t3.forEach(function(r4) {\n        e3 += Math.pow(r4, 2), a3 = r4 > a3 ? r4 : a3;\n      }), e3 /= t3.length, e3 = Math.sqrt(e3), a3 / e3;\n    }, melBands: p2 });\n    function S2(r3) {\n      if (Array.isArray(r3)) {\n        for (var t3 = 0, e3 = Array(r3.length); t3 < r3.length; t3++)\n          e3[t3] = r3[t3];\n        return e3;\n      }\n      return Array.from(r3);\n    }\n    var _ = {}, b2 = {}, M2 = { bitReverseArray: function(r3) {\n      if (_[r3] === void 0) {\n        for (var t3 = (r3 - 1).toString(2).length, e3 = \"0\".repeat(t3), a3 = {}, n3 = 0; n3 < r3; n3++) {\n          var o3 = n3.toString(2);\n          o3 = e3.substr(o3.length) + o3, o3 = [].concat(S2(o3)).reverse().join(\"\"), a3[n3] = parseInt(o3, 2);\n        }\n        _[r3] = a3;\n      }\n      return _[r3];\n    }, multiply: function(r3, t3) {\n      return { real: r3.real * t3.real - r3.imag * t3.imag, imag: r3.real * t3.imag + r3.imag * t3.real };\n    }, add: function(r3, t3) {\n      return { real: r3.real + t3.real, imag: r3.imag + t3.imag };\n    }, subtract: function(r3, t3) {\n      return { real: r3.real - t3.real, imag: r3.imag - t3.imag };\n    }, euler: function(r3, t3) {\n      var e3 = -2 * Math.PI * r3 / t3;\n      return { real: Math.cos(e3), imag: Math.sin(e3) };\n    }, conj: function(r3) {\n      return r3.imag *= -1, r3;\n    }, constructComplexArray: function(r3) {\n      var t3 = {};\n      t3.real = r3.real === void 0 ? r3.slice() : r3.real.slice();\n      var e3 = t3.real.length;\n      return b2[e3] === void 0 && (b2[e3] = Array.apply(null, Array(e3)).map(Number.prototype.valueOf, 0)), t3.imag = b2[e3].slice(), t3;\n    } }, F = function(r3) {\n      var t3 = {};\n      r3.real === void 0 || r3.imag === void 0 ? t3 = M2.constructComplexArray(r3) : (t3.real = r3.real.slice(), t3.imag = r3.imag.slice());\n      var e3 = t3.real.length, a3 = Math.log2(e3);\n      if (Math.round(a3) != a3)\n        throw new Error(\"Input size must be a power of 2.\");\n      if (t3.real.length != t3.imag.length)\n        throw new Error(\"Real and imaginary components must have the same length.\");\n      for (var n3 = M2.bitReverseArray(e3), o3 = { real: [], imag: [] }, i3 = 0; i3 < e3; i3++)\n        o3.real[n3[i3]] = t3.real[i3], o3.imag[n3[i3]] = t3.imag[i3];\n      for (var u3 = 0; u3 < e3; u3++)\n        t3.real[u3] = o3.real[u3], t3.imag[u3] = o3.imag[u3];\n      for (var f3 = 1; f3 <= a3; f3++)\n        for (var c3 = Math.pow(2, f3), l3 = 0; l3 < c3 / 2; l3++)\n          for (var s3 = M2.euler(l3, c3), m3 = 0; m3 < e3 / c3; m3++) {\n            var p3 = c3 * m3 + l3, h3 = c3 * m3 + l3 + c3 / 2, g3 = { real: t3.real[p3], imag: t3.imag[p3] }, w3 = { real: t3.real[h3], imag: t3.imag[h3] }, v3 = M2.multiply(s3, w3), d3 = M2.subtract(g3, v3);\n            t3.real[h3] = d3.real, t3.imag[h3] = d3.imag;\n            var y3 = M2.add(v3, g3);\n            t3.real[p3] = y3.real, t3.imag[p3] = y3.imag;\n          }\n      return t3;\n    }, A = F, E = function() {\n      function r3(r4, t3) {\n        var e3 = this;\n        if (this._m = t3, !r4.audioContext)\n          throw this._m.errors.noAC;\n        if (r4.bufferSize && !a2(r4.bufferSize))\n          throw this._m._errors.notPow2;\n        if (!r4.source)\n          throw this._m._errors.noSource;\n        this._m.audioContext = r4.audioContext, this._m.bufferSize = r4.bufferSize || this._m.bufferSize || 256, this._m.hopSize = r4.hopSize || this._m.hopSize || this._m.bufferSize, this._m.sampleRate = r4.sampleRate || this._m.audioContext.sampleRate || 44100, this._m.callback = r4.callback, this._m.windowingFunction = r4.windowingFunction || \"hanning\", this._m.featureExtractors = y2, this._m.EXTRACTION_STARTED = r4.startImmediately || false, this._m.channel = typeof r4.channel == \"number\" ? r4.channel : 0, this._m.inputs = r4.inputs || 1, this._m.outputs = r4.outputs || 1, this._m.numberOfMFCCCoefficients = r4.numberOfMFCCCoefficients || this._m.numberOfMFCCCoefficients || 13, this._m.numberOfBarkBands = r4.numberOfBarkBands || this._m.numberOfBarkBands || 24, this._m.spn = this._m.audioContext.createScriptProcessor(this._m.bufferSize, this._m.inputs, this._m.outputs), this._m.spn.connect(this._m.audioContext.destination), this._m._featuresToExtract = r4.featureExtractors || [], this._m.barkScale = o2(this._m.bufferSize, this._m.sampleRate, this._m.bufferSize), this._m.melFilterBank = f2(Math.max(this._m.melBands, this._m.numberOfMFCCCoefficients), this._m.sampleRate, this._m.bufferSize), this._m.inputData = null, this._m.previousInputData = null, this._m.frame = null, this._m.previousFrame = null, this.setSource(r4.source), this._m.spn.onaudioprocess = function(r5) {\n          var t4;\n          e3._m.inputData !== null && (e3._m.previousInputData = e3._m.inputData), e3._m.inputData = r5.inputBuffer.getChannelData(e3._m.channel), e3._m.previousInputData ? ((t4 = new Float32Array(e3._m.previousInputData.length + e3._m.inputData.length - e3._m.hopSize)).set(e3._m.previousInputData.slice(e3._m.hopSize)), t4.set(e3._m.inputData, e3._m.previousInputData.length - e3._m.hopSize)) : t4 = e3._m.inputData, function(r6, t5, e4) {\n            if (r6.length < t5)\n              throw new Error(\"Buffer is too short for frame length\");\n            if (e4 < 1)\n              throw new Error(\"Hop length cannot be less that 1\");\n            if (t5 < 1)\n              throw new Error(\"Frame length cannot be less that 1\");\n            var a3 = 1 + Math.floor((r6.length - t5) / e4);\n            return new Array(a3).fill(0).map(function(a4, n3) {\n              return r6.slice(n3 * e4, n3 * e4 + t5);\n            });\n          }(t4, e3._m.bufferSize, e3._m.hopSize).forEach(function(r6) {\n            e3._m.frame = r6;\n            var t5 = e3._m.extract(e3._m._featuresToExtract, e3._m.frame, e3._m.previousFrame);\n            typeof e3._m.callback == \"function\" && e3._m.EXTRACTION_STARTED && e3._m.callback(t5), e3._m.previousFrame = e3._m.frame;\n          });\n        };\n      }\n      return r3.prototype.start = function(r4) {\n        this._m._featuresToExtract = r4 || this._m._featuresToExtract, this._m.EXTRACTION_STARTED = true;\n      }, r3.prototype.stop = function() {\n        this._m.EXTRACTION_STARTED = false;\n      }, r3.prototype.setSource = function(r4) {\n        this._m.source && this._m.source.disconnect(this._m.spn), this._m.source = r4, this._m.source.connect(this._m.spn);\n      }, r3.prototype.setChannel = function(r4) {\n        r4 <= this._m.inputs ? this._m.channel = r4 : console.error(\"Channel \".concat(r4, \" does not exist. Make sure you've provided a value for 'inputs' that is greater than \").concat(r4, \" when instantiating the MeydaAnalyzer\"));\n      }, r3.prototype.get = function(r4) {\n        return this._m.inputData ? this._m.extract(r4 || this._m._featuresToExtract, this._m.inputData, this._m.previousInputData) : null;\n      }, r3;\n    }(), C = { audioContext: null, spn: null, bufferSize: 512, sampleRate: 44100, melBands: 26, chromaBands: 12, callback: null, windowingFunction: \"hanning\", featureExtractors: y2, EXTRACTION_STARTED: false, numberOfMFCCCoefficients: 13, numberOfBarkBands: 24, _featuresToExtract: [], windowing: n2, _errors: { notPow2: new Error(\"Meyda: Buffer size must be a power of 2, e.g. 64 or 512\"), featureUndef: new Error(\"Meyda: No features defined.\"), invalidFeatureFmt: new Error(\"Meyda: Invalid feature format\"), invalidInput: new Error(\"Meyda: Invalid input.\"), noAC: new Error(\"Meyda: No AudioContext specified.\"), noSource: new Error(\"Meyda: No source node specified.\") }, createMeydaAnalyzer: function(r3) {\n      return new E(r3, Object.assign({}, C));\n    }, listAvailableFeatureExtractors: function() {\n      return Object.keys(this.featureExtractors);\n    }, extract: function(r3, t3, e3) {\n      var n3 = this;\n      if (!t3)\n        throw this._errors.invalidInput;\n      if (typeof t3 != \"object\")\n        throw this._errors.invalidInput;\n      if (!r3)\n        throw this._errors.featureUndef;\n      if (!a2(t3.length))\n        throw this._errors.notPow2;\n      this.barkScale !== void 0 && this.barkScale.length == this.bufferSize || (this.barkScale = o2(this.bufferSize, this.sampleRate, this.bufferSize)), this.melFilterBank !== void 0 && this.barkScale.length == this.bufferSize && this.melFilterBank.length == this.melBands || (this.melFilterBank = f2(Math.max(this.melBands, this.numberOfMFCCCoefficients), this.sampleRate, this.bufferSize)), this.chromaFilterBank !== void 0 && this.chromaFilterBank.length == this.chromaBands || (this.chromaFilterBank = c2(this.chromaBands, this.sampleRate, this.bufferSize)), \"buffer\" in t3 && t3.buffer === void 0 ? this.signal = i2(t3) : this.signal = t3;\n      var u3 = k2(t3, this.windowingFunction, this.bufferSize);\n      if (this.signal = u3.windowedSignal, this.complexSpectrum = u3.complexSpectrum, this.ampSpectrum = u3.ampSpectrum, e3) {\n        var l3 = k2(e3, this.windowingFunction, this.bufferSize);\n        this.previousSignal = l3.windowedSignal, this.previousComplexSpectrum = l3.complexSpectrum, this.previousAmpSpectrum = l3.ampSpectrum;\n      }\n      var s3 = function(r4) {\n        return n3.featureExtractors[r4]({ ampSpectrum: n3.ampSpectrum, chromaFilterBank: n3.chromaFilterBank, complexSpectrum: n3.complexSpectrum, signal: n3.signal, bufferSize: n3.bufferSize, sampleRate: n3.sampleRate, barkScale: n3.barkScale, melFilterBank: n3.melFilterBank, previousSignal: n3.previousSignal, previousAmpSpectrum: n3.previousAmpSpectrum, previousComplexSpectrum: n3.previousComplexSpectrum, numberOfMFCCCoefficients: n3.numberOfMFCCCoefficients, numberOfBarkBands: n3.numberOfBarkBands });\n      };\n      if (typeof r3 == \"object\")\n        return r3.reduce(function(r4, t4) {\n          var e4;\n          return Object.assign({}, r4, ((e4 = {})[t4] = s3(t4), e4));\n        }, {});\n      if (typeof r3 == \"string\")\n        return s3(r3);\n      throw this._errors.invalidFeatureFmt;\n    } }, k2 = function(r3, t3, e3) {\n      var a3 = {};\n      r3.buffer === void 0 ? a3.signal = i2(r3) : a3.signal = r3, a3.windowedSignal = n2(a3.signal, t3), a3.complexSpectrum = A(a3.windowedSignal), a3.ampSpectrum = new Float32Array(e3 / 2);\n      for (var o3 = 0; o3 < e3 / 2; o3++)\n        a3.ampSpectrum[o3] = Math.sqrt(Math.pow(a3.complexSpectrum.real[o3], 2) + Math.pow(a3.complexSpectrum.imag[o3], 2));\n      return a3;\n    };\n    return typeof window != \"undefined\" && (window.Meyda = C), C;\n  });\n})(meyda_min);\nvar Meyda = /* @__PURE__ */ getDefaultExportFromCjs(meyda_min.exports);\nconst noteStrings = [\n  \"C\",\n  \"C\\u266F\",\n  \"D\",\n  \"D\\u266F\",\n  \"E\",\n  \"F\",\n  \"F\\u266F\",\n  \"G\",\n  \"G\\u266F\",\n  \"A\",\n  \"A\\u266F\",\n  \"B\"\n];\nconst settings = {\n  middleA: 440,\n  semitone: 69\n};\nconst tuner = reactive({\n  initiated: false,\n  stream: null,\n  middleA: settings.middleA,\n  semitone: settings.semitone,\n  note: {\n    name: \"A\",\n    value: 69,\n    cents: 0,\n    octave: 4,\n    frequency: 440,\n    color: freqColor(440),\n    silent: false\n  },\n  span: 64,\n  bufferSize: 4096,\n  tempoBufferSize: 512,\n  frequencyData: null,\n  running: false,\n  frame: 0,\n  beat: 0,\n  bpm: 0,\n  confidence: 0,\n  listenBeat: false,\n  prevBeat: 0,\n  blink: false,\n  chroma: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  spec: [],\n  rms: 0\n});\nconst chain = {};\nfunction useTuner() {\n  initGetUserMedia();\n  return {\n    init,\n    tuner,\n    chain\n  };\n}\nfunction init() {\n  tuner.initiated = true;\n  chain.audioContext = new window.AudioContext();\n  chain.analyser = chain.audioContext.createAnalyser();\n  chain.scriptProcessor = chain.audioContext.createScriptProcessor(tuner.bufferSize, 1, 1);\n  chain.beatProcessor = chain.audioContext.createScriptProcessor(tuner.tempoBufferSize, 1, 1);\n  watch(() => tuner.frame, () => {\n    if (!tuner.listen)\n      return;\n    if (tuner.beat > tuner.prevBeat) {\n      tuner.prevBeat = tuner.beat;\n      tuner.blink = true;\n      setTimeout(() => {\n        tuner.blink = false;\n      }, 60);\n    }\n  });\n  chain.meyda = Meyda.createMeydaAnalyzer({\n    audioContext: chain.audioContext,\n    source: chain.analyser,\n    bufferSize: 4096,\n    featureExtractors: [\"chroma\", \"amplitudeSpectrum\", \"rms\"],\n    callback: (features) => {\n      tuner.rms = features.rms;\n      tuner.chroma = features.chroma;\n      tuner.spec = features.amplitudeSpectrum;\n    }\n  });\n  chain.meyda.start();\n  tuner.frequencyData = new Uint8Array(chain.analyser.frequencyBinCount);\n  Aubio$1().then(function(aubio) {\n    chain.pitchDetector = new aubio.Pitch(\"default\", tuner.bufferSize, 1, chain.audioContext.sampleRate);\n    chain.tempoAnalyzer = new aubio.Tempo(tuner.tempoBufferSize * 4, tuner.tempoBufferSize, chain.audioContext.sampleRate);\n    tuner.running = true;\n    start();\n  });\n}\nfunction start() {\n  navigator.mediaDevices.getUserMedia({ audio: true }).then(function(stream) {\n    tuner.stream = stream;\n    chain.audioContext.createMediaStreamSource(stream).connect(chain.analyser);\n    chain.analyser.connect(chain.scriptProcessor);\n    chain.analyser.connect(chain.beatProcessor);\n    chain.scriptProcessor.connect(chain.audioContext.destination);\n    chain.beatProcessor.connect(chain.audioContext.destination);\n    chain.beatProcessor.addEventListener(\"audioprocess\", (e2) => {\n      const tempo2 = chain.tempoAnalyzer.do(e2.inputBuffer.getChannelData(0));\n      if (tempo2) {\n        tuner.beat++;\n        tuner.confidence = chain.tempoAnalyzer.getConfidence();\n        tuner.bpm = chain.tempoAnalyzer.getBpm();\n      }\n    });\n    chain.scriptProcessor.addEventListener(\"audioprocess\", function(event) {\n      const frequency = chain.pitchDetector.do(event.inputBuffer.getChannelData(0));\n      tuner.frame++;\n      if (frequency) {\n        const note2 = getNote(frequency);\n        tuner.note = {\n          name: noteStrings[note2 % 12],\n          value: note2,\n          cents: getCents(frequency, note2),\n          octave: parseInt(note2 / 12) - 1,\n          frequency,\n          color: freqColor(frequency),\n          silent: false\n        };\n      } else {\n        tuner.note.silent = true;\n      }\n    });\n  }).catch(function(error) {\n    console.log(error.name + \": \" + error.message);\n  });\n}\nfunction getNote(frequency) {\n  const note2 = 12 * (Math.log(frequency / tuner.middleA) / Math.log(2));\n  return Math.round(note2) + tuner.semitone;\n}\nfunction getStandardFrequency(note2) {\n  return tuner.middleA * Math.pow(2, (note2 - tuner.semitone) / 12);\n}\nfunction getCents(frequency, note2) {\n  return Math.floor(1200 * Math.log(frequency / getStandardFrequency(note2)) / Math.log(2));\n}\nfunction freqColor(frequency) {\n  const note2 = getRawNote(frequency);\n  if (!note2)\n    return \"#333\";\n  const octave2 = parseInt(note2 / 12) + 2;\n  const color = pitchColor(note2, octave2);\n  return color;\n}\nfunction getRawNote(frequency) {\n  return 12 * (Math.log(frequency / settings.middleA) / Math.log(2)) % 12;\n}\nexport { midiAttack as $, getSupportedMimeTypes as A, fileNames as B, devices as C, cameras as D, microphones as E, ensureDevicesListPermissions as F, download as G, useRecording as H, cast as I, globalScale as J, playChromaOnce as K, playChroma as L, stopChroma as M, playNote as N, stopNote as O, lchToHsl as P, getColorInfo as Q, levelColor as R, chromaColorMix as S, setupKeyboard as T, useLoop as U, mic as V, useMic as W, midi$1 as X, learnCC as Y, playKey as Z, useMidi as _, channels as a, midiPlay as a0, midiStop as a1, midiRelease as a2, midiOnce$1 as a3, setCC as a4, stopAll as a5, forwardMidi as a6, createAndDownloadBlobFile as a7, useSvgMouse as a8, useNoise as a9, intervals as aA, noteNames as aB, notes as aC, chords as aD, scales as aE, tuner as aF, useTuner as aG, usePiano as aa, pianoOnce as ab, pianoAttack as ac, pianoRelease as ad, pianoReleaseAll as ae, recorder as af, recording as ag, record as ah, useRecorder as ai, tracks as aj, useSequence as ak, getEuclideanRhythm as al, quantizeModes as am, synth as an, useSynth as ao, synthOnce as ap, synthAttack as aq, synthRelease as ar, synthReleaseAll as as, tempo as at, useTempo as au, tap as av, chordType as aw, scaleType as ax, chordList as ay, scaleList as az, createChannel$1 as b, commonjsGlobal as c, midiA as d, pitchFreq as e, pitchColor as f, freqColor$1 as g, freqPitch as h, initGetUserMedia as i, isInChroma as j, getCircleCoord as k, clampNum as l, master as m, getCents$1 as n, getStandardFrequency$1 as o, pitchNoteOctave as p, currentCamera as q, rotateArray as r, currentMic as s, showRecordingDialog as t, useAudio as u, recordingName as v, recordCamera as w, mimeType as x, mimeExtMap as y, getFilename as z };\n"],
  "mappings": "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",
  "names": ["duration", "index", "input", "i", "options", "name", "start2", "get", "_a", "x", "y", "j", "k", "chain", "a", "b", "c", "channels", "r", "d", "e", "interval", "keys", "l", "t", "freq", "midi", "m", "s", "octave", "intervals", "devices", "cache", "p", "v", "n", "note", "types", "filter", "notes", "assert", "isFunction", "isString", "clamp", "handler", "range", "Midi", "Instrument", "Instrument2", "scaleIndexToNote", "noteToScaleIndex", "__awaiter", "Midi2", "start"]
}
